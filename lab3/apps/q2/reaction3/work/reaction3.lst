 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 183
    4                      ; Text size: 4628
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage\000"
   82  00003004  6500    	
   83  00003006          	.align 2
   84  00003008          	LC1_LF0:
   85  00003008  3c68616e	.ascii "<handle_to_shared_memory_page> <handle_to_page_mapped_semaphore<handle"
   85  0000300c  646c655f	
   85  00003010  746f5f73	
   85  00003014  68617265	
   85  00003018  645f6d65	
   85  0000301c  6d6f7279	
   85  00003020  5f706167	
   85  00003024  653e203c	
   85  00003028  68616e64	
   85  0000302c  6c655f74	
   85  00003030  6f5f7061	
   85  00003034  67655f6d	
   85  00003038  61707065	
   85  0000303c  645f7365	
   85  00003040  6d617068	
   85  00003044  6f72653c	
   85  00003048  68616e64	
   85  0000304c  6c65    	
   86  0000304e  20746f20	.ascii " to lock>\000"
   86  00003052  6c6f636b	
   86  00003056  3e00    	
   87  00003058          	.align 2
   88  00003058          	LC2_LF0:
   89  00003058  4832202b	.ascii "H2 + O2 + SO2 -> H2SO4 reacted, PID:%d\n\000"
   89  0000305c  204f3220	
   89  00003060  2b20534f	
   89  00003064  32202d3e	
   89  00003068  20483253	
   89  0000306c  4f342072	
   89  00003070  65616374	
   89  00003074  65642c20	
   89  00003078  5049443a	
   89  0000307c  25640a00	
   90  00003080          	.align 2
   91  00003080          	LC3_LF0:
   92  00003080  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
   92  00003084  73656d61	
   92  00003088  70686f72	
   92  0000308c  6520735f	
   92  00003090  70726f63	
   92  00003094  735f636f	
   92  00003098  6d706c65	
   92  0000309c  74656420	
   92  000030a0  28256429	
   92  000030a4  20696e20	
   92  000030a8  00      	
   93  000030a9          	.align 2
   94  000030ac          	LC4_LF0:
   95  000030ac  65786974	.ascii "exiting..\n\000"
   95  000030b0  696e672e	
   95  000030b4  2e0a00  	
   96  000030b7          	.text
   97  000010d4          	.align 2
   98  000010d4          	.proc _main
   99  000010d4          	.global _main
  100  000010d4          	_main:
  101                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  102  000010d4  afbefffc	sw	-4(r29),r30; push fp
  103  000010d8  001df020	add	r30,r0,r29; fp = sp
  104  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  105  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  106  000010e4  8fc20000	lw	r2,(r30)
  107  000010e8  8fc40004	lw	r4,4(r30)
  108  000010ec  0c00111c	jal	___main
  109  000010f0  54000000	nop; not filled.
  110  000010f4  64410007	snei	r1,r2,#7
  111  000010f8  1020004c	beqz	r1,L14_LF0
  112  000010fc  54000000	nop; not filled.
  113  00001100  23bdfff8	addi	r29,r29,#-8
  114  00001104  3c0a0000	lhi	r10,((LC0_LF0)>>16)&0xffff
  115  00001108  254a3000	addui	r10,r10,(LC0_LF0)&0xffff
  116  0000110c  afaa0000	sw	(r29),r10
  117  00001110  0c000248	jal	_Printf
  118  00001114  54000000	nop; not filled.
  119  00001118  8c8a0000	lw	r10,(r4)
  120  0000111c  afaa0000	sw	(r29),r10
  121  00001120  0c000238	jal	_Printf
  122  00001124  54000000	nop; not filled.
  123  00001128  3c0a0000	lhi	r10,((LC1_LF0)>>16)&0xffff
  124  0000112c  254a3008	addui	r10,r10,(LC1_LF0)&0xffff
  125  00001130  afaa0000	sw	(r29),r10
  126  00001134  0c000224	jal	_Printf
  127  00001138  54000000	nop; not filled.
  128  0000113c  0c000324	jal	_Exit
  129  00001140  54000000	nop; not filled.
  130  00001144  23bd0008	addi	r29,r29,#8
  131  00001148          	L14_LF0:
  132  00001148  23bdfff0	addi	r29,r29,#-16
  133  0000114c  8c8a0004	lw	r10,4(r4)
  134  00001150  afaa0000	sw	(r29),r10
  135  00001154  200a0000	addi	r10,r0,#0
  136  00001158  afaa0004	sw	4(r29),r10
  137  0000115c  200a000a	addi	r10,r0,#10
  138  00001160  afaa0008	sw	8(r29),r10
  139  00001164  0c000ba8	jal	_dstrtol
  140  00001168  54000000	nop; not filled.
  141  0000116c  00014820	add	r9,r0,r1
  142  00001170  8c8a0008	lw	r10,8(r4)
  143  00001174  afaa0000	sw	(r29),r10
  144  00001178  200a0000	addi	r10,r0,#0
  145  0000117c  afaa0004	sw	4(r29),r10
  146  00001180  200a000a	addi	r10,r0,#10
  147  00001184  afaa0008	sw	8(r29),r10
  148  00001188  0c000b84	jal	_dstrtol
  149  0000118c  54000000	nop; not filled.
  150  00001190  00014020	add	r8,r0,r1
  151  00001194  8c8a000c	lw	r10,12(r4)
  152  00001198  afaa0000	sw	(r29),r10
  153  0000119c  200a0000	addi	r10,r0,#0
  154  000011a0  afaa0004	sw	4(r29),r10
  155  000011a4  200a000a	addi	r10,r0,#10
  156  000011a8  afaa0008	sw	8(r29),r10
  157  000011ac  0c000b60	jal	_dstrtol
  158  000011b0  54000000	nop; not filled.
  159  000011b4  00013820	add	r7,r0,r1
  160  000011b8  8c8a0010	lw	r10,16(r4)
  161  000011bc  afaa0000	sw	(r29),r10
  162  000011c0  200a0000	addi	r10,r0,#0
  163  000011c4  afaa0004	sw	4(r29),r10
  164  000011c8  200a000a	addi	r10,r0,#10
  165  000011cc  afaa0008	sw	8(r29),r10
  166  000011d0  0c000b3c	jal	_dstrtol
  167  000011d4  54000000	nop; not filled.
  168  000011d8  00013020	add	r6,r0,r1
  169  000011dc  8c8a0014	lw	r10,20(r4)
  170  000011e0  afaa0000	sw	(r29),r10
  171  000011e4  200a0000	addi	r10,r0,#0
  172  000011e8  afaa0004	sw	4(r29),r10
  173  000011ec  200a000a	addi	r10,r0,#10
  174  000011f0  afaa0008	sw	8(r29),r10
  175  000011f4  0c000b18	jal	_dstrtol
  176  000011f8  54000000	nop; not filled.
  177  000011fc  00012820	add	r5,r0,r1
  178  00001200  8c8a0018	lw	r10,24(r4)
  179  00001204  afaa0000	sw	(r29),r10
  180  00001208  200a0000	addi	r10,r0,#0
  181  0000120c  afaa0004	sw	4(r29),r10
  182  00001210  200a000a	addi	r10,r0,#10
  183  00001214  afaa0008	sw	8(r29),r10
  184  00001218  0c000af4	jal	_dstrtol
  185  0000121c  54000000	nop; not filled.
  186  00001220  00011820	add	r3,r0,r1
  187  00001224  20020000	addi	r2,r0,#0
  188  00001228  23bd0010	addi	r29,r29,#16
  189  0000122c  0043082a	slt	r1,r2,r3
  190  00001230  1020006c	beqz	r1,L16_LF0
  191  00001234  54000000	nop; not filled.
  192  00001238          	L18_LF0:
  193  00001238  23bdfff8	addi	r29,r29,#-8
  194  0000123c  afa80000	sw	(r29),r8
  195  00001240  0c000160	jal	_sem_wait
  196  00001244  54000000	nop; not filled.
  197  00001248  afa70000	sw	(r29),r7
  198  0000124c  0c000154	jal	_sem_wait
  199  00001250  54000000	nop; not filled.
  200  00001254  afa60000	sw	(r29),r6
  201  00001258  0c000148	jal	_sem_wait
  202  0000125c  54000000	nop; not filled.
  203  00001260  afa50000	sw	(r29),r5
  204  00001264  0c000148	jal	_sem_signal
  205  00001268  54000000	nop; not filled.
  206  0000126c  0c0000f8	jal	_getpid
  207  00001270  54000000	nop; not filled.
  208  00001274  3c0a0000	lhi	r10,((LC2_LF0)>>16)&0xffff
  209  00001278  254a3058	addui	r10,r10,(LC2_LF0)&0xffff
  210  0000127c  afaa0000	sw	(r29),r10
  211  00001280  afa10004	sw	4(r29),r1
  212  00001284  0c0000d4	jal	_Printf
  213  00001288  54000000	nop; not filled.
  214  0000128c  23bd0008	addi	r29,r29,#8
  215  00001290  20420001	addi	r2,r2,#1
  216  00001294  0043082a	slt	r1,r2,r3
  217  00001298  1420ff9c	bnez	r1,L18_LF0
  218  0000129c  54000000	nop; not filled.
  219  000012a0          	L16_LF0:
  220  000012a0  23bdfff8	addi	r29,r29,#-8
  221  000012a4  afa90000	sw	(r29),r9
  222  000012a8  0c000104	jal	_sem_signal
  223  000012ac  54000000	nop; not filled.
  224  000012b0  23bd0008	addi	r29,r29,#8
  225  000012b4  64210001	snei	r1,r1,#1
  226  000012b8  10200050	beqz	r1,L20_LF0
  227  000012bc  54000000	nop; not filled.
  228  000012c0  23bdfff8	addi	r29,r29,#-8
  229  000012c4  3c0a0000	lhi	r10,((LC3_LF0)>>16)&0xffff
  230  000012c8  254a3080	addui	r10,r10,(LC3_LF0)&0xffff
  231  000012cc  afaa0000	sw	(r29),r10
  232  000012d0  afa90004	sw	4(r29),r9
  233  000012d4  0c000084	jal	_Printf
  234  000012d8  54000000	nop; not filled.
  235  000012dc  8c840000	lw	r4,(r4)
  236  000012e0  afa40000	sw	(r29),r4
  237  000012e4  0c000074	jal	_Printf
  238  000012e8  54000000	nop; not filled.
  239  000012ec  3c0a0000	lhi	r10,((LC4_LF0)>>16)&0xffff
  240  000012f0  254a30ac	addui	r10,r10,(LC4_LF0)&0xffff
  241  000012f4  afaa0000	sw	(r29),r10
  242  000012f8  0c000060	jal	_Printf
  243  000012fc  54000000	nop; not filled.
  244  00001300  0c000160	jal	_Exit
  245  00001304  54000000	nop; not filled.
  246  00001308  23bd0008	addi	r29,r29,#8
  247  0000130c          	L20_LF0:
  248  0000130c  0c000ef0	jal	_exit
  249  00001310  54000000	nop
  250  00001314          	.endproc _main
  251                      ;;;
  252                      ;;; Stub functions for DLX traps.
  253                      ;;;
  254                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  255                      ;;;
  256                      ;;; The traps such as Open and Close
  257                      ;;; (note the capital letters) are for use by user programs.  The traps
  258                      ;;; with names such as open and close (lower case) are for use by the OS.
  259                      ;;;
  262  00001314          	.align 2
  264                      ;;; The following are the traps to be used by user-level programs
  265                      ;;;
  267  00001314          	.align 2
  268  00001314          	.proc _Open
  269  00001314          	.global _Open
  270  00001314          	_Open:
  271                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  272                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  273                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  274  00001314  44000213	trap	#0x213
  275  00001318  4be00000	jr	r31
  276  0000131c  54000000	nop
  277  00001320          	.endproc _Open
  279  00001320          	.proc _Close
  280  00001320          	.global _Close
  281  00001320          	_Close:
  282  00001320  44000214	trap	#0x214
  283  00001324  4be00000	jr	r31
  284  00001328  54000000	nop
  285  0000132c          	.endproc _Close
  287  0000132c          	.proc _Read
  288  0000132c          	.global _Read
  289  0000132c          	_Read:
  290  0000132c  44000210	trap	#0x210
  291  00001330  4be00000	jr	r31
  292  00001334  54000000	nop
  293  00001338          	.endproc _Read
  295  00001338          	.proc _Write
  296  00001338          	.global _Write
  297  00001338          	_Write:
  298  00001338  44000211	trap	#0x211
  299  0000133c  4be00000	jr	r31
  300  00001340  54000000	nop
  301  00001344          	.endproc _Write
  303  00001344          	.proc _Lseek
  304  00001344          	.global _Lseek
  305  00001344          	_Lseek:
  306  00001344  44000212	trap	#0x212
  307  00001348  4be00000	jr	r31
  308  0000134c  54000000	nop
  309  00001350          	.endproc _Lseek
  311  00001350          	.proc _Putchar
  312  00001350          	.global _Putchar
  313  00001350          	_Putchar:
  314  00001350  44000280	trap	#0x280
  315  00001354  4be00000	jr	r31
  316  00001358  54000000	nop
  317  0000135c          	.endproc _Putchar
  319  0000135c          	.proc _Printf
  320  0000135c          	.global _Printf
  321  0000135c          	_Printf:
  322  0000135c  44000201	trap	#0x201
  323  00001360  4be00000	jr	r31
  324  00001364  54000000	nop
  325  00001368          	.endproc _Printf
  327  00001368          	.proc _getpid
  328  00001368          	.global _getpid
  329  00001368          	_getpid:
  330  00001368  44000431	trap	#0x431
  331  0000136c  4be00000	jr	r31
  332  00001370  54000000	nop
  333  00001374          	.endproc _getpid
  335  00001374          	.proc _process_create
  336  00001374          	.global _process_create
  337  00001374          	_process_create:
  338  00001374  44000432	trap	#0x432
  339  00001378  4be00000	jr	r31
  340  0000137c  54000000	nop
  341  00001380          	.endproc _process_create
  343  00001380          	.proc _shmget
  344  00001380          	.global _shmget
  345  00001380          	_shmget:
  346  00001380  44000440	trap	#0x440
  347  00001384  4be00000	jr	r31
  348  00001388  54000000	nop
  349  0000138c          	.endproc _shmget
  351  0000138c          	.proc _shmat
  352  0000138c          	.global _shmat
  353  0000138c          	_shmat:
  354  0000138c  44000441	trap	#0x441
  355  00001390  4be00000	jr	r31
  356  00001394  54000000	nop
  357  00001398          	.endproc _shmat
  359  00001398          	.proc _sem_create
  360  00001398          	.global _sem_create
  361  00001398          	_sem_create:
  362  00001398  44000450	trap	#0x450
  363  0000139c  4be00000	jr	r31
  364  000013a0  54000000	nop
  365  000013a4          	.endproc _sem_create
  367  000013a4          	.proc _sem_wait
  368  000013a4          	.global _sem_wait
  369  000013a4          	_sem_wait:
  370  000013a4  44000451	trap	#0x451
  371  000013a8  4be00000	jr	r31
  372  000013ac  54000000	nop
  373  000013b0          	.endproc _sem_wait
  375  000013b0          	.proc _sem_signal
  376  000013b0          	.global _sem_signal
  377  000013b0          	_sem_signal:
  378  000013b0  44000452	trap	#0x452
  379  000013b4  4be00000	jr	r31
  380  000013b8  54000000	nop
  381  000013bc          	.endproc _sem_signal
  383  000013bc          	.proc _lock_create
  384  000013bc          	.global _lock_create
  385  000013bc          	_lock_create:
  386  000013bc  44000453	trap	#0x453
  387  000013c0  4be00000	jr	r31
  388  000013c4  54000000	nop
  389  000013c8          	.endproc _lock_create
  391  000013c8          	.proc _lock_acquire
  392  000013c8          	.global _lock_acquire
  393  000013c8          	_lock_acquire:
  394  000013c8  44000454	trap	#0x454
  395  000013cc  4be00000	jr	r31
  396  000013d0  54000000	nop
  397  000013d4          	.endproc _lock_acquire
  399  000013d4          	.proc _lock_release
  400  000013d4          	.global _lock_release
  401  000013d4          	_lock_release:
  402  000013d4  44000455	trap	#0x455
  403  000013d8  4be00000	jr	r31
  404  000013dc  54000000	nop
  405  000013e0          	.endproc _lock_release
  407  000013e0          	.proc _cond_create
  408  000013e0          	.global _cond_create
  409  000013e0          	_cond_create:
  410  000013e0  44000456	trap	#0x456
  411  000013e4  4be00000	jr	r31
  412  000013e8  54000000	nop
  413  000013ec          	.endproc _cond_create
  415  000013ec          	.proc _cond_wait
  416  000013ec          	.global _cond_wait
  417  000013ec          	_cond_wait:
  418  000013ec  44000457	trap	#0x457
  419  000013f0  4be00000	jr	r31
  420  000013f4  54000000	nop
  421  000013f8          	.endproc _cond_wait
  423  000013f8          	.proc _cond_signal
  424  000013f8          	.global _cond_signal
  425  000013f8          	_cond_signal:
  426  000013f8  44000458	trap	#0x458
  427  000013fc  4be00000	jr	r31
  428  00001400  54000000	nop
  429  00001404          	.endproc _cond_signal
  431  00001404          	.proc _cond_broadcast
  432  00001404          	.global _cond_broadcast
  433  00001404          	_cond_broadcast:
  434  00001404  44000459	trap	#0x459
  435  00001408  4be00000	jr	r31
  436  0000140c  54000000	nop
  437  00001410          	.endproc _cond_broadcast
  439  00001410          	.proc _mbox_create
  440  00001410          	.global _mbox_create
  441  00001410          	_mbox_create:
  442  00001410  44000460	trap	#0x460
  443  00001414  4be00000	jr	r31
  444  00001418  54000000	nop
  445  0000141c          	.endproc _mbox_create
  447  0000141c          	.proc _mbox_open
  448  0000141c          	.global _mbox_open
  449  0000141c          	_mbox_open:
  450  0000141c  44000461	trap	#0x461
  451  00001420  4be00000	jr	r31
  452  00001424  54000000	nop
  453  00001428          	.endproc _mbox_open
  455  00001428          	.proc _mbox_close
  456  00001428          	.global _mbox_close
  457  00001428          	_mbox_close:
  458  00001428  44000462	trap	#0x462
  459  0000142c  4be00000	jr	r31
  460  00001430  54000000	nop
  461  00001434          	.endproc _mbox_close
  463  00001434          	.proc _mbox_send
  464  00001434          	.global _mbox_send
  465  00001434          	_mbox_send:
  466  00001434  44000463	trap	#0x463
  467  00001438  4be00000	jr	r31
  468  0000143c  54000000	nop
  469  00001440          	.endproc _mbox_send
  471  00001440          	.proc _mbox_recv
  472  00001440          	.global _mbox_recv
  473  00001440          	_mbox_recv:
  474  00001440  44000464	trap	#0x464
  475  00001444  4be00000	jr	r31
  476  00001448  54000000	nop
  477  0000144c          	.endproc _mbox_recv
  479  0000144c          	.proc _sleep
  480  0000144c          	.global _sleep
  481  0000144c          	_sleep:
  482  0000144c  44000465	trap	#0x465
  483  00001450  4be00000	jr	r31
  484  00001454  54000000	nop
  485  00001458          	.endproc _sleep
  487  00001458          	.proc _yield
  488  00001458          	.global _yield
  489  00001458          	_yield:
  490  00001458  44000466	trap	#0x466
  491  0000145c  4be00000	jr	r31
  492  00001460  54000000	nop
  493  00001464          	.endproc _yield
  496  00001464          	.proc _Exit
  497  00001464          	.global _Exit
  498  00001464          	_Exit:
  499  00001464  44000500	trap	#0x500
  500  00001468  4be00000	jr	r31
  501  0000146c  54000000	nop
  502  00001470          	.endproc _Exit
  503                      ; Compiled by GCC
  505  00001470          	.align 2
  506  00001470          	.proc _isspace
  507  00001470          	.global _isspace
  508  00001470          	_isspace:
  509                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  510  00001470  afbefffc	sw	-4(r29),r30; push fp
  511  00001474  001df020	add	r30,r0,r29; fp = sp
  512  00001478  afbffff8	sw	-8(r29),r31; push ret addr
  513  0000147c  2fbd0018	subui	r29,r29,#24; alloc local storage
  514  00001480  afa20000	sw	0(r29),r2
  515  00001484  afa30004	sw	4(r29),r3
  516  00001488  afa40008	sw	8(r29),r4
  517  0000148c  83c20003	lb	r2,3(r30)
  518  00001490  20010000	addi	r1,r0,#0
  519  00001494  304300ff	andi	r3,r2,#0x00ff
  520  00001498  60640020	seqi	r4,r3,#32
  521  0000149c  1480002c	bnez	r4,L3_LF2
  522  000014a0  54000000	nop; delay slot nop
  523  000014a4  304300ff	andi	r3,r2,#0x00ff
  524  000014a8  60640009	seqi	r4,r3,#9
  525  000014ac  1480001c	bnez	r4,L3_LF2
  526  000014b0  54000000	nop; delay slot nop
  527  000014b4  304300ff	andi	r3,r2,#0x00ff
  528  000014b8  6064000a	seqi	r4,r3,#10
  529  000014bc  1480000c	bnez	r4,L3_LF2
  530  000014c0  54000000	nop; delay slot nop
  531  000014c4  08000008	j	L2_LF2
  532  000014c8  54000000	nop; delay slot nop
  533  000014cc          	L3_LF2:
  534  000014cc  20010001	addi	r1,r0,#1
  535  000014d0          	L2_LF2:
  536  000014d0  08000004	j	L1_LF2
  537  000014d4  54000000	nop; delay slot nop
  538  000014d8          	L1_LF2:
  539  000014d8  8fa20000	lw	r2,0(r29)
  540  000014dc  8fa30004	lw	r3,4(r29)
  541  000014e0  8fa40008	lw	r4,8(r29)
  542  000014e4  8fdffff8	lw	r31,-8(r30)
  543  000014e8  001ee820	add	r29,r0,r30
  544  000014ec  8fdefffc	lw	r30,-4(r30)
  545  000014f0  4be00000	jr	r31
  546  000014f4  54000000	nop
  547  000014f8          	.endproc _isspace
  548  000014f8          	.align 2
  549  000014f8          	.proc _isxdigit
  550  000014f8          	.global _isxdigit
  551  000014f8          	_isxdigit:
  552                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  553  000014f8  afbefffc	sw	-4(r29),r30; push fp
  554  000014fc  001df020	add	r30,r0,r29; fp = sp
  555  00001500  afbffff8	sw	-8(r29),r31; push ret addr
  556  00001504  2fbd0018	subui	r29,r29,#24; alloc local storage
  557  00001508  afa20000	sw	0(r29),r2
  558  0000150c  afa30004	sw	4(r29),r3
  559  00001510  afa40008	sw	8(r29),r4
  560  00001514  83c20003	lb	r2,3(r30)
  561  00001518  20010000	addi	r1,r0,#0
  562  0000151c  304300ff	andi	r3,r2,#0x00ff
  563  00001520  6c64002f	sgtui	r4,r3,#47
  564  00001524  1080001c	beqz	r4,L7_LF2
  565  00001528  54000000	nop; delay slot nop
  566  0000152c  304300ff	andi	r3,r2,#0x00ff
  567  00001530  70640039	sleui	r4,r3,#57
  568  00001534  1480005c	bnez	r4,L6_LF2
  569  00001538  54000000	nop; delay slot nop
  570  0000153c  08000004	j	L7_LF2
  571  00001540  54000000	nop; delay slot nop
  572  00001544          	L7_LF2:
  573  00001544  304300ff	andi	r3,r2,#0x00ff
  574  00001548  6c640060	sgtui	r4,r3,#96
  575  0000154c  1080001c	beqz	r4,L8_LF2
  576  00001550  54000000	nop; delay slot nop
  577  00001554  304300ff	andi	r3,r2,#0x00ff
  578  00001558  70640066	sleui	r4,r3,#102
  579  0000155c  14800034	bnez	r4,L6_LF2
  580  00001560  54000000	nop; delay slot nop
  581  00001564  08000004	j	L8_LF2
  582  00001568  54000000	nop; delay slot nop
  583  0000156c          	L8_LF2:
  584  0000156c  304300ff	andi	r3,r2,#0x00ff
  585  00001570  6c640040	sgtui	r4,r3,#64
  586  00001574  10800020	beqz	r4,L5_LF2
  587  00001578  54000000	nop; delay slot nop
  588  0000157c  304300ff	andi	r3,r2,#0x00ff
  589  00001580  70640041	sleui	r4,r3,#65
  590  00001584  1480000c	bnez	r4,L6_LF2
  591  00001588  54000000	nop; delay slot nop
  592  0000158c  08000008	j	L5_LF2
  593  00001590  54000000	nop; delay slot nop
  594  00001594          	L6_LF2:
  595  00001594  20010001	addi	r1,r0,#1
  596  00001598          	L5_LF2:
  597  00001598  08000004	j	L4_LF2
  598  0000159c  54000000	nop; delay slot nop
  599  000015a0          	L4_LF2:
  600  000015a0  8fa20000	lw	r2,0(r29)
  601  000015a4  8fa30004	lw	r3,4(r29)
  602  000015a8  8fa40008	lw	r4,8(r29)
  603  000015ac  8fdffff8	lw	r31,-8(r30)
  604  000015b0  001ee820	add	r29,r0,r30
  605  000015b4  8fdefffc	lw	r30,-4(r30)
  606  000015b8  4be00000	jr	r31
  607  000015bc  54000000	nop
  608  000015c0          	.endproc _isxdigit
  609  000015c0          	.align 2
  610  000015c0          	.proc _dstrcpy
  611  000015c0          	.global _dstrcpy
  612  000015c0          	_dstrcpy:
  613                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  614  000015c0  afbefffc	sw	-4(r29),r30; push fp
  615  000015c4  001df020	add	r30,r0,r29; fp = sp
  616  000015c8  afbffff8	sw	-8(r29),r31; push ret addr
  617  000015cc  2fbd0018	subui	r29,r29,#24; alloc local storage
  618  000015d0  afa20000	sw	0(r29),r2
  619  000015d4  afa30004	sw	4(r29),r3
  620  000015d8  8fc10000	lw	r1,(r30)
  621  000015dc  afc1fff4	sw	-12(r30),r1
  622  000015e0          	L10_LF2:
  623  000015e0  8fc10000	lw	r1,(r30)
  624  000015e4  20220001	addi	r2,r1,#1
  625  000015e8  afc20000	sw	(r30),r2
  626  000015ec  8fc20004	lw	r2,4(r30)
  627  000015f0  20430001	addi	r3,r2,#1
  628  000015f4  afc30004	sw	4(r30),r3
  629  000015f8  80420000	lb	r2,(r2)
  630  000015fc  a0220000	sb	(r1),r2
  631  00001600  a3c2fff3	sb	-13(r30),r2
  632  00001604          	L12_LF2:
  633  00001604  93c1fff3	lbu	r1,-13(r30)
  634  00001608  64220000	snei	r2,r1,#0
  635  0000160c  1440000c	bnez	r2,L13_LF2
  636  00001610  54000000	nop; delay slot nop
  637  00001614  0800000c	j	L11_LF2
  638  00001618  54000000	nop; delay slot nop
  639  0000161c          	L13_LF2:
  640  0000161c  0bffffc0	j	L10_LF2
  641  00001620  54000000	nop; delay slot nop
  642  00001624          	L11_LF2:
  643  00001624  8fc1fff4	lw	r1,-12(r30)
  644  00001628  08000004	j	L9_LF2
  645  0000162c  54000000	nop; delay slot nop
  646  00001630          	L9_LF2:
  647  00001630  8fa20000	lw	r2,0(r29)
  648  00001634  8fa30004	lw	r3,4(r29)
  649  00001638  8fdffff8	lw	r31,-8(r30)
  650  0000163c  001ee820	add	r29,r0,r30
  651  00001640  8fdefffc	lw	r30,-4(r30)
  652  00001644  4be00000	jr	r31
  653  00001648  54000000	nop
  654  0000164c          	.endproc _dstrcpy
  655  0000164c          	.align 2
  656  0000164c          	.proc _dstrncpy
  657  0000164c          	.global _dstrncpy
  658  0000164c          	_dstrncpy:
  659                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  660  0000164c  afbefffc	sw	-4(r29),r30; push fp
  661  00001650  001df020	add	r30,r0,r29; fp = sp
  662  00001654  afbffff8	sw	-8(r29),r31; push ret addr
  663  00001658  2fbd0018	subui	r29,r29,#24; alloc local storage
  664  0000165c  afa20000	sw	0(r29),r2
  665  00001660  afa30004	sw	4(r29),r3
  666  00001664  8fc10000	lw	r1,(r30)
  667  00001668  afc1fff4	sw	-12(r30),r1
  668  0000166c          	L15_LF2:
  669  0000166c  8fc10008	lw	r1,8(r30)
  670  00001670  2022ffff	addi	r2,r1,#-1
  671  00001674  afc20008	sw	8(r30),r2
  672  00001678  70210000	slei	r1,r1,#0
  673  0000167c  1020000c	beqz	r1,L18_LF2
  674  00001680  54000000	nop; delay slot nop
  675  00001684  08000048	j	L16_LF2
  676  00001688  54000000	nop; delay slot nop
  677  0000168c          	L18_LF2:
  678  0000168c  8fc10000	lw	r1,(r30)
  679  00001690  20220001	addi	r2,r1,#1
  680  00001694  afc20000	sw	(r30),r2
  681  00001698  8fc20004	lw	r2,4(r30)
  682  0000169c  20430001	addi	r3,r2,#1
  683  000016a0  afc30004	sw	4(r30),r3
  684  000016a4  80420000	lb	r2,(r2)
  685  000016a8  a0220000	sb	(r1),r2
  686  000016ac  a3c2fff3	sb	-13(r30),r2
  687  000016b0          	L17_LF2:
  688  000016b0  93c1fff3	lbu	r1,-13(r30)
  689  000016b4  64220000	snei	r2,r1,#0
  690  000016b8  1440000c	bnez	r2,L19_LF2
  691  000016bc  54000000	nop; delay slot nop
  692  000016c0  0800000c	j	L16_LF2
  693  000016c4  54000000	nop; delay slot nop
  694  000016c8          	L19_LF2:
  695  000016c8  0bffffa0	j	L15_LF2
  696  000016cc  54000000	nop; delay slot nop
  697  000016d0          	L16_LF2:
  698  000016d0  8fc1fff4	lw	r1,-12(r30)
  699  000016d4  08000004	j	L14_LF2
  700  000016d8  54000000	nop; delay slot nop
  701  000016dc          	L14_LF2:
  702  000016dc  8fa20000	lw	r2,0(r29)
  703  000016e0  8fa30004	lw	r3,4(r29)
  704  000016e4  8fdffff8	lw	r31,-8(r30)
  705  000016e8  001ee820	add	r29,r0,r30
  706  000016ec  8fdefffc	lw	r30,-4(r30)
  707  000016f0  4be00000	jr	r31
  708  000016f4  54000000	nop
  709  000016f8          	.endproc _dstrncpy
  710  000016f8          	.align 2
  711  000016f8          	.proc _dstrcat
  712  000016f8          	.global _dstrcat
  713  000016f8          	_dstrcat:
  714                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  715  000016f8  afbefffc	sw	-4(r29),r30; push fp
  716  000016fc  001df020	add	r30,r0,r29; fp = sp
  717  00001700  afbffff8	sw	-8(r29),r31; push ret addr
  718  00001704  2fbd0018	subui	r29,r29,#24; alloc local storage
  719  00001708  afa20000	sw	0(r29),r2
  720  0000170c  8fc10000	lw	r1,(r30)
  721  00001710  afc1fff4	sw	-12(r30),r1
  722  00001714          	L21_LF2:
  723  00001714  8fc10000	lw	r1,(r30)
  724  00001718  90220000	lbu	r2,(r1)
  725  0000171c  64410000	snei	r1,r2,#0
  726  00001720  1420000c	bnez	r1,L23_LF2
  727  00001724  54000000	nop; delay slot nop
  728  00001728  0800001c	j	L22_LF2
  729  0000172c  54000000	nop; delay slot nop
  730  00001730          	L23_LF2:
  731  00001730  8fc20000	lw	r2,(r30)
  732  00001734  20410001	addi	r1,r2,#1
  733  00001738  00011020	add	r2,r0,r1
  734  0000173c  afc20000	sw	(r30),r2
  735  00001740  0bffffd0	j	L21_LF2
  736  00001744  54000000	nop; delay slot nop
  737  00001748          	L22_LF2:
  738  00001748  23bdfff8	addi	r29,r29,#-8
  739  0000174c  001d0820	add	r1,r0,r29
  740  00001750  8fc20000	lw	r2,(r30)
  741  00001754  ac220000	sw	(r1),r2
  742  00001758  8fc20004	lw	r2,4(r30)
  743  0000175c  ac220004	sw	4(r1),r2
  744  00001760  0ffffe5c	jal	_dstrcpy
  745  00001764  54000000	nop; delay slot nop
  746  00001768  23bd0008	addi	r29,r29,#8
  747  0000176c  8fc1fff4	lw	r1,-12(r30)
  748  00001770  08000004	j	L20_LF2
  749  00001774  54000000	nop; delay slot nop
  750  00001778          	L20_LF2:
  751  00001778  8fa20000	lw	r2,0(r29)
  752  0000177c  8fdffff8	lw	r31,-8(r30)
  753  00001780  001ee820	add	r29,r0,r30
  754  00001784  8fdefffc	lw	r30,-4(r30)
  755  00001788  4be00000	jr	r31
  756  0000178c  54000000	nop
  757  00001790          	.endproc _dstrcat
  758  00001790          	.align 2
  759  00001790          	.proc _dstrncmp
  760  00001790          	.global _dstrncmp
  761  00001790          	_dstrncmp:
  762                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  763  00001790  afbefffc	sw	-4(r29),r30; push fp
  764  00001794  001df020	add	r30,r0,r29; fp = sp
  765  00001798  afbffff8	sw	-8(r29),r31; push ret addr
  766  0000179c  2fbd0018	subui	r29,r29,#24; alloc local storage
  767  000017a0  afa20000	sw	0(r29),r2
  768  000017a4  afa30004	sw	4(r29),r3
  769  000017a8  54000000	nop
  770  000017ac  20010000	addi	r1,r0,#0
  771  000017b0  afc1fff4	sw	-12(r30),r1
  772  000017b4          	L25_LF2:
  773  000017b4  8fc1fff4	lw	r1,-12(r30)
  774  000017b8  8fc20008	lw	r2,8(r30)
  775  000017bc  0022082a	slt	r1,r1,r2
  776  000017c0  1420000c	bnez	r1,L28_LF2
  777  000017c4  54000000	nop; delay slot nop
  778  000017c8  08000088	j	L26_LF2
  779  000017cc  54000000	nop; delay slot nop
  780  000017d0          	L28_LF2:
  781  000017d0  8fc10004	lw	r1,4(r30)
  782  000017d4  90220000	lbu	r2,(r1)
  783  000017d8  64410000	snei	r1,r2,#0
  784  000017dc  14200018	bnez	r1,L29_LF2
  785  000017e0  54000000	nop; delay slot nop
  786  000017e4  20010000	addi	r1,r0,#0
  787  000017e8  080000d8	j	L24_LF2
  788  000017ec  54000000	nop; delay slot nop
  789  000017f0  08000028	j	L30_LF2
  790  000017f4  54000000	nop; delay slot nop
  791  000017f8          	L29_LF2:
  792  000017f8  8fc10000	lw	r1,(r30)
  793  000017fc  8fc20004	lw	r2,4(r30)
  794  00001800  90210000	lbu	r1,(r1)
  795  00001804  90420000	lbu	r2,(r2)
  796  00001808  00220829	sne	r1,r1,r2
  797  0000180c  1020000c	beqz	r1,L30_LF2
  798  00001810  54000000	nop; delay slot nop
  799  00001814  0800003c	j	L26_LF2
  800  00001818  54000000	nop; delay slot nop
  801  0000181c          	L31_LF2:
  802  0000181c          	L30_LF2:
  803  0000181c  8fc20000	lw	r2,(r30)
  804  00001820  20410001	addi	r1,r2,#1
  805  00001824  00011020	add	r2,r0,r1
  806  00001828  afc20000	sw	(r30),r2
  807  0000182c  8fc20004	lw	r2,4(r30)
  808  00001830  20410001	addi	r1,r2,#1
  809  00001834  00011020	add	r2,r0,r1
  810  00001838  afc20004	sw	4(r30),r2
  811  0000183c          	L27_LF2:
  812  0000183c  8fc2fff4	lw	r2,-12(r30)
  813  00001840  20410001	addi	r1,r2,#1
  814  00001844  00011020	add	r2,r0,r1
  815  00001848  afc2fff4	sw	-12(r30),r2
  816  0000184c  0bffff64	j	L25_LF2
  817  00001850  54000000	nop; delay slot nop
  818  00001854          	L26_LF2:
  819  00001854  8fc1fff4	lw	r1,-12(r30)
  820  00001858  8fc20008	lw	r2,8(r30)
  821  0000185c  00220828	seq	r1,r1,r2
  822  00001860  10200018	beqz	r1,L32_LF2
  823  00001864  54000000	nop; delay slot nop
  824  00001868  20010000	addi	r1,r0,#0
  825  0000186c  08000054	j	L24_LF2
  826  00001870  54000000	nop; delay slot nop
  827  00001874  0800004c	j	L33_LF2
  828  00001878  54000000	nop; delay slot nop
  829  0000187c          	L32_LF2:
  830  0000187c  8fc20000	lw	r2,(r30)
  831  00001880  90410000	lbu	r1,(r2)
  832  00001884  8fc20004	lw	r2,4(r30)
  833  00001888  90430000	lbu	r3,(r2)
  834  0000188c  00230822	sub	r1,r1,r3
  835  00001890  74220000	sgei	r2,r1,#0
  836  00001894  10400020	beqz	r2,L34_LF2
  837  00001898  54000000	nop; delay slot nop
  838  0000189c  8fc10000	lw	r1,(r30)
  839  000018a0  8fc20004	lw	r2,4(r30)
  840  000018a4  90210000	lbu	r1,(r1)
  841  000018a8  90420000	lbu	r2,(r2)
  842  000018ac  00220829	sne	r1,r1,r2
  843  000018b0  08000008	j	L35_LF2
  844  000018b4  54000000	nop; delay slot nop
  845  000018b8          	L34_LF2:
  846  000018b8  2001ffff	addi	r1,r0,#-1
  847  000018bc          	L35_LF2:
  848  000018bc  08000004	j	L24_LF2
  849  000018c0  54000000	nop; delay slot nop
  850  000018c4          	L33_LF2:
  851  000018c4          	L24_LF2:
  852  000018c4  8fa20000	lw	r2,0(r29)
  853  000018c8  8fa30004	lw	r3,4(r29)
  854  000018cc  8fdffff8	lw	r31,-8(r30)
  855  000018d0  001ee820	add	r29,r0,r30
  856  000018d4  8fdefffc	lw	r30,-4(r30)
  857  000018d8  4be00000	jr	r31
  858  000018dc  54000000	nop
  859  000018e0          	.endproc _dstrncmp
  860  000018e0          	.align 2
  861  000018e0          	.proc _dstrlen
  862  000018e0          	.global _dstrlen
  863  000018e0          	_dstrlen:
  864                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  865  000018e0  afbefffc	sw	-4(r29),r30; push fp
  866  000018e4  001df020	add	r30,r0,r29; fp = sp
  867  000018e8  afbffff8	sw	-8(r29),r31; push ret addr
  868  000018ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  869  000018f0  afa20000	sw	0(r29),r2
  870  000018f4  20010000	addi	r1,r0,#0
  871  000018f8  afc1fff4	sw	-12(r30),r1
  872  000018fc          	L37_LF2:
  873  000018fc  8fc10000	lw	r1,(r30)
  874  00001900  20220001	addi	r2,r1,#1
  875  00001904  afc20000	sw	(r30),r2
  876  00001908  90210000	lbu	r1,(r1)
  877  0000190c  64220000	snei	r2,r1,#0
  878  00001910  1440000c	bnez	r2,L39_LF2
  879  00001914  54000000	nop; delay slot nop
  880  00001918  0800001c	j	L38_LF2
  881  0000191c  54000000	nop; delay slot nop
  882  00001920          	L39_LF2:
  883  00001920  8fc2fff4	lw	r2,-12(r30)
  884  00001924  20410001	addi	r1,r2,#1
  885  00001928  00011020	add	r2,r0,r1
  886  0000192c  afc2fff4	sw	-12(r30),r2
  887  00001930  0bffffc8	j	L37_LF2
  888  00001934  54000000	nop; delay slot nop
  889  00001938          	L38_LF2:
  890  00001938  8fc1fff4	lw	r1,-12(r30)
  891  0000193c  08000004	j	L36_LF2
  892  00001940  54000000	nop; delay slot nop
  893  00001944          	L36_LF2:
  894  00001944  8fa20000	lw	r2,0(r29)
  895  00001948  8fdffff8	lw	r31,-8(r30)
  896  0000194c  001ee820	add	r29,r0,r30
  897  00001950  8fdefffc	lw	r30,-4(r30)
  898  00001954  4be00000	jr	r31
  899  00001958  54000000	nop
  900  0000195c          	.endproc _dstrlen
  901  0000195c          	.align 2
  902  0000195c          	.proc _dstrstr
  903  0000195c          	.global _dstrstr
  904  0000195c          	_dstrstr:
  905                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  906  0000195c  afbefffc	sw	-4(r29),r30; push fp
  907  00001960  001df020	add	r30,r0,r29; fp = sp
  908  00001964  afbffff8	sw	-8(r29),r31; push ret addr
  909  00001968  2fbd0018	subui	r29,r29,#24; alloc local storage
  910  0000196c  afa20000	sw	0(r29),r2
  911  00001970  23bdfff8	addi	r29,r29,#-8
  912  00001974  001d0820	add	r1,r0,r29
  913  00001978  8fc20004	lw	r2,4(r30)
  914  0000197c  ac220000	sw	(r1),r2
  915  00001980  0fffff5c	jal	_dstrlen
  916  00001984  54000000	nop; delay slot nop
  917  00001988  23bd0008	addi	r29,r29,#8
  918  0000198c  afc1fff4	sw	-12(r30),r1
  919  00001990          	L41_LF2:
  920  00001990  8fc10000	lw	r1,(r30)
  921  00001994  90220000	lbu	r2,(r1)
  922  00001998  64410000	snei	r1,r2,#0
  923  0000199c  1420000c	bnez	r1,L43_LF2
  924  000019a0  54000000	nop; delay slot nop
  925  000019a4  08000060	j	L42_LF2
  926  000019a8  54000000	nop; delay slot nop
  927  000019ac          	L43_LF2:
  928  000019ac  23bdfff0	addi	r29,r29,#-16
  929  000019b0  001d0820	add	r1,r0,r29
  930  000019b4  8fc20000	lw	r2,(r30)
  931  000019b8  ac220000	sw	(r1),r2
  932  000019bc  8fc20004	lw	r2,4(r30)
  933  000019c0  ac220004	sw	4(r1),r2
  934  000019c4  8fc2fff4	lw	r2,-12(r30)
  935  000019c8  ac220008	sw	8(r1),r2
  936  000019cc  0ffffdc0	jal	_dstrncmp
  937  000019d0  54000000	nop; delay slot nop
  938  000019d4  23bd0010	addi	r29,r29,#16
  939  000019d8  64220000	snei	r2,r1,#0
  940  000019dc  14400010	bnez	r2,L44_LF2
  941  000019e0  54000000	nop; delay slot nop
  942  000019e4  8fc10000	lw	r1,(r30)
  943  000019e8  08000028	j	L40_LF2
  944  000019ec  54000000	nop; delay slot nop
  945  000019f0          	L44_LF2:
  946  000019f0  8fc20000	lw	r2,(r30)
  947  000019f4  20410001	addi	r1,r2,#1
  948  000019f8  00011020	add	r2,r0,r1
  949  000019fc  afc20000	sw	(r30),r2
  950  00001a00  0bffff8c	j	L41_LF2
  951  00001a04  54000000	nop; delay slot nop
  952  00001a08          	L42_LF2:
  953  00001a08  20010000	addi	r1,r0,#0
  954  00001a0c  08000004	j	L40_LF2
  955  00001a10  54000000	nop; delay slot nop
  956  00001a14          	L40_LF2:
  957  00001a14  8fa20000	lw	r2,0(r29)
  958  00001a18  8fdffff8	lw	r31,-8(r30)
  959  00001a1c  001ee820	add	r29,r0,r30
  960  00001a20  8fdefffc	lw	r30,-4(r30)
  961  00001a24  4be00000	jr	r31
  962  00001a28  54000000	nop
  963  00001a2c          	.endproc _dstrstr
  964  00001a2c          	.align 2
  965  00001a2c          	.proc _dmindex
  966  00001a2c          	.global _dmindex
  967  00001a2c          	_dmindex:
  968                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  969  00001a2c  afbefffc	sw	-4(r29),r30; push fp
  970  00001a30  001df020	add	r30,r0,r29; fp = sp
  971  00001a34  afbffff8	sw	-8(r29),r31; push ret addr
  972  00001a38  2fbd0018	subui	r29,r29,#24; alloc local storage
  973  00001a3c  afa20000	sw	0(r29),r2
  974  00001a40  54000000	nop
  975  00001a44          	L46_LF2:
  976  00001a44  8fc10000	lw	r1,(r30)
  977  00001a48  90220000	lbu	r2,(r1)
  978  00001a4c  64410000	snei	r1,r2,#0
  979  00001a50  1420000c	bnez	r1,L48_LF2
  980  00001a54  54000000	nop; delay slot nop
  981  00001a58  08000070	j	L47_LF2
  982  00001a5c  54000000	nop; delay slot nop
  983  00001a60          	L48_LF2:
  984  00001a60  8fc10004	lw	r1,4(r30)
  985  00001a64  afc1fff4	sw	-12(r30),r1
  986  00001a68          	L49_LF2:
  987  00001a68  8fc1fff4	lw	r1,-12(r30)
  988  00001a6c  90220000	lbu	r2,(r1)
  989  00001a70  64410000	snei	r1,r2,#0
  990  00001a74  1420000c	bnez	r1,L52_LF2
  991  00001a78  54000000	nop; delay slot nop
  992  00001a7c  08000044	j	L50_LF2
  993  00001a80  54000000	nop; delay slot nop
  994  00001a84          	L52_LF2:
  995  00001a84  8fc10000	lw	r1,(r30)
  996  00001a88  8fc2fff4	lw	r2,-12(r30)
  997  00001a8c  90210000	lbu	r1,(r1)
  998  00001a90  90420000	lbu	r2,(r2)
  999  00001a94  00220828	seq	r1,r1,r2
 1000  00001a98  10200010	beqz	r1,L51_LF2
 1001  00001a9c  54000000	nop; delay slot nop
 1002  00001aa0  8fc10000	lw	r1,(r30)
 1003  00001aa4  08000030	j	L45_LF2
 1004  00001aa8  54000000	nop; delay slot nop
 1005  00001aac          	L53_LF2:
 1006  00001aac          	L51_LF2:
 1007  00001aac  8fc2fff4	lw	r2,-12(r30)
 1008  00001ab0  20410001	addi	r1,r2,#1
 1009  00001ab4  00011020	add	r2,r0,r1
 1010  00001ab8  afc2fff4	sw	-12(r30),r2
 1011  00001abc  0bffffa8	j	L49_LF2
 1012  00001ac0  54000000	nop; delay slot nop
 1013  00001ac4          	L50_LF2:
 1014  00001ac4  0bffff7c	j	L46_LF2
 1015  00001ac8  54000000	nop; delay slot nop
 1016  00001acc          	L47_LF2:
 1017  00001acc  20010000	addi	r1,r0,#0
 1018  00001ad0  08000004	j	L45_LF2
 1019  00001ad4  54000000	nop; delay slot nop
 1020  00001ad8          	L45_LF2:
 1021  00001ad8  8fa20000	lw	r2,0(r29)
 1022  00001adc  8fdffff8	lw	r31,-8(r30)
 1023  00001ae0  001ee820	add	r29,r0,r30
 1024  00001ae4  8fdefffc	lw	r30,-4(r30)
 1025  00001ae8  4be00000	jr	r31
 1026  00001aec  54000000	nop
 1027  00001af0          	.endproc _dmindex
 1028  00001af0          	.align 2
 1029  00001af0          	.proc _dindex
 1030  00001af0          	.global _dindex
 1031  00001af0          	_dindex:
 1032                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1033  00001af0  afbefffc	sw	-4(r29),r30; push fp
 1034  00001af4  001df020	add	r30,r0,r29; fp = sp
 1035  00001af8  afbffff8	sw	-8(r29),r31; push ret addr
 1036  00001afc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1037  00001b00  afa20000	sw	0(r29),r2
 1038  00001b04  54000000	nop
 1039  00001b08          	L55_LF2:
 1040  00001b08  8fc10000	lw	r1,(r30)
 1041  00001b0c  90220000	lbu	r2,(r1)
 1042  00001b10  64410000	snei	r1,r2,#0
 1043  00001b14  1420000c	bnez	r1,L57_LF2
 1044  00001b18  54000000	nop; delay slot nop
 1045  00001b1c  08000040	j	L56_LF2
 1046  00001b20  54000000	nop; delay slot nop
 1047  00001b24          	L57_LF2:
 1048  00001b24  8fc10000	lw	r1,(r30)
 1049  00001b28  90220000	lbu	r2,(r1)
 1050  00001b2c  8fc10004	lw	r1,4(r30)
 1051  00001b30  00411028	seq	r2,r2,r1
 1052  00001b34  10400010	beqz	r2,L58_LF2
 1053  00001b38  54000000	nop; delay slot nop
 1054  00001b3c  8fc10000	lw	r1,(r30)
 1055  00001b40  08000028	j	L54_LF2
 1056  00001b44  54000000	nop; delay slot nop
 1057  00001b48          	L58_LF2:
 1058  00001b48  8fc20000	lw	r2,(r30)
 1059  00001b4c  20410001	addi	r1,r2,#1
 1060  00001b50  00011020	add	r2,r0,r1
 1061  00001b54  afc20000	sw	(r30),r2
 1062  00001b58  0bffffac	j	L55_LF2
 1063  00001b5c  54000000	nop; delay slot nop
 1064  00001b60          	L56_LF2:
 1065  00001b60  20010000	addi	r1,r0,#0
 1066  00001b64  08000004	j	L54_LF2
 1067  00001b68  54000000	nop; delay slot nop
 1068  00001b6c          	L54_LF2:
 1069  00001b6c  8fa20000	lw	r2,0(r29)
 1070  00001b70  8fdffff8	lw	r31,-8(r30)
 1071  00001b74  001ee820	add	r29,r0,r30
 1072  00001b78  8fdefffc	lw	r30,-4(r30)
 1073  00001b7c  4be00000	jr	r31
 1074  00001b80  54000000	nop
 1075  00001b84          	.endproc _dindex
 1076  00001b84          	.align 2
 1077  00001b84          	.proc _ditoa
 1078  00001b84          	.global _ditoa
 1079  00001b84          	_ditoa:
 1080                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1081  00001b84  afbefffc	sw	-4(r29),r30; push fp
 1082  00001b88  001df020	add	r30,r0,r29; fp = sp
 1083  00001b8c  afbffff8	sw	-8(r29),r31; push ret addr
 1084  00001b90  2fbd0018	subui	r29,r29,#24; alloc local storage
 1085  00001b94  afa20000	sw	0(r29),r2
 1086  00001b98  afa30004	sw	4(r29),r3
 1087  00001b9c  8fc10000	lw	r1,(r30)
 1088  00001ba0  68220000	slti	r2,r1,#0
 1089  00001ba4  1040002c	beqz	r2,L60_LF2
 1090  00001ba8  54000000	nop; delay slot nop
 1091  00001bac  8fc10004	lw	r1,4(r30)
 1092  00001bb0  20220001	addi	r2,r1,#1
 1093  00001bb4  afc20004	sw	4(r30),r2
 1094  00001bb8  2002002d	addi	r2,r0,(#0x2d)&0xff
 1095  00001bbc  a0220000	sb	(r1),r2
 1096  00001bc0  8fc10000	lw	r1,(r30)
 1097  00001bc4  00011022	sub	r2,r0,r1
 1098  00001bc8  afc20000	sw	(r30),r2
 1099  00001bcc  08000118	j	L61_LF2
 1100  00001bd0  54000000	nop; delay slot nop
 1101  00001bd4          	L60_LF2:
 1102  00001bd4  8fc10000	lw	r1,(r30)
 1103  00001bd8  64220000	snei	r2,r1,#0
 1104  00001bdc  14400020	bnez	r2,L62_LF2
 1105  00001be0  54000000	nop; delay slot nop
 1106  00001be4  8fc10004	lw	r1,4(r30)
 1107  00001be8  20220001	addi	r2,r1,#1
 1108  00001bec  afc20004	sw	4(r30),r2
 1109  00001bf0  20020030	addi	r2,r0,(#0x30)&0xff
 1110  00001bf4  a0220000	sb	(r1),r2
 1111  00001bf8  080000ec	j	L61_LF2
 1112  00001bfc  54000000	nop; delay slot nop
 1113  00001c00          	L62_LF2:
 1114  00001c00  20010001	addi	r1,r0,#1
 1115  00001c04  afc1fff4	sw	-12(r30),r1
 1116  00001c08          	L64_LF2:
 1117  00001c08  8fc1fff4	lw	r1,-12(r30)
 1118  00001c0c  8fc20000	lw	r2,(r30)
 1119  00001c10  0022082c	sle	r1,r1,r2
 1120  00001c14  1420000c	bnez	r1,L66_LF2
 1121  00001c18  54000000	nop; delay slot nop
 1122  00001c1c  08000024	j	L65_LF2
 1123  00001c20  54000000	nop; delay slot nop
 1124  00001c24          	L67_LF2:
 1125  00001c24          	L66_LF2:
 1126  00001c24  8fc1fff4	lw	r1,-12(r30)
 1127  00001c28  00011820	add	r3,r0,r1
 1128  00001c2c  50620002	slli	r2,r3,#0x2
 1129  00001c30  00411020	add	r2,r2,r1
 1130  00001c34  50410001	slli	r1,r2,#0x1
 1131  00001c38  afc1fff4	sw	-12(r30),r1
 1132  00001c3c  0bffffc8	j	L64_LF2
 1133  00001c40  54000000	nop; delay slot nop
 1134  00001c44          	L65_LF2:
 1135  00001c44  54000000	nop
 1136  00001c48          	L68_LF2:
 1137  00001c48  8fc1fff4	lw	r1,-12(r30)
 1138  00001c4c  2002000a	addi	r2,r0,#10
 1139  00001c50  00200035	movi2fp	f0,r1
 1140  00001c54  00400835	movi2fp	f1,r2
 1141  00001c58  0401000f	div	f0,f0,f1
 1142  00001c5c  00000834	movfp2i	r1,f0
 1143  00001c60  afc1fff4	sw	-12(r30),r1
 1144  00001c64  8fc10004	lw	r1,4(r30)
 1145  00001c68  20220001	addi	r2,r1,#1
 1146  00001c6c  afc20004	sw	4(r30),r2
 1147  00001c70  8fc20000	lw	r2,(r30)
 1148  00001c74  8fc3fff4	lw	r3,-12(r30)
 1149  00001c78  00400035	movi2fp	f0,r2
 1150  00001c7c  00600835	movi2fp	f1,r3
 1151  00001c80  0401000f	div	f0,f0,f1
 1152  00001c84  00001034	movfp2i	r2,f0
 1153  00001c88  00021820	add	r3,r0,r2
 1154  00001c8c  20620030	addi	r2,r3,#48
 1155  00001c90  a0220000	sb	(r1),r2
 1156  00001c94  8fc10000	lw	r1,(r30)
 1157  00001c98  8fc3fff4	lw	r3,-12(r30)
 1158  00001c9c  00200035	movi2fp	f0,r1
 1159  00001ca0  00600835	movi2fp	f1,r3
 1160  00001ca4  0401000f	div	f0,f0,f1
 1161  00001ca8  00001034	movfp2i	r2,f0
 1162  00001cac  8fc3fff4	lw	r3,-12(r30)
 1163  00001cb0  00400035	movi2fp	f0,r2
 1164  00001cb4  00600835	movi2fp	f1,r3
 1165  00001cb8  0401000e	mult	f0,f0,f1
 1166  00001cbc  00001034	movfp2i	r2,f0
 1167  00001cc0  00220822	sub	r1,r1,r2
 1168  00001cc4  afc10000	sw	(r30),r1
 1169  00001cc8          	L70_LF2:
 1170  00001cc8  8fc1fff4	lw	r1,-12(r30)
 1171  00001ccc  6c220001	sgti	r2,r1,#1
 1172  00001cd0  1440000c	bnez	r2,L71_LF2
 1173  00001cd4  54000000	nop; delay slot nop
 1174  00001cd8  0800000c	j	L61_LF2
 1175  00001cdc  54000000	nop; delay slot nop
 1176  00001ce0          	L71_LF2:
 1177  00001ce0  0bffff64	j	L68_LF2
 1178  00001ce4  54000000	nop; delay slot nop
 1179  00001ce8          	L69_LF2:
 1180  00001ce8          	L63_LF2:
 1181  00001ce8          	L61_LF2:
 1182  00001ce8  8fc10004	lw	r1,4(r30)
 1183  00001cec  20020000	addi	r2,r0,(#0x0)&0xff
 1184  00001cf0  a0220000	sb	(r1),r2
 1185  00001cf4          	L59_LF2:
 1186  00001cf4  8fa20000	lw	r2,0(r29)
 1187  00001cf8  8fa30004	lw	r3,4(r29)
 1188  00001cfc  8fdffff8	lw	r31,-8(r30)
 1189  00001d00  001ee820	add	r29,r0,r30
 1190  00001d04  8fdefffc	lw	r30,-4(r30)
 1191  00001d08  4be00000	jr	r31
 1192  00001d0c  54000000	nop
 1193  00001d10          	.endproc _ditoa
 1194  00001d10          	.align 2
 1195  00001d10          	.proc _dstrtol
 1196  00001d10          	.global _dstrtol
 1197  00001d10          	_dstrtol:
 1198                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1199  00001d10  afbefffc	sw	-4(r29),r30; push fp
 1200  00001d14  001df020	add	r30,r0,r29; fp = sp
 1201  00001d18  afbffff8	sw	-8(r29),r31; push ret addr
 1202  00001d1c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1203  00001d20  afa20000	sw	0(r29),r2
 1204  00001d24  20010000	addi	r1,r0,#0
 1205  00001d28  afc1fff4	sw	-12(r30),r1
 1206  00001d2c          	L73_LF2:
 1207  00001d2c  8fc10000	lw	r1,(r30)
 1208  00001d30  90220000	lbu	r2,(r1)
 1209  00001d34  60410020	seqi	r1,r2,#32
 1210  00001d38  14200034	bnez	r1,L75_LF2
 1211  00001d3c  54000000	nop; delay slot nop
 1212  00001d40  8fc10000	lw	r1,(r30)
 1213  00001d44  90220000	lbu	r2,(r1)
 1214  00001d48  60410009	seqi	r1,r2,#9
 1215  00001d4c  14200020	bnez	r1,L75_LF2
 1216  00001d50  54000000	nop; delay slot nop
 1217  00001d54  8fc10000	lw	r1,(r30)
 1218  00001d58  90220000	lbu	r2,(r1)
 1219  00001d5c  6041000a	seqi	r1,r2,#10
 1220  00001d60  1420000c	bnez	r1,L75_LF2
 1221  00001d64  54000000	nop; delay slot nop
 1222  00001d68  0800001c	j	L74_LF2
 1223  00001d6c  54000000	nop; delay slot nop
 1224  00001d70          	L75_LF2:
 1225  00001d70  8fc20000	lw	r2,(r30)
 1226  00001d74  20410001	addi	r1,r2,#1
 1227  00001d78  00011020	add	r2,r0,r1
 1228  00001d7c  afc20000	sw	(r30),r2
 1229  00001d80  0bffffa8	j	L73_LF2
 1230  00001d84  54000000	nop; delay slot nop
 1231  00001d88          	L74_LF2:
 1232  00001d88  8fc10004	lw	r1,4(r30)
 1233  00001d8c  64220000	snei	r2,r1,#0
 1234  00001d90  10400010	beqz	r2,L76_LF2
 1235  00001d94  54000000	nop; delay slot nop
 1236  00001d98  8fc10004	lw	r1,4(r30)
 1237  00001d9c  8fc20000	lw	r2,(r30)
 1238  00001da0  ac220000	sw	(r1),r2
 1239  00001da4          	L76_LF2:
 1240  00001da4  8fc10000	lw	r1,(r30)
 1241  00001da8  90220000	lbu	r2,(r1)
 1242  00001dac  64410000	snei	r1,r2,#0
 1243  00001db0  14200010	bnez	r1,L77_LF2
 1244  00001db4  54000000	nop; delay slot nop
 1245  00001db8  8fc1fff4	lw	r1,-12(r30)
 1246  00001dbc  08000294	j	L72_LF2
 1247  00001dc0  54000000	nop; delay slot nop
 1248  00001dc4          	L77_LF2:
 1249  00001dc4  8fc10000	lw	r1,(r30)
 1250  00001dc8  90220000	lbu	r2,(r1)
 1251  00001dcc  6041002d	seqi	r1,r2,#45
 1252  00001dd0  10200024	beqz	r1,L78_LF2
 1253  00001dd4  54000000	nop; delay slot nop
 1254  00001dd8  2001ffff	addi	r1,r0,#-1
 1255  00001ddc  afc1ffec	sw	-20(r30),r1
 1256  00001de0  8fc20000	lw	r2,(r30)
 1257  00001de4  20410001	addi	r1,r2,#1
 1258  00001de8  00011020	add	r2,r0,r1
 1259  00001dec  afc20000	sw	(r30),r2
 1260  00001df0  0800000c	j	L79_LF2
 1261  00001df4  54000000	nop; delay slot nop
 1262  00001df8          	L78_LF2:
 1263  00001df8  20010001	addi	r1,r0,#1
 1264  00001dfc  afc1ffec	sw	-20(r30),r1
 1265  00001e00          	L79_LF2:
 1266  00001e00  8fc10008	lw	r1,8(r30)
 1267  00001e04  64220000	snei	r2,r1,#0
 1268  00001e08  14400090	bnez	r2,L80_LF2
 1269  00001e0c  54000000	nop; delay slot nop
 1270  00001e10  8fc10000	lw	r1,(r30)
 1271  00001e14  90220000	lbu	r2,(r1)
 1272  00001e18  60410030	seqi	r1,r2,#48
 1273  00001e1c  10200074	beqz	r1,L81_LF2
 1274  00001e20  54000000	nop; delay slot nop
 1275  00001e24  8fc20000	lw	r2,(r30)
 1276  00001e28  20410001	addi	r1,r2,#1
 1277  00001e2c  00011020	add	r2,r0,r1
 1278  00001e30  afc20000	sw	(r30),r2
 1279  00001e34  8fc10000	lw	r1,(r30)
 1280  00001e38  90220000	lbu	r2,(r1)
 1281  00001e3c  60410078	seqi	r1,r2,#120
 1282  00001e40  14200020	bnez	r1,L83_LF2
 1283  00001e44  54000000	nop; delay slot nop
 1284  00001e48  8fc10000	lw	r1,(r30)
 1285  00001e4c  90220000	lbu	r2,(r1)
 1286  00001e50  60410058	seqi	r1,r2,#88
 1287  00001e54  1420000c	bnez	r1,L83_LF2
 1288  00001e58  54000000	nop; delay slot nop
 1289  00001e5c  08000024	j	L82_LF2
 1290  00001e60  54000000	nop; delay slot nop
 1291  00001e64          	L83_LF2:
 1292  00001e64  20010010	addi	r1,r0,#16
 1293  00001e68  afc10008	sw	8(r30),r1
 1294  00001e6c  8fc20000	lw	r2,(r30)
 1295  00001e70  20410001	addi	r1,r2,#1
 1296  00001e74  00011020	add	r2,r0,r1
 1297  00001e78  afc20000	sw	(r30),r2
 1298  00001e7c  0800000c	j	L84_LF2
 1299  00001e80  54000000	nop; delay slot nop
 1300  00001e84          	L82_LF2:
 1301  00001e84  20010008	addi	r1,r0,#8
 1302  00001e88  afc10008	sw	8(r30),r1
 1303  00001e8c          	L84_LF2:
 1304  00001e8c  0800000c	j	L80_LF2
 1305  00001e90  54000000	nop; delay slot nop
 1306  00001e94          	L81_LF2:
 1307  00001e94  2001000a	addi	r1,r0,#10
 1308  00001e98  afc10008	sw	8(r30),r1
 1309  00001e9c          	L85_LF2:
 1310  00001e9c          	L80_LF2:
 1311  00001e9c  8fc10008	lw	r1,8(r30)
 1312  00001ea0  70220000	slei	r2,r1,#0
 1313  00001ea4  1440001c	bnez	r2,L87_LF2
 1314  00001ea8  54000000	nop; delay slot nop
 1315  00001eac  8fc10008	lw	r1,8(r30)
 1316  00001eb0  6c220010	sgti	r2,r1,#16
 1317  00001eb4  1440000c	bnez	r2,L87_LF2
 1318  00001eb8  54000000	nop; delay slot nop
 1319  00001ebc  08000010	j	L86_LF2
 1320  00001ec0  54000000	nop; delay slot nop
 1321  00001ec4          	L87_LF2:
 1322  00001ec4  8fc1fff4	lw	r1,-12(r30)
 1323  00001ec8  08000188	j	L72_LF2
 1324  00001ecc  54000000	nop; delay slot nop
 1325  00001ed0          	L86_LF2:
 1326  00001ed0  54000000	nop
 1327  00001ed4          	L88_LF2:
 1328  00001ed4  8fc10000	lw	r1,(r30)
 1329  00001ed8  90220000	lbu	r2,(r1)
 1330  00001edc  6c41002f	sgtui	r1,r2,#47
 1331  00001ee0  10200030	beqz	r1,L91_LF2
 1332  00001ee4  54000000	nop; delay slot nop
 1333  00001ee8  8fc10000	lw	r1,(r30)
 1334  00001eec  90220000	lbu	r2,(r1)
 1335  00001ef0  70410039	sleui	r1,r2,#57
 1336  00001ef4  1020001c	beqz	r1,L91_LF2
 1337  00001ef8  54000000	nop; delay slot nop
 1338  00001efc  8fc10000	lw	r1,(r30)
 1339  00001f00  90220000	lbu	r2,(r1)
 1340  00001f04  2041ffd0	addi	r1,r2,#-48
 1341  00001f08  afc1fff0	sw	-16(r30),r1
 1342  00001f0c  0800008c	j	L92_LF2
 1343  00001f10  54000000	nop; delay slot nop
 1344  00001f14          	L91_LF2:
 1345  00001f14  8fc10000	lw	r1,(r30)
 1346  00001f18  90220000	lbu	r2,(r1)
 1347  00001f1c  6c410060	sgtui	r1,r2,#96
 1348  00001f20  10200030	beqz	r1,L93_LF2
 1349  00001f24  54000000	nop; delay slot nop
 1350  00001f28  8fc10000	lw	r1,(r30)
 1351  00001f2c  90220000	lbu	r2,(r1)
 1352  00001f30  7041007a	sleui	r1,r2,#122
 1353  00001f34  1020001c	beqz	r1,L93_LF2
 1354  00001f38  54000000	nop; delay slot nop
 1355  00001f3c  8fc10000	lw	r1,(r30)
 1356  00001f40  90220000	lbu	r2,(r1)
 1357  00001f44  2041ffa9	addi	r1,r2,#-87
 1358  00001f48  afc1fff0	sw	-16(r30),r1
 1359  00001f4c  0800004c	j	L92_LF2
 1360  00001f50  54000000	nop; delay slot nop
 1361  00001f54          	L93_LF2:
 1362  00001f54  8fc10000	lw	r1,(r30)
 1363  00001f58  90220000	lbu	r2,(r1)
 1364  00001f5c  6c410040	sgtui	r1,r2,#64
 1365  00001f60  10200030	beqz	r1,L95_LF2
 1366  00001f64  54000000	nop; delay slot nop
 1367  00001f68  8fc10000	lw	r1,(r30)
 1368  00001f6c  90220000	lbu	r2,(r1)
 1369  00001f70  7041005a	sleui	r1,r2,#90
 1370  00001f74  1020001c	beqz	r1,L95_LF2
 1371  00001f78  54000000	nop; delay slot nop
 1372  00001f7c  8fc10000	lw	r1,(r30)
 1373  00001f80  90220000	lbu	r2,(r1)
 1374  00001f84  2041ffc9	addi	r1,r2,#-55
 1375  00001f88  afc1fff0	sw	-16(r30),r1
 1376  00001f8c  0800000c	j	L92_LF2
 1377  00001f90  54000000	nop; delay slot nop
 1378  00001f94          	L95_LF2:
 1379  00001f94  200103e8	addi	r1,r0,#1000
 1380  00001f98  afc1fff0	sw	-16(r30),r1
 1381  00001f9c          	L96_LF2:
 1382  00001f9c          	L94_LF2:
 1383  00001f9c          	L92_LF2:
 1384  00001f9c  8fc1fff0	lw	r1,-16(r30)
 1385  00001fa0  8fc20008	lw	r2,8(r30)
 1386  00001fa4  0022082a	slt	r1,r1,r2
 1387  00001fa8  10200040	beqz	r1,L90_LF2
 1388  00001fac  54000000	nop; delay slot nop
 1389  00001fb0  8fc1fff4	lw	r1,-12(r30)
 1390  00001fb4  8fc20008	lw	r2,8(r30)
 1391  00001fb8  00200035	movi2fp	f0,r1
 1392  00001fbc  00400835	movi2fp	f1,r2
 1393  00001fc0  0401000e	mult	f0,f0,f1
 1394  00001fc4  00000834	movfp2i	r1,f0
 1395  00001fc8  afc1fff4	sw	-12(r30),r1
 1396  00001fcc  8fc1fff4	lw	r1,-12(r30)
 1397  00001fd0  8fc2fff0	lw	r2,-16(r30)
 1398  00001fd4  00220820	add	r1,r1,r2
 1399  00001fd8  afc1fff4	sw	-12(r30),r1
 1400  00001fdc  8fc20000	lw	r2,(r30)
 1401  00001fe0  20410001	addi	r1,r2,#1
 1402  00001fe4  00011020	add	r2,r0,r1
 1403  00001fe8  afc20000	sw	(r30),r2
 1404  00001fec          	L97_LF2:
 1405  00001fec          	L90_LF2:
 1406  00001fec  8fc1fff0	lw	r1,-16(r30)
 1407  00001ff0  8fc20008	lw	r2,8(r30)
 1408  00001ff4  0022082a	slt	r1,r1,r2
 1409  00001ff8  1420000c	bnez	r1,L98_LF2
 1410  00001ffc  54000000	nop; delay slot nop
 1411  00002000  0800000c	j	L89_LF2
 1412  00002004  54000000	nop; delay slot nop
 1413  00002008          	L98_LF2:
 1414  00002008  0bfffec8	j	L88_LF2
 1415  0000200c  54000000	nop; delay slot nop
 1416  00002010          	L89_LF2:
 1417  00002010  8fc10004	lw	r1,4(r30)
 1418  00002014  64220000	snei	r2,r1,#0
 1419  00002018  10400010	beqz	r2,L99_LF2
 1420  0000201c  54000000	nop; delay slot nop
 1421  00002020  8fc10004	lw	r1,4(r30)
 1422  00002024  8fc20000	lw	r2,(r30)
 1423  00002028  ac220000	sw	(r1),r2
 1424  0000202c          	L99_LF2:
 1425  0000202c  8fc1fff4	lw	r1,-12(r30)
 1426  00002030  8fc2ffec	lw	r2,-20(r30)
 1427  00002034  00200035	movi2fp	f0,r1
 1428  00002038  00400835	movi2fp	f1,r2
 1429  0000203c  0401000e	mult	f0,f0,f1
 1430  00002040  00000834	movfp2i	r1,f0
 1431  00002044  afc1fff4	sw	-12(r30),r1
 1432  00002048  8fc1fff4	lw	r1,-12(r30)
 1433  0000204c  08000004	j	L72_LF2
 1434  00002050  54000000	nop; delay slot nop
 1435  00002054          	L72_LF2:
 1436  00002054  8fa20000	lw	r2,0(r29)
 1437  00002058  8fdffff8	lw	r31,-8(r30)
 1438  0000205c  001ee820	add	r29,r0,r30
 1439  00002060  8fdefffc	lw	r30,-4(r30)
 1440  00002064  4be00000	jr	r31
 1441  00002068  54000000	nop
 1442  0000206c          	.endproc _dstrtol
 1443  0000206c          	.align 2
 1444  0000206c          	.proc _bcopy
 1445  0000206c          	.global _bcopy
 1446  0000206c          	_bcopy:
 1447                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1448  0000206c  afbefffc	sw	-4(r29),r30; push fp
 1449  00002070  001df020	add	r30,r0,r29; fp = sp
 1450  00002074  afbffff8	sw	-8(r29),r31; push ret addr
 1451  00002078  2fbd0010	subui	r29,r29,#16; alloc local storage
 1452  0000207c  afa20000	sw	0(r29),r2
 1453  00002080  afa30004	sw	4(r29),r3
 1454  00002084  54000000	nop
 1455  00002088          	L101_LF2:
 1456  00002088  8fc10008	lw	r1,8(r30)
 1457  0000208c  2022ffff	addi	r2,r1,#-1
 1458  00002090  afc20008	sw	8(r30),r2
 1459  00002094  6c210000	sgti	r1,r1,#0
 1460  00002098  1420000c	bnez	r1,L103_LF2
 1461  0000209c  54000000	nop; delay slot nop
 1462  000020a0  0800002c	j	L102_LF2
 1463  000020a4  54000000	nop; delay slot nop
 1464  000020a8          	L103_LF2:
 1465  000020a8  8fc10004	lw	r1,4(r30)
 1466  000020ac  20220001	addi	r2,r1,#1
 1467  000020b0  afc20004	sw	4(r30),r2
 1468  000020b4  8fc20000	lw	r2,(r30)
 1469  000020b8  20430001	addi	r3,r2,#1
 1470  000020bc  afc30000	sw	(r30),r3
 1471  000020c0  80420000	lb	r2,(r2)
 1472  000020c4  a0220000	sb	(r1),r2
 1473  000020c8  0bffffbc	j	L101_LF2
 1474  000020cc  54000000	nop; delay slot nop
 1475  000020d0          	L102_LF2:
 1476  000020d0          	L100_LF2:
 1477  000020d0  8fa20000	lw	r2,0(r29)
 1478  000020d4  8fa30004	lw	r3,4(r29)
 1479  000020d8  8fdffff8	lw	r31,-8(r30)
 1480  000020dc  001ee820	add	r29,r0,r30
 1481  000020e0  8fdefffc	lw	r30,-4(r30)
 1482  000020e4  4be00000	jr	r31
 1483  000020e8  54000000	nop
 1484  000020ec          	.endproc _bcopy
 1485  000020ec          	.align 2
 1486  000020ec          	.proc _bzero
 1487  000020ec          	.global _bzero
 1488  000020ec          	_bzero:
 1489                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1490  000020ec  afbefffc	sw	-4(r29),r30; push fp
 1491  000020f0  001df020	add	r30,r0,r29; fp = sp
 1492  000020f4  afbffff8	sw	-8(r29),r31; push ret addr
 1493  000020f8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1494  000020fc  afa20000	sw	0(r29),r2
 1495  00002100  54000000	nop
 1496  00002104          	L105_LF2:
 1497  00002104  8fc10004	lw	r1,4(r30)
 1498  00002108  2022ffff	addi	r2,r1,#-1
 1499  0000210c  afc20004	sw	4(r30),r2
 1500  00002110  6c210000	sgti	r1,r1,#0
 1501  00002114  1420000c	bnez	r1,L107_LF2
 1502  00002118  54000000	nop; delay slot nop
 1503  0000211c  08000020	j	L106_LF2
 1504  00002120  54000000	nop; delay slot nop
 1505  00002124          	L107_LF2:
 1506  00002124  8fc10000	lw	r1,(r30)
 1507  00002128  20220001	addi	r2,r1,#1
 1508  0000212c  afc20000	sw	(r30),r2
 1509  00002130  20020000	addi	r2,r0,(#0x0)&0xff
 1510  00002134  a0220000	sb	(r1),r2
 1511  00002138  0bffffc8	j	L105_LF2
 1512  0000213c  54000000	nop; delay slot nop
 1513  00002140          	L106_LF2:
 1514  00002140          	L104_LF2:
 1515  00002140  8fa20000	lw	r2,0(r29)
 1516  00002144  8fdffff8	lw	r31,-8(r30)
 1517  00002148  001ee820	add	r29,r0,r30
 1518  0000214c  8fdefffc	lw	r30,-4(r30)
 1519  00002150  4be00000	jr	r31
 1520  00002154  54000000	nop
 1521  00002158          	.endproc _bzero
 1522  00002158          	.align 2
 1523  00002158          	.proc _min
 1524  00002158          	.global _min
 1525  00002158          	_min:
 1526                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1527  00002158  afbefffc	sw	-4(r29),r30; push fp
 1528  0000215c  001df020	add	r30,r0,r29; fp = sp
 1529  00002160  afbffff8	sw	-8(r29),r31; push ret addr
 1530  00002164  2fbd0010	subui	r29,r29,#16; alloc local storage
 1531  00002168  afa20000	sw	0(r29),r2
 1532  0000216c  afa30004	sw	4(r29),r3
 1533  00002170  8fc10000	lw	r1,(r30)
 1534  00002174  8fc20004	lw	r2,4(r30)
 1535  00002178  0022182c	sle	r3,r1,r2
 1536  0000217c  14600008	bnez	r3,L109_LF2
 1537  00002180  54000000	nop; delay slot nop
 1538  00002184  8fc10004	lw	r1,4(r30)
 1539  00002188          	L109_LF2:
 1540  00002188  08000004	j	L108_LF2
 1541  0000218c  54000000	nop; delay slot nop
 1542  00002190          	L108_LF2:
 1543  00002190  8fa20000	lw	r2,0(r29)
 1544  00002194  8fa30004	lw	r3,4(r29)
 1545  00002198  8fdffff8	lw	r31,-8(r30)
 1546  0000219c  001ee820	add	r29,r0,r30
 1547  000021a0  8fdefffc	lw	r30,-4(r30)
 1548  000021a4  4be00000	jr	r31
 1549  000021a8  54000000	nop
 1550  000021ac          	.endproc _min
 1551  000021ac          	.align 2
 1552  000021ac          	.proc _max
 1553  000021ac          	.global _max
 1554  000021ac          	_max:
 1555                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1556  000021ac  afbefffc	sw	-4(r29),r30; push fp
 1557  000021b0  001df020	add	r30,r0,r29; fp = sp
 1558  000021b4  afbffff8	sw	-8(r29),r31; push ret addr
 1559  000021b8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1560  000021bc  afa20000	sw	0(r29),r2
 1561  000021c0  afa30004	sw	4(r29),r3
 1562  000021c4  8fc10000	lw	r1,(r30)
 1563  000021c8  8fc20004	lw	r2,4(r30)
 1564  000021cc  0022182d	sge	r3,r1,r2
 1565  000021d0  14600008	bnez	r3,L111_LF2
 1566  000021d4  54000000	nop; delay slot nop
 1567  000021d8  8fc10004	lw	r1,4(r30)
 1568  000021dc          	L111_LF2:
 1569  000021dc  08000004	j	L110_LF2
 1570  000021e0  54000000	nop; delay slot nop
 1571  000021e4          	L110_LF2:
 1572  000021e4  8fa20000	lw	r2,0(r29)
 1573  000021e8  8fa30004	lw	r3,4(r29)
 1574  000021ec  8fdffff8	lw	r31,-8(r30)
 1575  000021f0  001ee820	add	r29,r0,r30
 1576  000021f4  8fdefffc	lw	r30,-4(r30)
 1577  000021f8  4be00000	jr	r31
 1578  000021fc  54000000	nop
 1579  00002200          	.endproc _max
 1580                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1581                      ;;;
 1582                      ;;; Most of the traps are called in files from libtraps.
 1585  00002200          	.align 2
 1586  00002200          	.proc _exit
 1587  00002200          	.global _exit
 1588  00002200          	_exit:
 1589  00002200  44000300	trap	#0x300
 1590  00002204  4be00000	jr	r31
 1591  00002208  54000000	nop
 1592  0000220c          	.endproc _exit
 1594                      ; for the benefit of gcc.
 1595  0000220c          	.proc ___main
 1596  0000220c          	.global ___main
 1597  0000220c          	___main:
 1598  0000220c  4be00000	jr	r31
 1599  00002210  54000000	nop
 1600  00002214          	.endproc ___main
 1601  00002214          	.text
 1602  00002214          	.global _etext
 1603  00002214          	_etext:
 1604  00002214          	.align 3
 1605  00002218          	.data
 1606  000030b7          	.global _edata
 1607  000030b7          	_edata:
