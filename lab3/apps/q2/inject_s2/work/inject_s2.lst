 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 315
    4                      ; Text size: 4676
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  533200  	.ascii "S2\000"
   83  00003003          	.align 2
   84  00003004          	LC1_LF0:
   85  00003004  55736167	.ascii "Usage\000"
   85  00003008  6500    	
   86  0000300a          	.align 2
   87  0000300c          	LC2_LF0:
   88  0000300c  3c68616e	.ascii "<handle_to_shared_memory_page> <handle_to_page_mapped_semaphore<handle"
   88  00003010  646c655f	
   88  00003014  746f5f73	
   88  00003018  68617265	
   88  0000301c  645f6d65	
   88  00003020  6d6f7279	
   88  00003024  5f706167	
   88  00003028  653e203c	
   88  0000302c  68616e64	
   88  00003030  6c655f74	
   88  00003034  6f5f7061	
   88  00003038  67655f6d	
   88  0000303c  61707065	
   88  00003040  645f7365	
   88  00003044  6d617068	
   88  00003048  6f72653c	
   88  0000304c  68616e64	
   88  00003050  6c65    	
   89  00003052  20746f20	.ascii " to lock>\000"
   89  00003056  6c6f636b	
   89  0000305a  3e00    	
   90  0000305c          	.align 2
   91  0000305c          	LC3_LF0:
   92  0000305c  496e6a65	.ascii "Injection S0: %d Couldn\'t open mbox\n\000"
   92  00003060  6374696f	
   92  00003064  6e205330	
   92  00003068  3a202564	
   92  0000306c  20436f75	
   92  00003070  6c646e27	
   92  00003074  74206f70	
   92  00003078  656e206d	
   92  0000307c  626f780a	
   92  00003080  00      	
   93  00003081          	.align 2
   94  00003084          	LC4_LF0:
   95  00003084  496e6a65	.ascii "Injection S0: %d Couldn\'t send mbox\n\000"
   95  00003088  6374696f	
   95  0000308c  6e205330	
   95  00003090  3a202564	
   95  00003094  20436f75	
   95  00003098  6c646e27	
   95  0000309c  74207365	
   95  000030a0  6e64206d	
   95  000030a4  626f780a	
   95  000030a8  00      	
   96  000030a9          	.align 2
   97  000030ac          	LC5_LF0:
   98  000030ac  53322069	.ascii "S2 injected into Radeon atmosphere, PID: %d\n\000"
   98  000030b0  6e6a6563	
   98  000030b4  74656420	
   98  000030b8  696e746f	
   98  000030bc  20526164	
   98  000030c0  656f6e20	
   98  000030c4  61746d6f	
   98  000030c8  73706865	
   98  000030cc  72652c20	
   98  000030d0  5049443a	
   98  000030d4  2025640a	
   98  000030d8  00      	
   99  000030d9          	.align 2
  100  000030dc          	LC6_LF0:
  101  000030dc  496e6a65	.ascii "Injection S0: %d Couldn\'t close mbox\n\000"
  101  000030e0  6374696f	
  101  000030e4  6e205330	
  101  000030e8  3a202564	
  101  000030ec  20436f75	
  101  000030f0  6c646e27	
  101  000030f4  7420636c	
  101  000030f8  6f736520	
  101  000030fc  6d626f78	
  101  00003100  0a00    	
  102  00003102          	.align 2
  103  00003104          	LC7_LF0:
  104  00003104  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  104  00003108  73656d61	
  104  0000310c  70686f72	
  104  00003110  6520735f	
  104  00003114  70726f63	
  104  00003118  735f636f	
  104  0000311c  6d706c65	
  104  00003120  74656420	
  104  00003124  28256429	
  104  00003128  20696e20	
  104  0000312c  00      	
  105  0000312d          	.align 2
  106  00003130          	LC8_LF0:
  107  00003130  65786974	.ascii "exiting..\n\000"
  107  00003134  696e672e	
  107  00003138  2e0a00  	
  108  0000313b          	.text
  109  000010d4          	.align 2
  110  000010d4          	.proc _main
  111  000010d4          	.global _main
  112  000010d4          	_main:
  113                      ;  Function 'main'; 8 bytes of locals, 0 regs to save.
  114  000010d4  afbefffc	sw	-4(r29),r30; push fp
  115  000010d8  001df020	add	r30,r0,r29; fp = sp
  116  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  117  000010e0  2fbd0010	subui	r29,r29,#16; alloc local storage
  118  000010e4  8fc20000	lw	r2,(r30)
  119  000010e8  8fc30004	lw	r3,4(r30)
  120  000010ec  0c00114c	jal	___main
  121  000010f0  54000000	nop; not filled.
  122  000010f4  3c010000	lhi	r1,((LC0_LF0)>>16)&0xffff
  123  000010f8  24213000	addui	r1,r1,(LC0_LF0)&0xffff
  124  000010fc  80250000	lb	r5,(r1)
  125  00001100  a3c5fff0	sb	-16(r30),r5
  126  00001104  80250001	lb	r5,1(r1)
  127  00001108  a3c5fff1	sb	-15(r30),r5
  128  0000110c  80210002	lb	r1,2(r1)
  129  00001110  a3c1fff2	sb	-14(r30),r1
  130  00001114  64410003	snei	r1,r2,#3
  131  00001118  1020004c	beqz	r1,L14_LF0
  132  0000111c  54000000	nop; not filled.
  133  00001120  23bdfff8	addi	r29,r29,#-8
  134  00001124  3c050000	lhi	r5,((LC1_LF0)>>16)&0xffff
  135  00001128  24a53004	addui	r5,r5,(LC1_LF0)&0xffff
  136  0000112c  afa50000	sw	(r29),r5
  137  00001130  0c000258	jal	_Printf
  138  00001134  54000000	nop; not filled.
  139  00001138  8c650000	lw	r5,(r3)
  140  0000113c  afa50000	sw	(r29),r5
  141  00001140  0c000248	jal	_Printf
  142  00001144  54000000	nop; not filled.
  143  00001148  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  144  0000114c  24a5300c	addui	r5,r5,(LC2_LF0)&0xffff
  145  00001150  afa50000	sw	(r29),r5
  146  00001154  0c000234	jal	_Printf
  147  00001158  54000000	nop; not filled.
  148  0000115c  0c000334	jal	_Exit
  149  00001160  54000000	nop; not filled.
  150  00001164  23bd0008	addi	r29,r29,#8
  151  00001168          	L14_LF0:
  152  00001168  23bdfff0	addi	r29,r29,#-16
  153  0000116c  8c650008	lw	r5,8(r3)
  154  00001170  afa50000	sw	(r29),r5
  155  00001174  20050000	addi	r5,r0,#0
  156  00001178  afa50004	sw	4(r29),r5
  157  0000117c  2005000a	addi	r5,r0,#10
  158  00001180  afa50008	sw	8(r29),r5
  159  00001184  0c000bb8	jal	_dstrtol
  160  00001188  54000000	nop; not filled.
  161  0000118c  00012020	add	r4,r0,r1
  162  00001190  8c650004	lw	r5,4(r3)
  163  00001194  afa50000	sw	(r29),r5
  164  00001198  20050000	addi	r5,r0,#0
  165  0000119c  afa50004	sw	4(r29),r5
  166  000011a0  2005000a	addi	r5,r0,#10
  167  000011a4  afa50008	sw	8(r29),r5
  168  000011a8  0c000b94	jal	_dstrtol
  169  000011ac  54000000	nop; not filled.
  170  000011b0  00011020	add	r2,r0,r1
  171  000011b4  afa20000	sw	(r29),r2
  172  000011b8  0c000290	jal	_mbox_open
  173  000011bc  54000000	nop; not filled.
  174  000011c0  23bd0010	addi	r29,r29,#16
  175  000011c4  64210001	snei	r1,r1,#1
  176  000011c8  10200034	beqz	r1,L15_LF0
  177  000011cc  54000000	nop; not filled.
  178  000011d0  0c0001c4	jal	_getpid
  179  000011d4  54000000	nop; not filled.
  180  000011d8  23bdfff8	addi	r29,r29,#-8
  181  000011dc  3c050000	lhi	r5,((LC3_LF0)>>16)&0xffff
  182  000011e0  24a5305c	addui	r5,r5,(LC3_LF0)&0xffff
  183  000011e4  afa50000	sw	(r29),r5
  184  000011e8  afa10004	sw	4(r29),r1
  185  000011ec  0c00019c	jal	_Printf
  186  000011f0  54000000	nop; not filled.
  187  000011f4  0c00029c	jal	_Exit
  188  000011f8  54000000	nop; not filled.
  189  000011fc  23bd0008	addi	r29,r29,#8
  190  00001200          	L15_LF0:
  191  00001200  23bdfff0	addi	r29,r29,#-16
  192  00001204  afa20000	sw	(r29),r2
  193  00001208  20050001	addi	r5,r0,#1
  194  0000120c  afa50004	sw	4(r29),r5
  195  00001210  23c1fff0	addi	r1,r30,#-16
  196  00001214  afa10008	sw	8(r29),r1
  197  00001218  0c000248	jal	_mbox_send
  198  0000121c  54000000	nop; not filled.
  199  00001220  23bd0010	addi	r29,r29,#16
  200  00001224  64210001	snei	r1,r1,#1
  201  00001228  10200034	beqz	r1,L16_LF0
  202  0000122c  54000000	nop; not filled.
  203  00001230  0c000164	jal	_getpid
  204  00001234  54000000	nop; not filled.
  205  00001238  23bdfff8	addi	r29,r29,#-8
  206  0000123c  3c050000	lhi	r5,((LC4_LF0)>>16)&0xffff
  207  00001240  24a53084	addui	r5,r5,(LC4_LF0)&0xffff
  208  00001244  afa50000	sw	(r29),r5
  209  00001248  afa10004	sw	4(r29),r1
  210  0000124c  0c00013c	jal	_Printf
  211  00001250  54000000	nop; not filled.
  212  00001254  0c00023c	jal	_Exit
  213  00001258  54000000	nop; not filled.
  214  0000125c  23bd0008	addi	r29,r29,#8
  215  00001260          	L16_LF0:
  216  00001260  0c000134	jal	_getpid
  217  00001264  54000000	nop; not filled.
  218  00001268  23bdfff8	addi	r29,r29,#-8
  219  0000126c  3c050000	lhi	r5,((LC5_LF0)>>16)&0xffff
  220  00001270  24a530ac	addui	r5,r5,(LC5_LF0)&0xffff
  221  00001274  afa50000	sw	(r29),r5
  222  00001278  afa10004	sw	4(r29),r1
  223  0000127c  0c00010c	jal	_Printf
  224  00001280  54000000	nop; not filled.
  225  00001284  afa20000	sw	(r29),r2
  226  00001288  0c0001cc	jal	_mbox_close
  227  0000128c  54000000	nop; not filled.
  228  00001290  23bd0008	addi	r29,r29,#8
  229  00001294  64210001	snei	r1,r1,#1
  230  00001298  10200034	beqz	r1,L17_LF0
  231  0000129c  54000000	nop; not filled.
  232  000012a0  0c0000f4	jal	_getpid
  233  000012a4  54000000	nop; not filled.
  234  000012a8  23bdfff8	addi	r29,r29,#-8
  235  000012ac  3c050000	lhi	r5,((LC6_LF0)>>16)&0xffff
  236  000012b0  24a530dc	addui	r5,r5,(LC6_LF0)&0xffff
  237  000012b4  afa50000	sw	(r29),r5
  238  000012b8  afa10004	sw	4(r29),r1
  239  000012bc  0c0000cc	jal	_Printf
  240  000012c0  54000000	nop; not filled.
  241  000012c4  0c0001cc	jal	_Exit
  242  000012c8  54000000	nop; not filled.
  243  000012cc  23bd0008	addi	r29,r29,#8
  244  000012d0          	L17_LF0:
  245  000012d0  23bdfff8	addi	r29,r29,#-8
  246  000012d4  afa40000	sw	(r29),r4
  247  000012d8  0c000104	jal	_sem_signal
  248  000012dc  54000000	nop; not filled.
  249  000012e0  23bd0008	addi	r29,r29,#8
  250  000012e4  64210001	snei	r1,r1,#1
  251  000012e8  10200050	beqz	r1,L18_LF0
  252  000012ec  54000000	nop; not filled.
  253  000012f0  23bdfff8	addi	r29,r29,#-8
  254  000012f4  3c050000	lhi	r5,((LC7_LF0)>>16)&0xffff
  255  000012f8  24a53104	addui	r5,r5,(LC7_LF0)&0xffff
  256  000012fc  afa50000	sw	(r29),r5
  257  00001300  afa40004	sw	4(r29),r4
  258  00001304  0c000084	jal	_Printf
  259  00001308  54000000	nop; not filled.
  260  0000130c  8c630000	lw	r3,(r3)
  261  00001310  afa30000	sw	(r29),r3
  262  00001314  0c000074	jal	_Printf
  263  00001318  54000000	nop; not filled.
  264  0000131c  3c050000	lhi	r5,((LC8_LF0)>>16)&0xffff
  265  00001320  24a53130	addui	r5,r5,(LC8_LF0)&0xffff
  266  00001324  afa50000	sw	(r29),r5
  267  00001328  0c000060	jal	_Printf
  268  0000132c  54000000	nop; not filled.
  269  00001330  0c000160	jal	_Exit
  270  00001334  54000000	nop; not filled.
  271  00001338  23bd0008	addi	r29,r29,#8
  272  0000133c          	L18_LF0:
  273  0000133c  0c000ef0	jal	_exit
  274  00001340  54000000	nop
  275  00001344          	.endproc _main
  276                      ;;;
  277                      ;;; Stub functions for DLX traps.
  278                      ;;;
  279                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  280                      ;;;
  281                      ;;; The traps such as Open and Close
  282                      ;;; (note the capital letters) are for use by user programs.  The traps
  283                      ;;; with names such as open and close (lower case) are for use by the OS.
  284                      ;;;
  287  00001344          	.align 2
  289                      ;;; The following are the traps to be used by user-level programs
  290                      ;;;
  292  00001344          	.align 2
  293  00001344          	.proc _Open
  294  00001344          	.global _Open
  295  00001344          	_Open:
  296                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  297                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  298                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  299  00001344  44000213	trap	#0x213
  300  00001348  4be00000	jr	r31
  301  0000134c  54000000	nop
  302  00001350          	.endproc _Open
  304  00001350          	.proc _Close
  305  00001350          	.global _Close
  306  00001350          	_Close:
  307  00001350  44000214	trap	#0x214
  308  00001354  4be00000	jr	r31
  309  00001358  54000000	nop
  310  0000135c          	.endproc _Close
  312  0000135c          	.proc _Read
  313  0000135c          	.global _Read
  314  0000135c          	_Read:
  315  0000135c  44000210	trap	#0x210
  316  00001360  4be00000	jr	r31
  317  00001364  54000000	nop
  318  00001368          	.endproc _Read
  320  00001368          	.proc _Write
  321  00001368          	.global _Write
  322  00001368          	_Write:
  323  00001368  44000211	trap	#0x211
  324  0000136c  4be00000	jr	r31
  325  00001370  54000000	nop
  326  00001374          	.endproc _Write
  328  00001374          	.proc _Lseek
  329  00001374          	.global _Lseek
  330  00001374          	_Lseek:
  331  00001374  44000212	trap	#0x212
  332  00001378  4be00000	jr	r31
  333  0000137c  54000000	nop
  334  00001380          	.endproc _Lseek
  336  00001380          	.proc _Putchar
  337  00001380          	.global _Putchar
  338  00001380          	_Putchar:
  339  00001380  44000280	trap	#0x280
  340  00001384  4be00000	jr	r31
  341  00001388  54000000	nop
  342  0000138c          	.endproc _Putchar
  344  0000138c          	.proc _Printf
  345  0000138c          	.global _Printf
  346  0000138c          	_Printf:
  347  0000138c  44000201	trap	#0x201
  348  00001390  4be00000	jr	r31
  349  00001394  54000000	nop
  350  00001398          	.endproc _Printf
  352  00001398          	.proc _getpid
  353  00001398          	.global _getpid
  354  00001398          	_getpid:
  355  00001398  44000431	trap	#0x431
  356  0000139c  4be00000	jr	r31
  357  000013a0  54000000	nop
  358  000013a4          	.endproc _getpid
  360  000013a4          	.proc _process_create
  361  000013a4          	.global _process_create
  362  000013a4          	_process_create:
  363  000013a4  44000432	trap	#0x432
  364  000013a8  4be00000	jr	r31
  365  000013ac  54000000	nop
  366  000013b0          	.endproc _process_create
  368  000013b0          	.proc _shmget
  369  000013b0          	.global _shmget
  370  000013b0          	_shmget:
  371  000013b0  44000440	trap	#0x440
  372  000013b4  4be00000	jr	r31
  373  000013b8  54000000	nop
  374  000013bc          	.endproc _shmget
  376  000013bc          	.proc _shmat
  377  000013bc          	.global _shmat
  378  000013bc          	_shmat:
  379  000013bc  44000441	trap	#0x441
  380  000013c0  4be00000	jr	r31
  381  000013c4  54000000	nop
  382  000013c8          	.endproc _shmat
  384  000013c8          	.proc _sem_create
  385  000013c8          	.global _sem_create
  386  000013c8          	_sem_create:
  387  000013c8  44000450	trap	#0x450
  388  000013cc  4be00000	jr	r31
  389  000013d0  54000000	nop
  390  000013d4          	.endproc _sem_create
  392  000013d4          	.proc _sem_wait
  393  000013d4          	.global _sem_wait
  394  000013d4          	_sem_wait:
  395  000013d4  44000451	trap	#0x451
  396  000013d8  4be00000	jr	r31
  397  000013dc  54000000	nop
  398  000013e0          	.endproc _sem_wait
  400  000013e0          	.proc _sem_signal
  401  000013e0          	.global _sem_signal
  402  000013e0          	_sem_signal:
  403  000013e0  44000452	trap	#0x452
  404  000013e4  4be00000	jr	r31
  405  000013e8  54000000	nop
  406  000013ec          	.endproc _sem_signal
  408  000013ec          	.proc _lock_create
  409  000013ec          	.global _lock_create
  410  000013ec          	_lock_create:
  411  000013ec  44000453	trap	#0x453
  412  000013f0  4be00000	jr	r31
  413  000013f4  54000000	nop
  414  000013f8          	.endproc _lock_create
  416  000013f8          	.proc _lock_acquire
  417  000013f8          	.global _lock_acquire
  418  000013f8          	_lock_acquire:
  419  000013f8  44000454	trap	#0x454
  420  000013fc  4be00000	jr	r31
  421  00001400  54000000	nop
  422  00001404          	.endproc _lock_acquire
  424  00001404          	.proc _lock_release
  425  00001404          	.global _lock_release
  426  00001404          	_lock_release:
  427  00001404  44000455	trap	#0x455
  428  00001408  4be00000	jr	r31
  429  0000140c  54000000	nop
  430  00001410          	.endproc _lock_release
  432  00001410          	.proc _cond_create
  433  00001410          	.global _cond_create
  434  00001410          	_cond_create:
  435  00001410  44000456	trap	#0x456
  436  00001414  4be00000	jr	r31
  437  00001418  54000000	nop
  438  0000141c          	.endproc _cond_create
  440  0000141c          	.proc _cond_wait
  441  0000141c          	.global _cond_wait
  442  0000141c          	_cond_wait:
  443  0000141c  44000457	trap	#0x457
  444  00001420  4be00000	jr	r31
  445  00001424  54000000	nop
  446  00001428          	.endproc _cond_wait
  448  00001428          	.proc _cond_signal
  449  00001428          	.global _cond_signal
  450  00001428          	_cond_signal:
  451  00001428  44000458	trap	#0x458
  452  0000142c  4be00000	jr	r31
  453  00001430  54000000	nop
  454  00001434          	.endproc _cond_signal
  456  00001434          	.proc _cond_broadcast
  457  00001434          	.global _cond_broadcast
  458  00001434          	_cond_broadcast:
  459  00001434  44000459	trap	#0x459
  460  00001438  4be00000	jr	r31
  461  0000143c  54000000	nop
  462  00001440          	.endproc _cond_broadcast
  464  00001440          	.proc _mbox_create
  465  00001440          	.global _mbox_create
  466  00001440          	_mbox_create:
  467  00001440  44000460	trap	#0x460
  468  00001444  4be00000	jr	r31
  469  00001448  54000000	nop
  470  0000144c          	.endproc _mbox_create
  472  0000144c          	.proc _mbox_open
  473  0000144c          	.global _mbox_open
  474  0000144c          	_mbox_open:
  475  0000144c  44000461	trap	#0x461
  476  00001450  4be00000	jr	r31
  477  00001454  54000000	nop
  478  00001458          	.endproc _mbox_open
  480  00001458          	.proc _mbox_close
  481  00001458          	.global _mbox_close
  482  00001458          	_mbox_close:
  483  00001458  44000462	trap	#0x462
  484  0000145c  4be00000	jr	r31
  485  00001460  54000000	nop
  486  00001464          	.endproc _mbox_close
  488  00001464          	.proc _mbox_send
  489  00001464          	.global _mbox_send
  490  00001464          	_mbox_send:
  491  00001464  44000463	trap	#0x463
  492  00001468  4be00000	jr	r31
  493  0000146c  54000000	nop
  494  00001470          	.endproc _mbox_send
  496  00001470          	.proc _mbox_recv
  497  00001470          	.global _mbox_recv
  498  00001470          	_mbox_recv:
  499  00001470  44000464	trap	#0x464
  500  00001474  4be00000	jr	r31
  501  00001478  54000000	nop
  502  0000147c          	.endproc _mbox_recv
  504  0000147c          	.proc _sleep
  505  0000147c          	.global _sleep
  506  0000147c          	_sleep:
  507  0000147c  44000465	trap	#0x465
  508  00001480  4be00000	jr	r31
  509  00001484  54000000	nop
  510  00001488          	.endproc _sleep
  512  00001488          	.proc _yield
  513  00001488          	.global _yield
  514  00001488          	_yield:
  515  00001488  44000466	trap	#0x466
  516  0000148c  4be00000	jr	r31
  517  00001490  54000000	nop
  518  00001494          	.endproc _yield
  521  00001494          	.proc _Exit
  522  00001494          	.global _Exit
  523  00001494          	_Exit:
  524  00001494  44000500	trap	#0x500
  525  00001498  4be00000	jr	r31
  526  0000149c  54000000	nop
  527  000014a0          	.endproc _Exit
  528                      ; Compiled by GCC
  530  000014a0          	.align 2
  531  000014a0          	.proc _isspace
  532  000014a0          	.global _isspace
  533  000014a0          	_isspace:
  534                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  535  000014a0  afbefffc	sw	-4(r29),r30; push fp
  536  000014a4  001df020	add	r30,r0,r29; fp = sp
  537  000014a8  afbffff8	sw	-8(r29),r31; push ret addr
  538  000014ac  2fbd0018	subui	r29,r29,#24; alloc local storage
  539  000014b0  afa20000	sw	0(r29),r2
  540  000014b4  afa30004	sw	4(r29),r3
  541  000014b8  afa40008	sw	8(r29),r4
  542  000014bc  83c20003	lb	r2,3(r30)
  543  000014c0  20010000	addi	r1,r0,#0
  544  000014c4  304300ff	andi	r3,r2,#0x00ff
  545  000014c8  60640020	seqi	r4,r3,#32
  546  000014cc  1480002c	bnez	r4,L3_LF2
  547  000014d0  54000000	nop; delay slot nop
  548  000014d4  304300ff	andi	r3,r2,#0x00ff
  549  000014d8  60640009	seqi	r4,r3,#9
  550  000014dc  1480001c	bnez	r4,L3_LF2
  551  000014e0  54000000	nop; delay slot nop
  552  000014e4  304300ff	andi	r3,r2,#0x00ff
  553  000014e8  6064000a	seqi	r4,r3,#10
  554  000014ec  1480000c	bnez	r4,L3_LF2
  555  000014f0  54000000	nop; delay slot nop
  556  000014f4  08000008	j	L2_LF2
  557  000014f8  54000000	nop; delay slot nop
  558  000014fc          	L3_LF2:
  559  000014fc  20010001	addi	r1,r0,#1
  560  00001500          	L2_LF2:
  561  00001500  08000004	j	L1_LF2
  562  00001504  54000000	nop; delay slot nop
  563  00001508          	L1_LF2:
  564  00001508  8fa20000	lw	r2,0(r29)
  565  0000150c  8fa30004	lw	r3,4(r29)
  566  00001510  8fa40008	lw	r4,8(r29)
  567  00001514  8fdffff8	lw	r31,-8(r30)
  568  00001518  001ee820	add	r29,r0,r30
  569  0000151c  8fdefffc	lw	r30,-4(r30)
  570  00001520  4be00000	jr	r31
  571  00001524  54000000	nop
  572  00001528          	.endproc _isspace
  573  00001528          	.align 2
  574  00001528          	.proc _isxdigit
  575  00001528          	.global _isxdigit
  576  00001528          	_isxdigit:
  577                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  578  00001528  afbefffc	sw	-4(r29),r30; push fp
  579  0000152c  001df020	add	r30,r0,r29; fp = sp
  580  00001530  afbffff8	sw	-8(r29),r31; push ret addr
  581  00001534  2fbd0018	subui	r29,r29,#24; alloc local storage
  582  00001538  afa20000	sw	0(r29),r2
  583  0000153c  afa30004	sw	4(r29),r3
  584  00001540  afa40008	sw	8(r29),r4
  585  00001544  83c20003	lb	r2,3(r30)
  586  00001548  20010000	addi	r1,r0,#0
  587  0000154c  304300ff	andi	r3,r2,#0x00ff
  588  00001550  6c64002f	sgtui	r4,r3,#47
  589  00001554  1080001c	beqz	r4,L7_LF2
  590  00001558  54000000	nop; delay slot nop
  591  0000155c  304300ff	andi	r3,r2,#0x00ff
  592  00001560  70640039	sleui	r4,r3,#57
  593  00001564  1480005c	bnez	r4,L6_LF2
  594  00001568  54000000	nop; delay slot nop
  595  0000156c  08000004	j	L7_LF2
  596  00001570  54000000	nop; delay slot nop
  597  00001574          	L7_LF2:
  598  00001574  304300ff	andi	r3,r2,#0x00ff
  599  00001578  6c640060	sgtui	r4,r3,#96
  600  0000157c  1080001c	beqz	r4,L8_LF2
  601  00001580  54000000	nop; delay slot nop
  602  00001584  304300ff	andi	r3,r2,#0x00ff
  603  00001588  70640066	sleui	r4,r3,#102
  604  0000158c  14800034	bnez	r4,L6_LF2
  605  00001590  54000000	nop; delay slot nop
  606  00001594  08000004	j	L8_LF2
  607  00001598  54000000	nop; delay slot nop
  608  0000159c          	L8_LF2:
  609  0000159c  304300ff	andi	r3,r2,#0x00ff
  610  000015a0  6c640040	sgtui	r4,r3,#64
  611  000015a4  10800020	beqz	r4,L5_LF2
  612  000015a8  54000000	nop; delay slot nop
  613  000015ac  304300ff	andi	r3,r2,#0x00ff
  614  000015b0  70640041	sleui	r4,r3,#65
  615  000015b4  1480000c	bnez	r4,L6_LF2
  616  000015b8  54000000	nop; delay slot nop
  617  000015bc  08000008	j	L5_LF2
  618  000015c0  54000000	nop; delay slot nop
  619  000015c4          	L6_LF2:
  620  000015c4  20010001	addi	r1,r0,#1
  621  000015c8          	L5_LF2:
  622  000015c8  08000004	j	L4_LF2
  623  000015cc  54000000	nop; delay slot nop
  624  000015d0          	L4_LF2:
  625  000015d0  8fa20000	lw	r2,0(r29)
  626  000015d4  8fa30004	lw	r3,4(r29)
  627  000015d8  8fa40008	lw	r4,8(r29)
  628  000015dc  8fdffff8	lw	r31,-8(r30)
  629  000015e0  001ee820	add	r29,r0,r30
  630  000015e4  8fdefffc	lw	r30,-4(r30)
  631  000015e8  4be00000	jr	r31
  632  000015ec  54000000	nop
  633  000015f0          	.endproc _isxdigit
  634  000015f0          	.align 2
  635  000015f0          	.proc _dstrcpy
  636  000015f0          	.global _dstrcpy
  637  000015f0          	_dstrcpy:
  638                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  639  000015f0  afbefffc	sw	-4(r29),r30; push fp
  640  000015f4  001df020	add	r30,r0,r29; fp = sp
  641  000015f8  afbffff8	sw	-8(r29),r31; push ret addr
  642  000015fc  2fbd0018	subui	r29,r29,#24; alloc local storage
  643  00001600  afa20000	sw	0(r29),r2
  644  00001604  afa30004	sw	4(r29),r3
  645  00001608  8fc10000	lw	r1,(r30)
  646  0000160c  afc1fff4	sw	-12(r30),r1
  647  00001610          	L10_LF2:
  648  00001610  8fc10000	lw	r1,(r30)
  649  00001614  20220001	addi	r2,r1,#1
  650  00001618  afc20000	sw	(r30),r2
  651  0000161c  8fc20004	lw	r2,4(r30)
  652  00001620  20430001	addi	r3,r2,#1
  653  00001624  afc30004	sw	4(r30),r3
  654  00001628  80420000	lb	r2,(r2)
  655  0000162c  a0220000	sb	(r1),r2
  656  00001630  a3c2fff3	sb	-13(r30),r2
  657  00001634          	L12_LF2:
  658  00001634  93c1fff3	lbu	r1,-13(r30)
  659  00001638  64220000	snei	r2,r1,#0
  660  0000163c  1440000c	bnez	r2,L13_LF2
  661  00001640  54000000	nop; delay slot nop
  662  00001644  0800000c	j	L11_LF2
  663  00001648  54000000	nop; delay slot nop
  664  0000164c          	L13_LF2:
  665  0000164c  0bffffc0	j	L10_LF2
  666  00001650  54000000	nop; delay slot nop
  667  00001654          	L11_LF2:
  668  00001654  8fc1fff4	lw	r1,-12(r30)
  669  00001658  08000004	j	L9_LF2
  670  0000165c  54000000	nop; delay slot nop
  671  00001660          	L9_LF2:
  672  00001660  8fa20000	lw	r2,0(r29)
  673  00001664  8fa30004	lw	r3,4(r29)
  674  00001668  8fdffff8	lw	r31,-8(r30)
  675  0000166c  001ee820	add	r29,r0,r30
  676  00001670  8fdefffc	lw	r30,-4(r30)
  677  00001674  4be00000	jr	r31
  678  00001678  54000000	nop
  679  0000167c          	.endproc _dstrcpy
  680  0000167c          	.align 2
  681  0000167c          	.proc _dstrncpy
  682  0000167c          	.global _dstrncpy
  683  0000167c          	_dstrncpy:
  684                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  685  0000167c  afbefffc	sw	-4(r29),r30; push fp
  686  00001680  001df020	add	r30,r0,r29; fp = sp
  687  00001684  afbffff8	sw	-8(r29),r31; push ret addr
  688  00001688  2fbd0018	subui	r29,r29,#24; alloc local storage
  689  0000168c  afa20000	sw	0(r29),r2
  690  00001690  afa30004	sw	4(r29),r3
  691  00001694  8fc10000	lw	r1,(r30)
  692  00001698  afc1fff4	sw	-12(r30),r1
  693  0000169c          	L15_LF2:
  694  0000169c  8fc10008	lw	r1,8(r30)
  695  000016a0  2022ffff	addi	r2,r1,#-1
  696  000016a4  afc20008	sw	8(r30),r2
  697  000016a8  70210000	slei	r1,r1,#0
  698  000016ac  1020000c	beqz	r1,L18_LF2
  699  000016b0  54000000	nop; delay slot nop
  700  000016b4  08000048	j	L16_LF2
  701  000016b8  54000000	nop; delay slot nop
  702  000016bc          	L18_LF2:
  703  000016bc  8fc10000	lw	r1,(r30)
  704  000016c0  20220001	addi	r2,r1,#1
  705  000016c4  afc20000	sw	(r30),r2
  706  000016c8  8fc20004	lw	r2,4(r30)
  707  000016cc  20430001	addi	r3,r2,#1
  708  000016d0  afc30004	sw	4(r30),r3
  709  000016d4  80420000	lb	r2,(r2)
  710  000016d8  a0220000	sb	(r1),r2
  711  000016dc  a3c2fff3	sb	-13(r30),r2
  712  000016e0          	L17_LF2:
  713  000016e0  93c1fff3	lbu	r1,-13(r30)
  714  000016e4  64220000	snei	r2,r1,#0
  715  000016e8  1440000c	bnez	r2,L19_LF2
  716  000016ec  54000000	nop; delay slot nop
  717  000016f0  0800000c	j	L16_LF2
  718  000016f4  54000000	nop; delay slot nop
  719  000016f8          	L19_LF2:
  720  000016f8  0bffffa0	j	L15_LF2
  721  000016fc  54000000	nop; delay slot nop
  722  00001700          	L16_LF2:
  723  00001700  8fc1fff4	lw	r1,-12(r30)
  724  00001704  08000004	j	L14_LF2
  725  00001708  54000000	nop; delay slot nop
  726  0000170c          	L14_LF2:
  727  0000170c  8fa20000	lw	r2,0(r29)
  728  00001710  8fa30004	lw	r3,4(r29)
  729  00001714  8fdffff8	lw	r31,-8(r30)
  730  00001718  001ee820	add	r29,r0,r30
  731  0000171c  8fdefffc	lw	r30,-4(r30)
  732  00001720  4be00000	jr	r31
  733  00001724  54000000	nop
  734  00001728          	.endproc _dstrncpy
  735  00001728          	.align 2
  736  00001728          	.proc _dstrcat
  737  00001728          	.global _dstrcat
  738  00001728          	_dstrcat:
  739                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  740  00001728  afbefffc	sw	-4(r29),r30; push fp
  741  0000172c  001df020	add	r30,r0,r29; fp = sp
  742  00001730  afbffff8	sw	-8(r29),r31; push ret addr
  743  00001734  2fbd0018	subui	r29,r29,#24; alloc local storage
  744  00001738  afa20000	sw	0(r29),r2
  745  0000173c  8fc10000	lw	r1,(r30)
  746  00001740  afc1fff4	sw	-12(r30),r1
  747  00001744          	L21_LF2:
  748  00001744  8fc10000	lw	r1,(r30)
  749  00001748  90220000	lbu	r2,(r1)
  750  0000174c  64410000	snei	r1,r2,#0
  751  00001750  1420000c	bnez	r1,L23_LF2
  752  00001754  54000000	nop; delay slot nop
  753  00001758  0800001c	j	L22_LF2
  754  0000175c  54000000	nop; delay slot nop
  755  00001760          	L23_LF2:
  756  00001760  8fc20000	lw	r2,(r30)
  757  00001764  20410001	addi	r1,r2,#1
  758  00001768  00011020	add	r2,r0,r1
  759  0000176c  afc20000	sw	(r30),r2
  760  00001770  0bffffd0	j	L21_LF2
  761  00001774  54000000	nop; delay slot nop
  762  00001778          	L22_LF2:
  763  00001778  23bdfff8	addi	r29,r29,#-8
  764  0000177c  001d0820	add	r1,r0,r29
  765  00001780  8fc20000	lw	r2,(r30)
  766  00001784  ac220000	sw	(r1),r2
  767  00001788  8fc20004	lw	r2,4(r30)
  768  0000178c  ac220004	sw	4(r1),r2
  769  00001790  0ffffe5c	jal	_dstrcpy
  770  00001794  54000000	nop; delay slot nop
  771  00001798  23bd0008	addi	r29,r29,#8
  772  0000179c  8fc1fff4	lw	r1,-12(r30)
  773  000017a0  08000004	j	L20_LF2
  774  000017a4  54000000	nop; delay slot nop
  775  000017a8          	L20_LF2:
  776  000017a8  8fa20000	lw	r2,0(r29)
  777  000017ac  8fdffff8	lw	r31,-8(r30)
  778  000017b0  001ee820	add	r29,r0,r30
  779  000017b4  8fdefffc	lw	r30,-4(r30)
  780  000017b8  4be00000	jr	r31
  781  000017bc  54000000	nop
  782  000017c0          	.endproc _dstrcat
  783  000017c0          	.align 2
  784  000017c0          	.proc _dstrncmp
  785  000017c0          	.global _dstrncmp
  786  000017c0          	_dstrncmp:
  787                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  788  000017c0  afbefffc	sw	-4(r29),r30; push fp
  789  000017c4  001df020	add	r30,r0,r29; fp = sp
  790  000017c8  afbffff8	sw	-8(r29),r31; push ret addr
  791  000017cc  2fbd0018	subui	r29,r29,#24; alloc local storage
  792  000017d0  afa20000	sw	0(r29),r2
  793  000017d4  afa30004	sw	4(r29),r3
  794  000017d8  54000000	nop
  795  000017dc  20010000	addi	r1,r0,#0
  796  000017e0  afc1fff4	sw	-12(r30),r1
  797  000017e4          	L25_LF2:
  798  000017e4  8fc1fff4	lw	r1,-12(r30)
  799  000017e8  8fc20008	lw	r2,8(r30)
  800  000017ec  0022082a	slt	r1,r1,r2
  801  000017f0  1420000c	bnez	r1,L28_LF2
  802  000017f4  54000000	nop; delay slot nop
  803  000017f8  08000088	j	L26_LF2
  804  000017fc  54000000	nop; delay slot nop
  805  00001800          	L28_LF2:
  806  00001800  8fc10004	lw	r1,4(r30)
  807  00001804  90220000	lbu	r2,(r1)
  808  00001808  64410000	snei	r1,r2,#0
  809  0000180c  14200018	bnez	r1,L29_LF2
  810  00001810  54000000	nop; delay slot nop
  811  00001814  20010000	addi	r1,r0,#0
  812  00001818  080000d8	j	L24_LF2
  813  0000181c  54000000	nop; delay slot nop
  814  00001820  08000028	j	L30_LF2
  815  00001824  54000000	nop; delay slot nop
  816  00001828          	L29_LF2:
  817  00001828  8fc10000	lw	r1,(r30)
  818  0000182c  8fc20004	lw	r2,4(r30)
  819  00001830  90210000	lbu	r1,(r1)
  820  00001834  90420000	lbu	r2,(r2)
  821  00001838  00220829	sne	r1,r1,r2
  822  0000183c  1020000c	beqz	r1,L30_LF2
  823  00001840  54000000	nop; delay slot nop
  824  00001844  0800003c	j	L26_LF2
  825  00001848  54000000	nop; delay slot nop
  826  0000184c          	L31_LF2:
  827  0000184c          	L30_LF2:
  828  0000184c  8fc20000	lw	r2,(r30)
  829  00001850  20410001	addi	r1,r2,#1
  830  00001854  00011020	add	r2,r0,r1
  831  00001858  afc20000	sw	(r30),r2
  832  0000185c  8fc20004	lw	r2,4(r30)
  833  00001860  20410001	addi	r1,r2,#1
  834  00001864  00011020	add	r2,r0,r1
  835  00001868  afc20004	sw	4(r30),r2
  836  0000186c          	L27_LF2:
  837  0000186c  8fc2fff4	lw	r2,-12(r30)
  838  00001870  20410001	addi	r1,r2,#1
  839  00001874  00011020	add	r2,r0,r1
  840  00001878  afc2fff4	sw	-12(r30),r2
  841  0000187c  0bffff64	j	L25_LF2
  842  00001880  54000000	nop; delay slot nop
  843  00001884          	L26_LF2:
  844  00001884  8fc1fff4	lw	r1,-12(r30)
  845  00001888  8fc20008	lw	r2,8(r30)
  846  0000188c  00220828	seq	r1,r1,r2
  847  00001890  10200018	beqz	r1,L32_LF2
  848  00001894  54000000	nop; delay slot nop
  849  00001898  20010000	addi	r1,r0,#0
  850  0000189c  08000054	j	L24_LF2
  851  000018a0  54000000	nop; delay slot nop
  852  000018a4  0800004c	j	L33_LF2
  853  000018a8  54000000	nop; delay slot nop
  854  000018ac          	L32_LF2:
  855  000018ac  8fc20000	lw	r2,(r30)
  856  000018b0  90410000	lbu	r1,(r2)
  857  000018b4  8fc20004	lw	r2,4(r30)
  858  000018b8  90430000	lbu	r3,(r2)
  859  000018bc  00230822	sub	r1,r1,r3
  860  000018c0  74220000	sgei	r2,r1,#0
  861  000018c4  10400020	beqz	r2,L34_LF2
  862  000018c8  54000000	nop; delay slot nop
  863  000018cc  8fc10000	lw	r1,(r30)
  864  000018d0  8fc20004	lw	r2,4(r30)
  865  000018d4  90210000	lbu	r1,(r1)
  866  000018d8  90420000	lbu	r2,(r2)
  867  000018dc  00220829	sne	r1,r1,r2
  868  000018e0  08000008	j	L35_LF2
  869  000018e4  54000000	nop; delay slot nop
  870  000018e8          	L34_LF2:
  871  000018e8  2001ffff	addi	r1,r0,#-1
  872  000018ec          	L35_LF2:
  873  000018ec  08000004	j	L24_LF2
  874  000018f0  54000000	nop; delay slot nop
  875  000018f4          	L33_LF2:
  876  000018f4          	L24_LF2:
  877  000018f4  8fa20000	lw	r2,0(r29)
  878  000018f8  8fa30004	lw	r3,4(r29)
  879  000018fc  8fdffff8	lw	r31,-8(r30)
  880  00001900  001ee820	add	r29,r0,r30
  881  00001904  8fdefffc	lw	r30,-4(r30)
  882  00001908  4be00000	jr	r31
  883  0000190c  54000000	nop
  884  00001910          	.endproc _dstrncmp
  885  00001910          	.align 2
  886  00001910          	.proc _dstrlen
  887  00001910          	.global _dstrlen
  888  00001910          	_dstrlen:
  889                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  890  00001910  afbefffc	sw	-4(r29),r30; push fp
  891  00001914  001df020	add	r30,r0,r29; fp = sp
  892  00001918  afbffff8	sw	-8(r29),r31; push ret addr
  893  0000191c  2fbd0018	subui	r29,r29,#24; alloc local storage
  894  00001920  afa20000	sw	0(r29),r2
  895  00001924  20010000	addi	r1,r0,#0
  896  00001928  afc1fff4	sw	-12(r30),r1
  897  0000192c          	L37_LF2:
  898  0000192c  8fc10000	lw	r1,(r30)
  899  00001930  20220001	addi	r2,r1,#1
  900  00001934  afc20000	sw	(r30),r2
  901  00001938  90210000	lbu	r1,(r1)
  902  0000193c  64220000	snei	r2,r1,#0
  903  00001940  1440000c	bnez	r2,L39_LF2
  904  00001944  54000000	nop; delay slot nop
  905  00001948  0800001c	j	L38_LF2
  906  0000194c  54000000	nop; delay slot nop
  907  00001950          	L39_LF2:
  908  00001950  8fc2fff4	lw	r2,-12(r30)
  909  00001954  20410001	addi	r1,r2,#1
  910  00001958  00011020	add	r2,r0,r1
  911  0000195c  afc2fff4	sw	-12(r30),r2
  912  00001960  0bffffc8	j	L37_LF2
  913  00001964  54000000	nop; delay slot nop
  914  00001968          	L38_LF2:
  915  00001968  8fc1fff4	lw	r1,-12(r30)
  916  0000196c  08000004	j	L36_LF2
  917  00001970  54000000	nop; delay slot nop
  918  00001974          	L36_LF2:
  919  00001974  8fa20000	lw	r2,0(r29)
  920  00001978  8fdffff8	lw	r31,-8(r30)
  921  0000197c  001ee820	add	r29,r0,r30
  922  00001980  8fdefffc	lw	r30,-4(r30)
  923  00001984  4be00000	jr	r31
  924  00001988  54000000	nop
  925  0000198c          	.endproc _dstrlen
  926  0000198c          	.align 2
  927  0000198c          	.proc _dstrstr
  928  0000198c          	.global _dstrstr
  929  0000198c          	_dstrstr:
  930                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  931  0000198c  afbefffc	sw	-4(r29),r30; push fp
  932  00001990  001df020	add	r30,r0,r29; fp = sp
  933  00001994  afbffff8	sw	-8(r29),r31; push ret addr
  934  00001998  2fbd0018	subui	r29,r29,#24; alloc local storage
  935  0000199c  afa20000	sw	0(r29),r2
  936  000019a0  23bdfff8	addi	r29,r29,#-8
  937  000019a4  001d0820	add	r1,r0,r29
  938  000019a8  8fc20004	lw	r2,4(r30)
  939  000019ac  ac220000	sw	(r1),r2
  940  000019b0  0fffff5c	jal	_dstrlen
  941  000019b4  54000000	nop; delay slot nop
  942  000019b8  23bd0008	addi	r29,r29,#8
  943  000019bc  afc1fff4	sw	-12(r30),r1
  944  000019c0          	L41_LF2:
  945  000019c0  8fc10000	lw	r1,(r30)
  946  000019c4  90220000	lbu	r2,(r1)
  947  000019c8  64410000	snei	r1,r2,#0
  948  000019cc  1420000c	bnez	r1,L43_LF2
  949  000019d0  54000000	nop; delay slot nop
  950  000019d4  08000060	j	L42_LF2
  951  000019d8  54000000	nop; delay slot nop
  952  000019dc          	L43_LF2:
  953  000019dc  23bdfff0	addi	r29,r29,#-16
  954  000019e0  001d0820	add	r1,r0,r29
  955  000019e4  8fc20000	lw	r2,(r30)
  956  000019e8  ac220000	sw	(r1),r2
  957  000019ec  8fc20004	lw	r2,4(r30)
  958  000019f0  ac220004	sw	4(r1),r2
  959  000019f4  8fc2fff4	lw	r2,-12(r30)
  960  000019f8  ac220008	sw	8(r1),r2
  961  000019fc  0ffffdc0	jal	_dstrncmp
  962  00001a00  54000000	nop; delay slot nop
  963  00001a04  23bd0010	addi	r29,r29,#16
  964  00001a08  64220000	snei	r2,r1,#0
  965  00001a0c  14400010	bnez	r2,L44_LF2
  966  00001a10  54000000	nop; delay slot nop
  967  00001a14  8fc10000	lw	r1,(r30)
  968  00001a18  08000028	j	L40_LF2
  969  00001a1c  54000000	nop; delay slot nop
  970  00001a20          	L44_LF2:
  971  00001a20  8fc20000	lw	r2,(r30)
  972  00001a24  20410001	addi	r1,r2,#1
  973  00001a28  00011020	add	r2,r0,r1
  974  00001a2c  afc20000	sw	(r30),r2
  975  00001a30  0bffff8c	j	L41_LF2
  976  00001a34  54000000	nop; delay slot nop
  977  00001a38          	L42_LF2:
  978  00001a38  20010000	addi	r1,r0,#0
  979  00001a3c  08000004	j	L40_LF2
  980  00001a40  54000000	nop; delay slot nop
  981  00001a44          	L40_LF2:
  982  00001a44  8fa20000	lw	r2,0(r29)
  983  00001a48  8fdffff8	lw	r31,-8(r30)
  984  00001a4c  001ee820	add	r29,r0,r30
  985  00001a50  8fdefffc	lw	r30,-4(r30)
  986  00001a54  4be00000	jr	r31
  987  00001a58  54000000	nop
  988  00001a5c          	.endproc _dstrstr
  989  00001a5c          	.align 2
  990  00001a5c          	.proc _dmindex
  991  00001a5c          	.global _dmindex
  992  00001a5c          	_dmindex:
  993                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  994  00001a5c  afbefffc	sw	-4(r29),r30; push fp
  995  00001a60  001df020	add	r30,r0,r29; fp = sp
  996  00001a64  afbffff8	sw	-8(r29),r31; push ret addr
  997  00001a68  2fbd0018	subui	r29,r29,#24; alloc local storage
  998  00001a6c  afa20000	sw	0(r29),r2
  999  00001a70  54000000	nop
 1000  00001a74          	L46_LF2:
 1001  00001a74  8fc10000	lw	r1,(r30)
 1002  00001a78  90220000	lbu	r2,(r1)
 1003  00001a7c  64410000	snei	r1,r2,#0
 1004  00001a80  1420000c	bnez	r1,L48_LF2
 1005  00001a84  54000000	nop; delay slot nop
 1006  00001a88  08000070	j	L47_LF2
 1007  00001a8c  54000000	nop; delay slot nop
 1008  00001a90          	L48_LF2:
 1009  00001a90  8fc10004	lw	r1,4(r30)
 1010  00001a94  afc1fff4	sw	-12(r30),r1
 1011  00001a98          	L49_LF2:
 1012  00001a98  8fc1fff4	lw	r1,-12(r30)
 1013  00001a9c  90220000	lbu	r2,(r1)
 1014  00001aa0  64410000	snei	r1,r2,#0
 1015  00001aa4  1420000c	bnez	r1,L52_LF2
 1016  00001aa8  54000000	nop; delay slot nop
 1017  00001aac  08000044	j	L50_LF2
 1018  00001ab0  54000000	nop; delay slot nop
 1019  00001ab4          	L52_LF2:
 1020  00001ab4  8fc10000	lw	r1,(r30)
 1021  00001ab8  8fc2fff4	lw	r2,-12(r30)
 1022  00001abc  90210000	lbu	r1,(r1)
 1023  00001ac0  90420000	lbu	r2,(r2)
 1024  00001ac4  00220828	seq	r1,r1,r2
 1025  00001ac8  10200010	beqz	r1,L51_LF2
 1026  00001acc  54000000	nop; delay slot nop
 1027  00001ad0  8fc10000	lw	r1,(r30)
 1028  00001ad4  08000030	j	L45_LF2
 1029  00001ad8  54000000	nop; delay slot nop
 1030  00001adc          	L53_LF2:
 1031  00001adc          	L51_LF2:
 1032  00001adc  8fc2fff4	lw	r2,-12(r30)
 1033  00001ae0  20410001	addi	r1,r2,#1
 1034  00001ae4  00011020	add	r2,r0,r1
 1035  00001ae8  afc2fff4	sw	-12(r30),r2
 1036  00001aec  0bffffa8	j	L49_LF2
 1037  00001af0  54000000	nop; delay slot nop
 1038  00001af4          	L50_LF2:
 1039  00001af4  0bffff7c	j	L46_LF2
 1040  00001af8  54000000	nop; delay slot nop
 1041  00001afc          	L47_LF2:
 1042  00001afc  20010000	addi	r1,r0,#0
 1043  00001b00  08000004	j	L45_LF2
 1044  00001b04  54000000	nop; delay slot nop
 1045  00001b08          	L45_LF2:
 1046  00001b08  8fa20000	lw	r2,0(r29)
 1047  00001b0c  8fdffff8	lw	r31,-8(r30)
 1048  00001b10  001ee820	add	r29,r0,r30
 1049  00001b14  8fdefffc	lw	r30,-4(r30)
 1050  00001b18  4be00000	jr	r31
 1051  00001b1c  54000000	nop
 1052  00001b20          	.endproc _dmindex
 1053  00001b20          	.align 2
 1054  00001b20          	.proc _dindex
 1055  00001b20          	.global _dindex
 1056  00001b20          	_dindex:
 1057                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1058  00001b20  afbefffc	sw	-4(r29),r30; push fp
 1059  00001b24  001df020	add	r30,r0,r29; fp = sp
 1060  00001b28  afbffff8	sw	-8(r29),r31; push ret addr
 1061  00001b2c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1062  00001b30  afa20000	sw	0(r29),r2
 1063  00001b34  54000000	nop
 1064  00001b38          	L55_LF2:
 1065  00001b38  8fc10000	lw	r1,(r30)
 1066  00001b3c  90220000	lbu	r2,(r1)
 1067  00001b40  64410000	snei	r1,r2,#0
 1068  00001b44  1420000c	bnez	r1,L57_LF2
 1069  00001b48  54000000	nop; delay slot nop
 1070  00001b4c  08000040	j	L56_LF2
 1071  00001b50  54000000	nop; delay slot nop
 1072  00001b54          	L57_LF2:
 1073  00001b54  8fc10000	lw	r1,(r30)
 1074  00001b58  90220000	lbu	r2,(r1)
 1075  00001b5c  8fc10004	lw	r1,4(r30)
 1076  00001b60  00411028	seq	r2,r2,r1
 1077  00001b64  10400010	beqz	r2,L58_LF2
 1078  00001b68  54000000	nop; delay slot nop
 1079  00001b6c  8fc10000	lw	r1,(r30)
 1080  00001b70  08000028	j	L54_LF2
 1081  00001b74  54000000	nop; delay slot nop
 1082  00001b78          	L58_LF2:
 1083  00001b78  8fc20000	lw	r2,(r30)
 1084  00001b7c  20410001	addi	r1,r2,#1
 1085  00001b80  00011020	add	r2,r0,r1
 1086  00001b84  afc20000	sw	(r30),r2
 1087  00001b88  0bffffac	j	L55_LF2
 1088  00001b8c  54000000	nop; delay slot nop
 1089  00001b90          	L56_LF2:
 1090  00001b90  20010000	addi	r1,r0,#0
 1091  00001b94  08000004	j	L54_LF2
 1092  00001b98  54000000	nop; delay slot nop
 1093  00001b9c          	L54_LF2:
 1094  00001b9c  8fa20000	lw	r2,0(r29)
 1095  00001ba0  8fdffff8	lw	r31,-8(r30)
 1096  00001ba4  001ee820	add	r29,r0,r30
 1097  00001ba8  8fdefffc	lw	r30,-4(r30)
 1098  00001bac  4be00000	jr	r31
 1099  00001bb0  54000000	nop
 1100  00001bb4          	.endproc _dindex
 1101  00001bb4          	.align 2
 1102  00001bb4          	.proc _ditoa
 1103  00001bb4          	.global _ditoa
 1104  00001bb4          	_ditoa:
 1105                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1106  00001bb4  afbefffc	sw	-4(r29),r30; push fp
 1107  00001bb8  001df020	add	r30,r0,r29; fp = sp
 1108  00001bbc  afbffff8	sw	-8(r29),r31; push ret addr
 1109  00001bc0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1110  00001bc4  afa20000	sw	0(r29),r2
 1111  00001bc8  afa30004	sw	4(r29),r3
 1112  00001bcc  8fc10000	lw	r1,(r30)
 1113  00001bd0  68220000	slti	r2,r1,#0
 1114  00001bd4  1040002c	beqz	r2,L60_LF2
 1115  00001bd8  54000000	nop; delay slot nop
 1116  00001bdc  8fc10004	lw	r1,4(r30)
 1117  00001be0  20220001	addi	r2,r1,#1
 1118  00001be4  afc20004	sw	4(r30),r2
 1119  00001be8  2002002d	addi	r2,r0,(#0x2d)&0xff
 1120  00001bec  a0220000	sb	(r1),r2
 1121  00001bf0  8fc10000	lw	r1,(r30)
 1122  00001bf4  00011022	sub	r2,r0,r1
 1123  00001bf8  afc20000	sw	(r30),r2
 1124  00001bfc  08000118	j	L61_LF2
 1125  00001c00  54000000	nop; delay slot nop
 1126  00001c04          	L60_LF2:
 1127  00001c04  8fc10000	lw	r1,(r30)
 1128  00001c08  64220000	snei	r2,r1,#0
 1129  00001c0c  14400020	bnez	r2,L62_LF2
 1130  00001c10  54000000	nop; delay slot nop
 1131  00001c14  8fc10004	lw	r1,4(r30)
 1132  00001c18  20220001	addi	r2,r1,#1
 1133  00001c1c  afc20004	sw	4(r30),r2
 1134  00001c20  20020030	addi	r2,r0,(#0x30)&0xff
 1135  00001c24  a0220000	sb	(r1),r2
 1136  00001c28  080000ec	j	L61_LF2
 1137  00001c2c  54000000	nop; delay slot nop
 1138  00001c30          	L62_LF2:
 1139  00001c30  20010001	addi	r1,r0,#1
 1140  00001c34  afc1fff4	sw	-12(r30),r1
 1141  00001c38          	L64_LF2:
 1142  00001c38  8fc1fff4	lw	r1,-12(r30)
 1143  00001c3c  8fc20000	lw	r2,(r30)
 1144  00001c40  0022082c	sle	r1,r1,r2
 1145  00001c44  1420000c	bnez	r1,L66_LF2
 1146  00001c48  54000000	nop; delay slot nop
 1147  00001c4c  08000024	j	L65_LF2
 1148  00001c50  54000000	nop; delay slot nop
 1149  00001c54          	L67_LF2:
 1150  00001c54          	L66_LF2:
 1151  00001c54  8fc1fff4	lw	r1,-12(r30)
 1152  00001c58  00011820	add	r3,r0,r1
 1153  00001c5c  50620002	slli	r2,r3,#0x2
 1154  00001c60  00411020	add	r2,r2,r1
 1155  00001c64  50410001	slli	r1,r2,#0x1
 1156  00001c68  afc1fff4	sw	-12(r30),r1
 1157  00001c6c  0bffffc8	j	L64_LF2
 1158  00001c70  54000000	nop; delay slot nop
 1159  00001c74          	L65_LF2:
 1160  00001c74  54000000	nop
 1161  00001c78          	L68_LF2:
 1162  00001c78  8fc1fff4	lw	r1,-12(r30)
 1163  00001c7c  2002000a	addi	r2,r0,#10
 1164  00001c80  00200035	movi2fp	f0,r1
 1165  00001c84  00400835	movi2fp	f1,r2
 1166  00001c88  0401000f	div	f0,f0,f1
 1167  00001c8c  00000834	movfp2i	r1,f0
 1168  00001c90  afc1fff4	sw	-12(r30),r1
 1169  00001c94  8fc10004	lw	r1,4(r30)
 1170  00001c98  20220001	addi	r2,r1,#1
 1171  00001c9c  afc20004	sw	4(r30),r2
 1172  00001ca0  8fc20000	lw	r2,(r30)
 1173  00001ca4  8fc3fff4	lw	r3,-12(r30)
 1174  00001ca8  00400035	movi2fp	f0,r2
 1175  00001cac  00600835	movi2fp	f1,r3
 1176  00001cb0  0401000f	div	f0,f0,f1
 1177  00001cb4  00001034	movfp2i	r2,f0
 1178  00001cb8  00021820	add	r3,r0,r2
 1179  00001cbc  20620030	addi	r2,r3,#48
 1180  00001cc0  a0220000	sb	(r1),r2
 1181  00001cc4  8fc10000	lw	r1,(r30)
 1182  00001cc8  8fc3fff4	lw	r3,-12(r30)
 1183  00001ccc  00200035	movi2fp	f0,r1
 1184  00001cd0  00600835	movi2fp	f1,r3
 1185  00001cd4  0401000f	div	f0,f0,f1
 1186  00001cd8  00001034	movfp2i	r2,f0
 1187  00001cdc  8fc3fff4	lw	r3,-12(r30)
 1188  00001ce0  00400035	movi2fp	f0,r2
 1189  00001ce4  00600835	movi2fp	f1,r3
 1190  00001ce8  0401000e	mult	f0,f0,f1
 1191  00001cec  00001034	movfp2i	r2,f0
 1192  00001cf0  00220822	sub	r1,r1,r2
 1193  00001cf4  afc10000	sw	(r30),r1
 1194  00001cf8          	L70_LF2:
 1195  00001cf8  8fc1fff4	lw	r1,-12(r30)
 1196  00001cfc  6c220001	sgti	r2,r1,#1
 1197  00001d00  1440000c	bnez	r2,L71_LF2
 1198  00001d04  54000000	nop; delay slot nop
 1199  00001d08  0800000c	j	L61_LF2
 1200  00001d0c  54000000	nop; delay slot nop
 1201  00001d10          	L71_LF2:
 1202  00001d10  0bffff64	j	L68_LF2
 1203  00001d14  54000000	nop; delay slot nop
 1204  00001d18          	L69_LF2:
 1205  00001d18          	L63_LF2:
 1206  00001d18          	L61_LF2:
 1207  00001d18  8fc10004	lw	r1,4(r30)
 1208  00001d1c  20020000	addi	r2,r0,(#0x0)&0xff
 1209  00001d20  a0220000	sb	(r1),r2
 1210  00001d24          	L59_LF2:
 1211  00001d24  8fa20000	lw	r2,0(r29)
 1212  00001d28  8fa30004	lw	r3,4(r29)
 1213  00001d2c  8fdffff8	lw	r31,-8(r30)
 1214  00001d30  001ee820	add	r29,r0,r30
 1215  00001d34  8fdefffc	lw	r30,-4(r30)
 1216  00001d38  4be00000	jr	r31
 1217  00001d3c  54000000	nop
 1218  00001d40          	.endproc _ditoa
 1219  00001d40          	.align 2
 1220  00001d40          	.proc _dstrtol
 1221  00001d40          	.global _dstrtol
 1222  00001d40          	_dstrtol:
 1223                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1224  00001d40  afbefffc	sw	-4(r29),r30; push fp
 1225  00001d44  001df020	add	r30,r0,r29; fp = sp
 1226  00001d48  afbffff8	sw	-8(r29),r31; push ret addr
 1227  00001d4c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1228  00001d50  afa20000	sw	0(r29),r2
 1229  00001d54  20010000	addi	r1,r0,#0
 1230  00001d58  afc1fff4	sw	-12(r30),r1
 1231  00001d5c          	L73_LF2:
 1232  00001d5c  8fc10000	lw	r1,(r30)
 1233  00001d60  90220000	lbu	r2,(r1)
 1234  00001d64  60410020	seqi	r1,r2,#32
 1235  00001d68  14200034	bnez	r1,L75_LF2
 1236  00001d6c  54000000	nop; delay slot nop
 1237  00001d70  8fc10000	lw	r1,(r30)
 1238  00001d74  90220000	lbu	r2,(r1)
 1239  00001d78  60410009	seqi	r1,r2,#9
 1240  00001d7c  14200020	bnez	r1,L75_LF2
 1241  00001d80  54000000	nop; delay slot nop
 1242  00001d84  8fc10000	lw	r1,(r30)
 1243  00001d88  90220000	lbu	r2,(r1)
 1244  00001d8c  6041000a	seqi	r1,r2,#10
 1245  00001d90  1420000c	bnez	r1,L75_LF2
 1246  00001d94  54000000	nop; delay slot nop
 1247  00001d98  0800001c	j	L74_LF2
 1248  00001d9c  54000000	nop; delay slot nop
 1249  00001da0          	L75_LF2:
 1250  00001da0  8fc20000	lw	r2,(r30)
 1251  00001da4  20410001	addi	r1,r2,#1
 1252  00001da8  00011020	add	r2,r0,r1
 1253  00001dac  afc20000	sw	(r30),r2
 1254  00001db0  0bffffa8	j	L73_LF2
 1255  00001db4  54000000	nop; delay slot nop
 1256  00001db8          	L74_LF2:
 1257  00001db8  8fc10004	lw	r1,4(r30)
 1258  00001dbc  64220000	snei	r2,r1,#0
 1259  00001dc0  10400010	beqz	r2,L76_LF2
 1260  00001dc4  54000000	nop; delay slot nop
 1261  00001dc8  8fc10004	lw	r1,4(r30)
 1262  00001dcc  8fc20000	lw	r2,(r30)
 1263  00001dd0  ac220000	sw	(r1),r2
 1264  00001dd4          	L76_LF2:
 1265  00001dd4  8fc10000	lw	r1,(r30)
 1266  00001dd8  90220000	lbu	r2,(r1)
 1267  00001ddc  64410000	snei	r1,r2,#0
 1268  00001de0  14200010	bnez	r1,L77_LF2
 1269  00001de4  54000000	nop; delay slot nop
 1270  00001de8  8fc1fff4	lw	r1,-12(r30)
 1271  00001dec  08000294	j	L72_LF2
 1272  00001df0  54000000	nop; delay slot nop
 1273  00001df4          	L77_LF2:
 1274  00001df4  8fc10000	lw	r1,(r30)
 1275  00001df8  90220000	lbu	r2,(r1)
 1276  00001dfc  6041002d	seqi	r1,r2,#45
 1277  00001e00  10200024	beqz	r1,L78_LF2
 1278  00001e04  54000000	nop; delay slot nop
 1279  00001e08  2001ffff	addi	r1,r0,#-1
 1280  00001e0c  afc1ffec	sw	-20(r30),r1
 1281  00001e10  8fc20000	lw	r2,(r30)
 1282  00001e14  20410001	addi	r1,r2,#1
 1283  00001e18  00011020	add	r2,r0,r1
 1284  00001e1c  afc20000	sw	(r30),r2
 1285  00001e20  0800000c	j	L79_LF2
 1286  00001e24  54000000	nop; delay slot nop
 1287  00001e28          	L78_LF2:
 1288  00001e28  20010001	addi	r1,r0,#1
 1289  00001e2c  afc1ffec	sw	-20(r30),r1
 1290  00001e30          	L79_LF2:
 1291  00001e30  8fc10008	lw	r1,8(r30)
 1292  00001e34  64220000	snei	r2,r1,#0
 1293  00001e38  14400090	bnez	r2,L80_LF2
 1294  00001e3c  54000000	nop; delay slot nop
 1295  00001e40  8fc10000	lw	r1,(r30)
 1296  00001e44  90220000	lbu	r2,(r1)
 1297  00001e48  60410030	seqi	r1,r2,#48
 1298  00001e4c  10200074	beqz	r1,L81_LF2
 1299  00001e50  54000000	nop; delay slot nop
 1300  00001e54  8fc20000	lw	r2,(r30)
 1301  00001e58  20410001	addi	r1,r2,#1
 1302  00001e5c  00011020	add	r2,r0,r1
 1303  00001e60  afc20000	sw	(r30),r2
 1304  00001e64  8fc10000	lw	r1,(r30)
 1305  00001e68  90220000	lbu	r2,(r1)
 1306  00001e6c  60410078	seqi	r1,r2,#120
 1307  00001e70  14200020	bnez	r1,L83_LF2
 1308  00001e74  54000000	nop; delay slot nop
 1309  00001e78  8fc10000	lw	r1,(r30)
 1310  00001e7c  90220000	lbu	r2,(r1)
 1311  00001e80  60410058	seqi	r1,r2,#88
 1312  00001e84  1420000c	bnez	r1,L83_LF2
 1313  00001e88  54000000	nop; delay slot nop
 1314  00001e8c  08000024	j	L82_LF2
 1315  00001e90  54000000	nop; delay slot nop
 1316  00001e94          	L83_LF2:
 1317  00001e94  20010010	addi	r1,r0,#16
 1318  00001e98  afc10008	sw	8(r30),r1
 1319  00001e9c  8fc20000	lw	r2,(r30)
 1320  00001ea0  20410001	addi	r1,r2,#1
 1321  00001ea4  00011020	add	r2,r0,r1
 1322  00001ea8  afc20000	sw	(r30),r2
 1323  00001eac  0800000c	j	L84_LF2
 1324  00001eb0  54000000	nop; delay slot nop
 1325  00001eb4          	L82_LF2:
 1326  00001eb4  20010008	addi	r1,r0,#8
 1327  00001eb8  afc10008	sw	8(r30),r1
 1328  00001ebc          	L84_LF2:
 1329  00001ebc  0800000c	j	L80_LF2
 1330  00001ec0  54000000	nop; delay slot nop
 1331  00001ec4          	L81_LF2:
 1332  00001ec4  2001000a	addi	r1,r0,#10
 1333  00001ec8  afc10008	sw	8(r30),r1
 1334  00001ecc          	L85_LF2:
 1335  00001ecc          	L80_LF2:
 1336  00001ecc  8fc10008	lw	r1,8(r30)
 1337  00001ed0  70220000	slei	r2,r1,#0
 1338  00001ed4  1440001c	bnez	r2,L87_LF2
 1339  00001ed8  54000000	nop; delay slot nop
 1340  00001edc  8fc10008	lw	r1,8(r30)
 1341  00001ee0  6c220010	sgti	r2,r1,#16
 1342  00001ee4  1440000c	bnez	r2,L87_LF2
 1343  00001ee8  54000000	nop; delay slot nop
 1344  00001eec  08000010	j	L86_LF2
 1345  00001ef0  54000000	nop; delay slot nop
 1346  00001ef4          	L87_LF2:
 1347  00001ef4  8fc1fff4	lw	r1,-12(r30)
 1348  00001ef8  08000188	j	L72_LF2
 1349  00001efc  54000000	nop; delay slot nop
 1350  00001f00          	L86_LF2:
 1351  00001f00  54000000	nop
 1352  00001f04          	L88_LF2:
 1353  00001f04  8fc10000	lw	r1,(r30)
 1354  00001f08  90220000	lbu	r2,(r1)
 1355  00001f0c  6c41002f	sgtui	r1,r2,#47
 1356  00001f10  10200030	beqz	r1,L91_LF2
 1357  00001f14  54000000	nop; delay slot nop
 1358  00001f18  8fc10000	lw	r1,(r30)
 1359  00001f1c  90220000	lbu	r2,(r1)
 1360  00001f20  70410039	sleui	r1,r2,#57
 1361  00001f24  1020001c	beqz	r1,L91_LF2
 1362  00001f28  54000000	nop; delay slot nop
 1363  00001f2c  8fc10000	lw	r1,(r30)
 1364  00001f30  90220000	lbu	r2,(r1)
 1365  00001f34  2041ffd0	addi	r1,r2,#-48
 1366  00001f38  afc1fff0	sw	-16(r30),r1
 1367  00001f3c  0800008c	j	L92_LF2
 1368  00001f40  54000000	nop; delay slot nop
 1369  00001f44          	L91_LF2:
 1370  00001f44  8fc10000	lw	r1,(r30)
 1371  00001f48  90220000	lbu	r2,(r1)
 1372  00001f4c  6c410060	sgtui	r1,r2,#96
 1373  00001f50  10200030	beqz	r1,L93_LF2
 1374  00001f54  54000000	nop; delay slot nop
 1375  00001f58  8fc10000	lw	r1,(r30)
 1376  00001f5c  90220000	lbu	r2,(r1)
 1377  00001f60  7041007a	sleui	r1,r2,#122
 1378  00001f64  1020001c	beqz	r1,L93_LF2
 1379  00001f68  54000000	nop; delay slot nop
 1380  00001f6c  8fc10000	lw	r1,(r30)
 1381  00001f70  90220000	lbu	r2,(r1)
 1382  00001f74  2041ffa9	addi	r1,r2,#-87
 1383  00001f78  afc1fff0	sw	-16(r30),r1
 1384  00001f7c  0800004c	j	L92_LF2
 1385  00001f80  54000000	nop; delay slot nop
 1386  00001f84          	L93_LF2:
 1387  00001f84  8fc10000	lw	r1,(r30)
 1388  00001f88  90220000	lbu	r2,(r1)
 1389  00001f8c  6c410040	sgtui	r1,r2,#64
 1390  00001f90  10200030	beqz	r1,L95_LF2
 1391  00001f94  54000000	nop; delay slot nop
 1392  00001f98  8fc10000	lw	r1,(r30)
 1393  00001f9c  90220000	lbu	r2,(r1)
 1394  00001fa0  7041005a	sleui	r1,r2,#90
 1395  00001fa4  1020001c	beqz	r1,L95_LF2
 1396  00001fa8  54000000	nop; delay slot nop
 1397  00001fac  8fc10000	lw	r1,(r30)
 1398  00001fb0  90220000	lbu	r2,(r1)
 1399  00001fb4  2041ffc9	addi	r1,r2,#-55
 1400  00001fb8  afc1fff0	sw	-16(r30),r1
 1401  00001fbc  0800000c	j	L92_LF2
 1402  00001fc0  54000000	nop; delay slot nop
 1403  00001fc4          	L95_LF2:
 1404  00001fc4  200103e8	addi	r1,r0,#1000
 1405  00001fc8  afc1fff0	sw	-16(r30),r1
 1406  00001fcc          	L96_LF2:
 1407  00001fcc          	L94_LF2:
 1408  00001fcc          	L92_LF2:
 1409  00001fcc  8fc1fff0	lw	r1,-16(r30)
 1410  00001fd0  8fc20008	lw	r2,8(r30)
 1411  00001fd4  0022082a	slt	r1,r1,r2
 1412  00001fd8  10200040	beqz	r1,L90_LF2
 1413  00001fdc  54000000	nop; delay slot nop
 1414  00001fe0  8fc1fff4	lw	r1,-12(r30)
 1415  00001fe4  8fc20008	lw	r2,8(r30)
 1416  00001fe8  00200035	movi2fp	f0,r1
 1417  00001fec  00400835	movi2fp	f1,r2
 1418  00001ff0  0401000e	mult	f0,f0,f1
 1419  00001ff4  00000834	movfp2i	r1,f0
 1420  00001ff8  afc1fff4	sw	-12(r30),r1
 1421  00001ffc  8fc1fff4	lw	r1,-12(r30)
 1422  00002000  8fc2fff0	lw	r2,-16(r30)
 1423  00002004  00220820	add	r1,r1,r2
 1424  00002008  afc1fff4	sw	-12(r30),r1
 1425  0000200c  8fc20000	lw	r2,(r30)
 1426  00002010  20410001	addi	r1,r2,#1
 1427  00002014  00011020	add	r2,r0,r1
 1428  00002018  afc20000	sw	(r30),r2
 1429  0000201c          	L97_LF2:
 1430  0000201c          	L90_LF2:
 1431  0000201c  8fc1fff0	lw	r1,-16(r30)
 1432  00002020  8fc20008	lw	r2,8(r30)
 1433  00002024  0022082a	slt	r1,r1,r2
 1434  00002028  1420000c	bnez	r1,L98_LF2
 1435  0000202c  54000000	nop; delay slot nop
 1436  00002030  0800000c	j	L89_LF2
 1437  00002034  54000000	nop; delay slot nop
 1438  00002038          	L98_LF2:
 1439  00002038  0bfffec8	j	L88_LF2
 1440  0000203c  54000000	nop; delay slot nop
 1441  00002040          	L89_LF2:
 1442  00002040  8fc10004	lw	r1,4(r30)
 1443  00002044  64220000	snei	r2,r1,#0
 1444  00002048  10400010	beqz	r2,L99_LF2
 1445  0000204c  54000000	nop; delay slot nop
 1446  00002050  8fc10004	lw	r1,4(r30)
 1447  00002054  8fc20000	lw	r2,(r30)
 1448  00002058  ac220000	sw	(r1),r2
 1449  0000205c          	L99_LF2:
 1450  0000205c  8fc1fff4	lw	r1,-12(r30)
 1451  00002060  8fc2ffec	lw	r2,-20(r30)
 1452  00002064  00200035	movi2fp	f0,r1
 1453  00002068  00400835	movi2fp	f1,r2
 1454  0000206c  0401000e	mult	f0,f0,f1
 1455  00002070  00000834	movfp2i	r1,f0
 1456  00002074  afc1fff4	sw	-12(r30),r1
 1457  00002078  8fc1fff4	lw	r1,-12(r30)
 1458  0000207c  08000004	j	L72_LF2
 1459  00002080  54000000	nop; delay slot nop
 1460  00002084          	L72_LF2:
 1461  00002084  8fa20000	lw	r2,0(r29)
 1462  00002088  8fdffff8	lw	r31,-8(r30)
 1463  0000208c  001ee820	add	r29,r0,r30
 1464  00002090  8fdefffc	lw	r30,-4(r30)
 1465  00002094  4be00000	jr	r31
 1466  00002098  54000000	nop
 1467  0000209c          	.endproc _dstrtol
 1468  0000209c          	.align 2
 1469  0000209c          	.proc _bcopy
 1470  0000209c          	.global _bcopy
 1471  0000209c          	_bcopy:
 1472                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1473  0000209c  afbefffc	sw	-4(r29),r30; push fp
 1474  000020a0  001df020	add	r30,r0,r29; fp = sp
 1475  000020a4  afbffff8	sw	-8(r29),r31; push ret addr
 1476  000020a8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1477  000020ac  afa20000	sw	0(r29),r2
 1478  000020b0  afa30004	sw	4(r29),r3
 1479  000020b4  54000000	nop
 1480  000020b8          	L101_LF2:
 1481  000020b8  8fc10008	lw	r1,8(r30)
 1482  000020bc  2022ffff	addi	r2,r1,#-1
 1483  000020c0  afc20008	sw	8(r30),r2
 1484  000020c4  6c210000	sgti	r1,r1,#0
 1485  000020c8  1420000c	bnez	r1,L103_LF2
 1486  000020cc  54000000	nop; delay slot nop
 1487  000020d0  0800002c	j	L102_LF2
 1488  000020d4  54000000	nop; delay slot nop
 1489  000020d8          	L103_LF2:
 1490  000020d8  8fc10004	lw	r1,4(r30)
 1491  000020dc  20220001	addi	r2,r1,#1
 1492  000020e0  afc20004	sw	4(r30),r2
 1493  000020e4  8fc20000	lw	r2,(r30)
 1494  000020e8  20430001	addi	r3,r2,#1
 1495  000020ec  afc30000	sw	(r30),r3
 1496  000020f0  80420000	lb	r2,(r2)
 1497  000020f4  a0220000	sb	(r1),r2
 1498  000020f8  0bffffbc	j	L101_LF2
 1499  000020fc  54000000	nop; delay slot nop
 1500  00002100          	L102_LF2:
 1501  00002100          	L100_LF2:
 1502  00002100  8fa20000	lw	r2,0(r29)
 1503  00002104  8fa30004	lw	r3,4(r29)
 1504  00002108  8fdffff8	lw	r31,-8(r30)
 1505  0000210c  001ee820	add	r29,r0,r30
 1506  00002110  8fdefffc	lw	r30,-4(r30)
 1507  00002114  4be00000	jr	r31
 1508  00002118  54000000	nop
 1509  0000211c          	.endproc _bcopy
 1510  0000211c          	.align 2
 1511  0000211c          	.proc _bzero
 1512  0000211c          	.global _bzero
 1513  0000211c          	_bzero:
 1514                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1515  0000211c  afbefffc	sw	-4(r29),r30; push fp
 1516  00002120  001df020	add	r30,r0,r29; fp = sp
 1517  00002124  afbffff8	sw	-8(r29),r31; push ret addr
 1518  00002128  2fbd0010	subui	r29,r29,#16; alloc local storage
 1519  0000212c  afa20000	sw	0(r29),r2
 1520  00002130  54000000	nop
 1521  00002134          	L105_LF2:
 1522  00002134  8fc10004	lw	r1,4(r30)
 1523  00002138  2022ffff	addi	r2,r1,#-1
 1524  0000213c  afc20004	sw	4(r30),r2
 1525  00002140  6c210000	sgti	r1,r1,#0
 1526  00002144  1420000c	bnez	r1,L107_LF2
 1527  00002148  54000000	nop; delay slot nop
 1528  0000214c  08000020	j	L106_LF2
 1529  00002150  54000000	nop; delay slot nop
 1530  00002154          	L107_LF2:
 1531  00002154  8fc10000	lw	r1,(r30)
 1532  00002158  20220001	addi	r2,r1,#1
 1533  0000215c  afc20000	sw	(r30),r2
 1534  00002160  20020000	addi	r2,r0,(#0x0)&0xff
 1535  00002164  a0220000	sb	(r1),r2
 1536  00002168  0bffffc8	j	L105_LF2
 1537  0000216c  54000000	nop; delay slot nop
 1538  00002170          	L106_LF2:
 1539  00002170          	L104_LF2:
 1540  00002170  8fa20000	lw	r2,0(r29)
 1541  00002174  8fdffff8	lw	r31,-8(r30)
 1542  00002178  001ee820	add	r29,r0,r30
 1543  0000217c  8fdefffc	lw	r30,-4(r30)
 1544  00002180  4be00000	jr	r31
 1545  00002184  54000000	nop
 1546  00002188          	.endproc _bzero
 1547  00002188          	.align 2
 1548  00002188          	.proc _min
 1549  00002188          	.global _min
 1550  00002188          	_min:
 1551                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1552  00002188  afbefffc	sw	-4(r29),r30; push fp
 1553  0000218c  001df020	add	r30,r0,r29; fp = sp
 1554  00002190  afbffff8	sw	-8(r29),r31; push ret addr
 1555  00002194  2fbd0010	subui	r29,r29,#16; alloc local storage
 1556  00002198  afa20000	sw	0(r29),r2
 1557  0000219c  afa30004	sw	4(r29),r3
 1558  000021a0  8fc10000	lw	r1,(r30)
 1559  000021a4  8fc20004	lw	r2,4(r30)
 1560  000021a8  0022182c	sle	r3,r1,r2
 1561  000021ac  14600008	bnez	r3,L109_LF2
 1562  000021b0  54000000	nop; delay slot nop
 1563  000021b4  8fc10004	lw	r1,4(r30)
 1564  000021b8          	L109_LF2:
 1565  000021b8  08000004	j	L108_LF2
 1566  000021bc  54000000	nop; delay slot nop
 1567  000021c0          	L108_LF2:
 1568  000021c0  8fa20000	lw	r2,0(r29)
 1569  000021c4  8fa30004	lw	r3,4(r29)
 1570  000021c8  8fdffff8	lw	r31,-8(r30)
 1571  000021cc  001ee820	add	r29,r0,r30
 1572  000021d0  8fdefffc	lw	r30,-4(r30)
 1573  000021d4  4be00000	jr	r31
 1574  000021d8  54000000	nop
 1575  000021dc          	.endproc _min
 1576  000021dc          	.align 2
 1577  000021dc          	.proc _max
 1578  000021dc          	.global _max
 1579  000021dc          	_max:
 1580                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1581  000021dc  afbefffc	sw	-4(r29),r30; push fp
 1582  000021e0  001df020	add	r30,r0,r29; fp = sp
 1583  000021e4  afbffff8	sw	-8(r29),r31; push ret addr
 1584  000021e8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1585  000021ec  afa20000	sw	0(r29),r2
 1586  000021f0  afa30004	sw	4(r29),r3
 1587  000021f4  8fc10000	lw	r1,(r30)
 1588  000021f8  8fc20004	lw	r2,4(r30)
 1589  000021fc  0022182d	sge	r3,r1,r2
 1590  00002200  14600008	bnez	r3,L111_LF2
 1591  00002204  54000000	nop; delay slot nop
 1592  00002208  8fc10004	lw	r1,4(r30)
 1593  0000220c          	L111_LF2:
 1594  0000220c  08000004	j	L110_LF2
 1595  00002210  54000000	nop; delay slot nop
 1596  00002214          	L110_LF2:
 1597  00002214  8fa20000	lw	r2,0(r29)
 1598  00002218  8fa30004	lw	r3,4(r29)
 1599  0000221c  8fdffff8	lw	r31,-8(r30)
 1600  00002220  001ee820	add	r29,r0,r30
 1601  00002224  8fdefffc	lw	r30,-4(r30)
 1602  00002228  4be00000	jr	r31
 1603  0000222c  54000000	nop
 1604  00002230          	.endproc _max
 1605                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1606                      ;;;
 1607                      ;;; Most of the traps are called in files from libtraps.
 1610  00002230          	.align 2
 1611  00002230          	.proc _exit
 1612  00002230          	.global _exit
 1613  00002230          	_exit:
 1614  00002230  44000300	trap	#0x300
 1615  00002234  4be00000	jr	r31
 1616  00002238  54000000	nop
 1617  0000223c          	.endproc _exit
 1619                      ; for the benefit of gcc.
 1620  0000223c          	.proc ___main
 1621  0000223c          	.global ___main
 1622  0000223c          	___main:
 1623  0000223c  4be00000	jr	r31
 1624  00002240  54000000	nop
 1625  00002244          	.endproc ___main
 1626  00002244          	.text
 1627  00002244          	.global _etext
 1628  00002244          	_etext:
 1629  00002244          	.align 3
 1630  00002248          	.data
 1631  0000313b          	.global _edata
 1632  0000313b          	_edata:
