 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 191
    4                      ; Text size: 4484
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage\000"
   82  00003004  6500    	
   83  00003006          	.align 2
   84  00003008          	LC1_LF0:
   85  00003008  3c68616e	.ascii "<handle_to_shared_memory_page> <handle_to_page_mapped_semaphore<handle"
   85  0000300c  646c655f	
   85  00003010  746f5f73	
   85  00003014  68617265	
   85  00003018  645f6d65	
   85  0000301c  6d6f7279	
   85  00003020  5f706167	
   85  00003024  653e203c	
   85  00003028  68616e64	
   85  0000302c  6c655f74	
   85  00003030  6f5f7061	
   85  00003034  67655f6d	
   85  00003038  61707065	
   85  0000303c  645f7365	
   85  00003040  6d617068	
   85  00003044  6f72653c	
   85  00003048  68616e64	
   85  0000304c  6c65    	
   86  0000304e  20746f20	.ascii " to lock>\000"
   86  00003052  6c6f636b	
   86  00003056  3e00    	
   87  00003058          	.align 2
   88  00003058          	LC2_LF0:
   89  00003058  534f3420	.ascii "SO4 injected into Radeon atmosphere, PID: %d\n\000"
   89  0000305c  696e6a65	
   89  00003060  63746564	
   89  00003064  20696e74	
   89  00003068  6f205261	
   89  0000306c  64656f6e	
   89  00003070  2061746d	
   89  00003074  6f737068	
   89  00003078  6572652c	
   89  0000307c  20504944	
   89  00003080  3a202564	
   89  00003084  0a00    	
   90  00003086          	.align 2
   91  00003088          	LC3_LF0:
   92  00003088  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
   92  0000308c  73656d61	
   92  00003090  70686f72	
   92  00003094  6520735f	
   92  00003098  70726f63	
   92  0000309c  735f636f	
   92  000030a0  6d706c65	
   92  000030a4  74656420	
   92  000030a8  28256429	
   92  000030ac  20696e20	
   92  000030b0  00      	
   93  000030b1          	.align 2
   94  000030b4          	LC4_LF0:
   95  000030b4  65786974	.ascii "exiting..\n\000"
   95  000030b8  696e672e	
   95  000030bc  2e0a00  	
   96  000030bf          	.text
   97  000010d4          	.align 2
   98  000010d4          	.proc _main
   99  000010d4          	.global _main
  100  000010d4          	_main:
  101                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  102  000010d4  afbefffc	sw	-4(r29),r30; push fp
  103  000010d8  001df020	add	r30,r0,r29; fp = sp
  104  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  105  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  106  000010e4  8fc20000	lw	r2,(r30)
  107  000010e8  8fc50004	lw	r5,4(r30)
  108  000010ec  0c00108c	jal	___main
  109  000010f0  54000000	nop; not filled.
  110  000010f4  64410004	snei	r1,r2,#4
  111  000010f8  1020004c	beqz	r1,L14_LF0
  112  000010fc  54000000	nop; not filled.
  113  00001100  23bdfff8	addi	r29,r29,#-8
  114  00001104  3c070000	lhi	r7,((LC0_LF0)>>16)&0xffff
  115  00001108  24e73000	addui	r7,r7,(LC0_LF0)&0xffff
  116  0000110c  afa70000	sw	(r29),r7
  117  00001110  0c0001b8	jal	_Printf
  118  00001114  54000000	nop; not filled.
  119  00001118  8ca70000	lw	r7,(r5)
  120  0000111c  afa70000	sw	(r29),r7
  121  00001120  0c0001a8	jal	_Printf
  122  00001124  54000000	nop; not filled.
  123  00001128  3c070000	lhi	r7,((LC1_LF0)>>16)&0xffff
  124  0000112c  24e73008	addui	r7,r7,(LC1_LF0)&0xffff
  125  00001130  afa70000	sw	(r29),r7
  126  00001134  0c000194	jal	_Printf
  127  00001138  54000000	nop; not filled.
  128  0000113c  0c000294	jal	_Exit
  129  00001140  54000000	nop; not filled.
  130  00001144  23bd0008	addi	r29,r29,#8
  131  00001148          	L14_LF0:
  132  00001148  23bdfff0	addi	r29,r29,#-16
  133  0000114c  8ca70004	lw	r7,4(r5)
  134  00001150  afa70000	sw	(r29),r7
  135  00001154  20070000	addi	r7,r0,#0
  136  00001158  afa70004	sw	4(r29),r7
  137  0000115c  2007000a	addi	r7,r0,#10
  138  00001160  afa70008	sw	8(r29),r7
  139  00001164  0c000b18	jal	_dstrtol
  140  00001168  54000000	nop; not filled.
  141  0000116c  00013020	add	r6,r0,r1
  142  00001170  8ca70008	lw	r7,8(r5)
  143  00001174  afa70000	sw	(r29),r7
  144  00001178  20070000	addi	r7,r0,#0
  145  0000117c  afa70004	sw	4(r29),r7
  146  00001180  2007000a	addi	r7,r0,#10
  147  00001184  afa70008	sw	8(r29),r7
  148  00001188  0c000af4	jal	_dstrtol
  149  0000118c  54000000	nop; not filled.
  150  00001190  00012020	add	r4,r0,r1
  151  00001194  8ca7000c	lw	r7,12(r5)
  152  00001198  afa70000	sw	(r29),r7
  153  0000119c  20070000	addi	r7,r0,#0
  154  000011a0  afa70004	sw	4(r29),r7
  155  000011a4  2007000a	addi	r7,r0,#10
  156  000011a8  afa70008	sw	8(r29),r7
  157  000011ac  0c000ad0	jal	_dstrtol
  158  000011b0  54000000	nop; not filled.
  159  000011b4  00011820	add	r3,r0,r1
  160  000011b8  20020000	addi	r2,r0,#0
  161  000011bc  23bd0010	addi	r29,r29,#16
  162  000011c0  0043082a	slt	r1,r2,r3
  163  000011c4  10200048	beqz	r1,L16_LF0
  164  000011c8  54000000	nop; not filled.
  165  000011cc          	L18_LF0:
  166  000011cc  0c000108	jal	_getpid
  167  000011d0  54000000	nop; not filled.
  168  000011d4  23bdfff8	addi	r29,r29,#-8
  169  000011d8  3c070000	lhi	r7,((LC2_LF0)>>16)&0xffff
  170  000011dc  24e73058	addui	r7,r7,(LC2_LF0)&0xffff
  171  000011e0  afa70000	sw	(r29),r7
  172  000011e4  afa10004	sw	4(r29),r1
  173  000011e8  0c0000e0	jal	_Printf
  174  000011ec  54000000	nop; not filled.
  175  000011f0  afa40000	sw	(r29),r4
  176  000011f4  0c000128	jal	_sem_signal
  177  000011f8  54000000	nop; not filled.
  178  000011fc  23bd0008	addi	r29,r29,#8
  179  00001200  20420001	addi	r2,r2,#1
  180  00001204  0043082a	slt	r1,r2,r3
  181  00001208  1420ffc0	bnez	r1,L18_LF0
  182  0000120c  54000000	nop; not filled.
  183  00001210          	L16_LF0:
  184  00001210  23bdfff8	addi	r29,r29,#-8
  185  00001214  afa60000	sw	(r29),r6
  186  00001218  0c000104	jal	_sem_signal
  187  0000121c  54000000	nop; not filled.
  188  00001220  23bd0008	addi	r29,r29,#8
  189  00001224  64210001	snei	r1,r1,#1
  190  00001228  10200050	beqz	r1,L20_LF0
  191  0000122c  54000000	nop; not filled.
  192  00001230  23bdfff8	addi	r29,r29,#-8
  193  00001234  3c070000	lhi	r7,((LC3_LF0)>>16)&0xffff
  194  00001238  24e73088	addui	r7,r7,(LC3_LF0)&0xffff
  195  0000123c  afa70000	sw	(r29),r7
  196  00001240  afa60004	sw	4(r29),r6
  197  00001244  0c000084	jal	_Printf
  198  00001248  54000000	nop; not filled.
  199  0000124c  8ca50000	lw	r5,(r5)
  200  00001250  afa50000	sw	(r29),r5
  201  00001254  0c000074	jal	_Printf
  202  00001258  54000000	nop; not filled.
  203  0000125c  3c070000	lhi	r7,((LC4_LF0)>>16)&0xffff
  204  00001260  24e730b4	addui	r7,r7,(LC4_LF0)&0xffff
  205  00001264  afa70000	sw	(r29),r7
  206  00001268  0c000060	jal	_Printf
  207  0000126c  54000000	nop; not filled.
  208  00001270  0c000160	jal	_Exit
  209  00001274  54000000	nop; not filled.
  210  00001278  23bd0008	addi	r29,r29,#8
  211  0000127c          	L20_LF0:
  212  0000127c  0c000ef0	jal	_exit
  213  00001280  54000000	nop
  214  00001284          	.endproc _main
  215                      ;;;
  216                      ;;; Stub functions for DLX traps.
  217                      ;;;
  218                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  219                      ;;;
  220                      ;;; The traps such as Open and Close
  221                      ;;; (note the capital letters) are for use by user programs.  The traps
  222                      ;;; with names such as open and close (lower case) are for use by the OS.
  223                      ;;;
  226  00001284          	.align 2
  228                      ;;; The following are the traps to be used by user-level programs
  229                      ;;;
  231  00001284          	.align 2
  232  00001284          	.proc _Open
  233  00001284          	.global _Open
  234  00001284          	_Open:
  235                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  236                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  237                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  238  00001284  44000213	trap	#0x213
  239  00001288  4be00000	jr	r31
  240  0000128c  54000000	nop
  241  00001290          	.endproc _Open
  243  00001290          	.proc _Close
  244  00001290          	.global _Close
  245  00001290          	_Close:
  246  00001290  44000214	trap	#0x214
  247  00001294  4be00000	jr	r31
  248  00001298  54000000	nop
  249  0000129c          	.endproc _Close
  251  0000129c          	.proc _Read
  252  0000129c          	.global _Read
  253  0000129c          	_Read:
  254  0000129c  44000210	trap	#0x210
  255  000012a0  4be00000	jr	r31
  256  000012a4  54000000	nop
  257  000012a8          	.endproc _Read
  259  000012a8          	.proc _Write
  260  000012a8          	.global _Write
  261  000012a8          	_Write:
  262  000012a8  44000211	trap	#0x211
  263  000012ac  4be00000	jr	r31
  264  000012b0  54000000	nop
  265  000012b4          	.endproc _Write
  267  000012b4          	.proc _Lseek
  268  000012b4          	.global _Lseek
  269  000012b4          	_Lseek:
  270  000012b4  44000212	trap	#0x212
  271  000012b8  4be00000	jr	r31
  272  000012bc  54000000	nop
  273  000012c0          	.endproc _Lseek
  275  000012c0          	.proc _Putchar
  276  000012c0          	.global _Putchar
  277  000012c0          	_Putchar:
  278  000012c0  44000280	trap	#0x280
  279  000012c4  4be00000	jr	r31
  280  000012c8  54000000	nop
  281  000012cc          	.endproc _Putchar
  283  000012cc          	.proc _Printf
  284  000012cc          	.global _Printf
  285  000012cc          	_Printf:
  286  000012cc  44000201	trap	#0x201
  287  000012d0  4be00000	jr	r31
  288  000012d4  54000000	nop
  289  000012d8          	.endproc _Printf
  291  000012d8          	.proc _getpid
  292  000012d8          	.global _getpid
  293  000012d8          	_getpid:
  294  000012d8  44000431	trap	#0x431
  295  000012dc  4be00000	jr	r31
  296  000012e0  54000000	nop
  297  000012e4          	.endproc _getpid
  299  000012e4          	.proc _process_create
  300  000012e4          	.global _process_create
  301  000012e4          	_process_create:
  302  000012e4  44000432	trap	#0x432
  303  000012e8  4be00000	jr	r31
  304  000012ec  54000000	nop
  305  000012f0          	.endproc _process_create
  307  000012f0          	.proc _shmget
  308  000012f0          	.global _shmget
  309  000012f0          	_shmget:
  310  000012f0  44000440	trap	#0x440
  311  000012f4  4be00000	jr	r31
  312  000012f8  54000000	nop
  313  000012fc          	.endproc _shmget
  315  000012fc          	.proc _shmat
  316  000012fc          	.global _shmat
  317  000012fc          	_shmat:
  318  000012fc  44000441	trap	#0x441
  319  00001300  4be00000	jr	r31
  320  00001304  54000000	nop
  321  00001308          	.endproc _shmat
  323  00001308          	.proc _sem_create
  324  00001308          	.global _sem_create
  325  00001308          	_sem_create:
  326  00001308  44000450	trap	#0x450
  327  0000130c  4be00000	jr	r31
  328  00001310  54000000	nop
  329  00001314          	.endproc _sem_create
  331  00001314          	.proc _sem_wait
  332  00001314          	.global _sem_wait
  333  00001314          	_sem_wait:
  334  00001314  44000451	trap	#0x451
  335  00001318  4be00000	jr	r31
  336  0000131c  54000000	nop
  337  00001320          	.endproc _sem_wait
  339  00001320          	.proc _sem_signal
  340  00001320          	.global _sem_signal
  341  00001320          	_sem_signal:
  342  00001320  44000452	trap	#0x452
  343  00001324  4be00000	jr	r31
  344  00001328  54000000	nop
  345  0000132c          	.endproc _sem_signal
  347  0000132c          	.proc _lock_create
  348  0000132c          	.global _lock_create
  349  0000132c          	_lock_create:
  350  0000132c  44000453	trap	#0x453
  351  00001330  4be00000	jr	r31
  352  00001334  54000000	nop
  353  00001338          	.endproc _lock_create
  355  00001338          	.proc _lock_acquire
  356  00001338          	.global _lock_acquire
  357  00001338          	_lock_acquire:
  358  00001338  44000454	trap	#0x454
  359  0000133c  4be00000	jr	r31
  360  00001340  54000000	nop
  361  00001344          	.endproc _lock_acquire
  363  00001344          	.proc _lock_release
  364  00001344          	.global _lock_release
  365  00001344          	_lock_release:
  366  00001344  44000455	trap	#0x455
  367  00001348  4be00000	jr	r31
  368  0000134c  54000000	nop
  369  00001350          	.endproc _lock_release
  371  00001350          	.proc _cond_create
  372  00001350          	.global _cond_create
  373  00001350          	_cond_create:
  374  00001350  44000456	trap	#0x456
  375  00001354  4be00000	jr	r31
  376  00001358  54000000	nop
  377  0000135c          	.endproc _cond_create
  379  0000135c          	.proc _cond_wait
  380  0000135c          	.global _cond_wait
  381  0000135c          	_cond_wait:
  382  0000135c  44000457	trap	#0x457
  383  00001360  4be00000	jr	r31
  384  00001364  54000000	nop
  385  00001368          	.endproc _cond_wait
  387  00001368          	.proc _cond_signal
  388  00001368          	.global _cond_signal
  389  00001368          	_cond_signal:
  390  00001368  44000458	trap	#0x458
  391  0000136c  4be00000	jr	r31
  392  00001370  54000000	nop
  393  00001374          	.endproc _cond_signal
  395  00001374          	.proc _cond_broadcast
  396  00001374          	.global _cond_broadcast
  397  00001374          	_cond_broadcast:
  398  00001374  44000459	trap	#0x459
  399  00001378  4be00000	jr	r31
  400  0000137c  54000000	nop
  401  00001380          	.endproc _cond_broadcast
  403  00001380          	.proc _mbox_create
  404  00001380          	.global _mbox_create
  405  00001380          	_mbox_create:
  406  00001380  44000460	trap	#0x460
  407  00001384  4be00000	jr	r31
  408  00001388  54000000	nop
  409  0000138c          	.endproc _mbox_create
  411  0000138c          	.proc _mbox_open
  412  0000138c          	.global _mbox_open
  413  0000138c          	_mbox_open:
  414  0000138c  44000461	trap	#0x461
  415  00001390  4be00000	jr	r31
  416  00001394  54000000	nop
  417  00001398          	.endproc _mbox_open
  419  00001398          	.proc _mbox_close
  420  00001398          	.global _mbox_close
  421  00001398          	_mbox_close:
  422  00001398  44000462	trap	#0x462
  423  0000139c  4be00000	jr	r31
  424  000013a0  54000000	nop
  425  000013a4          	.endproc _mbox_close
  427  000013a4          	.proc _mbox_send
  428  000013a4          	.global _mbox_send
  429  000013a4          	_mbox_send:
  430  000013a4  44000463	trap	#0x463
  431  000013a8  4be00000	jr	r31
  432  000013ac  54000000	nop
  433  000013b0          	.endproc _mbox_send
  435  000013b0          	.proc _mbox_recv
  436  000013b0          	.global _mbox_recv
  437  000013b0          	_mbox_recv:
  438  000013b0  44000464	trap	#0x464
  439  000013b4  4be00000	jr	r31
  440  000013b8  54000000	nop
  441  000013bc          	.endproc _mbox_recv
  443  000013bc          	.proc _sleep
  444  000013bc          	.global _sleep
  445  000013bc          	_sleep:
  446  000013bc  44000465	trap	#0x465
  447  000013c0  4be00000	jr	r31
  448  000013c4  54000000	nop
  449  000013c8          	.endproc _sleep
  451  000013c8          	.proc _yield
  452  000013c8          	.global _yield
  453  000013c8          	_yield:
  454  000013c8  44000466	trap	#0x466
  455  000013cc  4be00000	jr	r31
  456  000013d0  54000000	nop
  457  000013d4          	.endproc _yield
  460  000013d4          	.proc _Exit
  461  000013d4          	.global _Exit
  462  000013d4          	_Exit:
  463  000013d4  44000500	trap	#0x500
  464  000013d8  4be00000	jr	r31
  465  000013dc  54000000	nop
  466  000013e0          	.endproc _Exit
  467                      ; Compiled by GCC
  469  000013e0          	.align 2
  470  000013e0          	.proc _isspace
  471  000013e0          	.global _isspace
  472  000013e0          	_isspace:
  473                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  474  000013e0  afbefffc	sw	-4(r29),r30; push fp
  475  000013e4  001df020	add	r30,r0,r29; fp = sp
  476  000013e8  afbffff8	sw	-8(r29),r31; push ret addr
  477  000013ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  478  000013f0  afa20000	sw	0(r29),r2
  479  000013f4  afa30004	sw	4(r29),r3
  480  000013f8  afa40008	sw	8(r29),r4
  481  000013fc  83c20003	lb	r2,3(r30)
  482  00001400  20010000	addi	r1,r0,#0
  483  00001404  304300ff	andi	r3,r2,#0x00ff
  484  00001408  60640020	seqi	r4,r3,#32
  485  0000140c  1480002c	bnez	r4,L3_LF2
  486  00001410  54000000	nop; delay slot nop
  487  00001414  304300ff	andi	r3,r2,#0x00ff
  488  00001418  60640009	seqi	r4,r3,#9
  489  0000141c  1480001c	bnez	r4,L3_LF2
  490  00001420  54000000	nop; delay slot nop
  491  00001424  304300ff	andi	r3,r2,#0x00ff
  492  00001428  6064000a	seqi	r4,r3,#10
  493  0000142c  1480000c	bnez	r4,L3_LF2
  494  00001430  54000000	nop; delay slot nop
  495  00001434  08000008	j	L2_LF2
  496  00001438  54000000	nop; delay slot nop
  497  0000143c          	L3_LF2:
  498  0000143c  20010001	addi	r1,r0,#1
  499  00001440          	L2_LF2:
  500  00001440  08000004	j	L1_LF2
  501  00001444  54000000	nop; delay slot nop
  502  00001448          	L1_LF2:
  503  00001448  8fa20000	lw	r2,0(r29)
  504  0000144c  8fa30004	lw	r3,4(r29)
  505  00001450  8fa40008	lw	r4,8(r29)
  506  00001454  8fdffff8	lw	r31,-8(r30)
  507  00001458  001ee820	add	r29,r0,r30
  508  0000145c  8fdefffc	lw	r30,-4(r30)
  509  00001460  4be00000	jr	r31
  510  00001464  54000000	nop
  511  00001468          	.endproc _isspace
  512  00001468          	.align 2
  513  00001468          	.proc _isxdigit
  514  00001468          	.global _isxdigit
  515  00001468          	_isxdigit:
  516                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  517  00001468  afbefffc	sw	-4(r29),r30; push fp
  518  0000146c  001df020	add	r30,r0,r29; fp = sp
  519  00001470  afbffff8	sw	-8(r29),r31; push ret addr
  520  00001474  2fbd0018	subui	r29,r29,#24; alloc local storage
  521  00001478  afa20000	sw	0(r29),r2
  522  0000147c  afa30004	sw	4(r29),r3
  523  00001480  afa40008	sw	8(r29),r4
  524  00001484  83c20003	lb	r2,3(r30)
  525  00001488  20010000	addi	r1,r0,#0
  526  0000148c  304300ff	andi	r3,r2,#0x00ff
  527  00001490  6c64002f	sgtui	r4,r3,#47
  528  00001494  1080001c	beqz	r4,L7_LF2
  529  00001498  54000000	nop; delay slot nop
  530  0000149c  304300ff	andi	r3,r2,#0x00ff
  531  000014a0  70640039	sleui	r4,r3,#57
  532  000014a4  1480005c	bnez	r4,L6_LF2
  533  000014a8  54000000	nop; delay slot nop
  534  000014ac  08000004	j	L7_LF2
  535  000014b0  54000000	nop; delay slot nop
  536  000014b4          	L7_LF2:
  537  000014b4  304300ff	andi	r3,r2,#0x00ff
  538  000014b8  6c640060	sgtui	r4,r3,#96
  539  000014bc  1080001c	beqz	r4,L8_LF2
  540  000014c0  54000000	nop; delay slot nop
  541  000014c4  304300ff	andi	r3,r2,#0x00ff
  542  000014c8  70640066	sleui	r4,r3,#102
  543  000014cc  14800034	bnez	r4,L6_LF2
  544  000014d0  54000000	nop; delay slot nop
  545  000014d4  08000004	j	L8_LF2
  546  000014d8  54000000	nop; delay slot nop
  547  000014dc          	L8_LF2:
  548  000014dc  304300ff	andi	r3,r2,#0x00ff
  549  000014e0  6c640040	sgtui	r4,r3,#64
  550  000014e4  10800020	beqz	r4,L5_LF2
  551  000014e8  54000000	nop; delay slot nop
  552  000014ec  304300ff	andi	r3,r2,#0x00ff
  553  000014f0  70640041	sleui	r4,r3,#65
  554  000014f4  1480000c	bnez	r4,L6_LF2
  555  000014f8  54000000	nop; delay slot nop
  556  000014fc  08000008	j	L5_LF2
  557  00001500  54000000	nop; delay slot nop
  558  00001504          	L6_LF2:
  559  00001504  20010001	addi	r1,r0,#1
  560  00001508          	L5_LF2:
  561  00001508  08000004	j	L4_LF2
  562  0000150c  54000000	nop; delay slot nop
  563  00001510          	L4_LF2:
  564  00001510  8fa20000	lw	r2,0(r29)
  565  00001514  8fa30004	lw	r3,4(r29)
  566  00001518  8fa40008	lw	r4,8(r29)
  567  0000151c  8fdffff8	lw	r31,-8(r30)
  568  00001520  001ee820	add	r29,r0,r30
  569  00001524  8fdefffc	lw	r30,-4(r30)
  570  00001528  4be00000	jr	r31
  571  0000152c  54000000	nop
  572  00001530          	.endproc _isxdigit
  573  00001530          	.align 2
  574  00001530          	.proc _dstrcpy
  575  00001530          	.global _dstrcpy
  576  00001530          	_dstrcpy:
  577                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  578  00001530  afbefffc	sw	-4(r29),r30; push fp
  579  00001534  001df020	add	r30,r0,r29; fp = sp
  580  00001538  afbffff8	sw	-8(r29),r31; push ret addr
  581  0000153c  2fbd0018	subui	r29,r29,#24; alloc local storage
  582  00001540  afa20000	sw	0(r29),r2
  583  00001544  afa30004	sw	4(r29),r3
  584  00001548  8fc10000	lw	r1,(r30)
  585  0000154c  afc1fff4	sw	-12(r30),r1
  586  00001550          	L10_LF2:
  587  00001550  8fc10000	lw	r1,(r30)
  588  00001554  20220001	addi	r2,r1,#1
  589  00001558  afc20000	sw	(r30),r2
  590  0000155c  8fc20004	lw	r2,4(r30)
  591  00001560  20430001	addi	r3,r2,#1
  592  00001564  afc30004	sw	4(r30),r3
  593  00001568  80420000	lb	r2,(r2)
  594  0000156c  a0220000	sb	(r1),r2
  595  00001570  a3c2fff3	sb	-13(r30),r2
  596  00001574          	L12_LF2:
  597  00001574  93c1fff3	lbu	r1,-13(r30)
  598  00001578  64220000	snei	r2,r1,#0
  599  0000157c  1440000c	bnez	r2,L13_LF2
  600  00001580  54000000	nop; delay slot nop
  601  00001584  0800000c	j	L11_LF2
  602  00001588  54000000	nop; delay slot nop
  603  0000158c          	L13_LF2:
  604  0000158c  0bffffc0	j	L10_LF2
  605  00001590  54000000	nop; delay slot nop
  606  00001594          	L11_LF2:
  607  00001594  8fc1fff4	lw	r1,-12(r30)
  608  00001598  08000004	j	L9_LF2
  609  0000159c  54000000	nop; delay slot nop
  610  000015a0          	L9_LF2:
  611  000015a0  8fa20000	lw	r2,0(r29)
  612  000015a4  8fa30004	lw	r3,4(r29)
  613  000015a8  8fdffff8	lw	r31,-8(r30)
  614  000015ac  001ee820	add	r29,r0,r30
  615  000015b0  8fdefffc	lw	r30,-4(r30)
  616  000015b4  4be00000	jr	r31
  617  000015b8  54000000	nop
  618  000015bc          	.endproc _dstrcpy
  619  000015bc          	.align 2
  620  000015bc          	.proc _dstrncpy
  621  000015bc          	.global _dstrncpy
  622  000015bc          	_dstrncpy:
  623                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  624  000015bc  afbefffc	sw	-4(r29),r30; push fp
  625  000015c0  001df020	add	r30,r0,r29; fp = sp
  626  000015c4  afbffff8	sw	-8(r29),r31; push ret addr
  627  000015c8  2fbd0018	subui	r29,r29,#24; alloc local storage
  628  000015cc  afa20000	sw	0(r29),r2
  629  000015d0  afa30004	sw	4(r29),r3
  630  000015d4  8fc10000	lw	r1,(r30)
  631  000015d8  afc1fff4	sw	-12(r30),r1
  632  000015dc          	L15_LF2:
  633  000015dc  8fc10008	lw	r1,8(r30)
  634  000015e0  2022ffff	addi	r2,r1,#-1
  635  000015e4  afc20008	sw	8(r30),r2
  636  000015e8  70210000	slei	r1,r1,#0
  637  000015ec  1020000c	beqz	r1,L18_LF2
  638  000015f0  54000000	nop; delay slot nop
  639  000015f4  08000048	j	L16_LF2
  640  000015f8  54000000	nop; delay slot nop
  641  000015fc          	L18_LF2:
  642  000015fc  8fc10000	lw	r1,(r30)
  643  00001600  20220001	addi	r2,r1,#1
  644  00001604  afc20000	sw	(r30),r2
  645  00001608  8fc20004	lw	r2,4(r30)
  646  0000160c  20430001	addi	r3,r2,#1
  647  00001610  afc30004	sw	4(r30),r3
  648  00001614  80420000	lb	r2,(r2)
  649  00001618  a0220000	sb	(r1),r2
  650  0000161c  a3c2fff3	sb	-13(r30),r2
  651  00001620          	L17_LF2:
  652  00001620  93c1fff3	lbu	r1,-13(r30)
  653  00001624  64220000	snei	r2,r1,#0
  654  00001628  1440000c	bnez	r2,L19_LF2
  655  0000162c  54000000	nop; delay slot nop
  656  00001630  0800000c	j	L16_LF2
  657  00001634  54000000	nop; delay slot nop
  658  00001638          	L19_LF2:
  659  00001638  0bffffa0	j	L15_LF2
  660  0000163c  54000000	nop; delay slot nop
  661  00001640          	L16_LF2:
  662  00001640  8fc1fff4	lw	r1,-12(r30)
  663  00001644  08000004	j	L14_LF2
  664  00001648  54000000	nop; delay slot nop
  665  0000164c          	L14_LF2:
  666  0000164c  8fa20000	lw	r2,0(r29)
  667  00001650  8fa30004	lw	r3,4(r29)
  668  00001654  8fdffff8	lw	r31,-8(r30)
  669  00001658  001ee820	add	r29,r0,r30
  670  0000165c  8fdefffc	lw	r30,-4(r30)
  671  00001660  4be00000	jr	r31
  672  00001664  54000000	nop
  673  00001668          	.endproc _dstrncpy
  674  00001668          	.align 2
  675  00001668          	.proc _dstrcat
  676  00001668          	.global _dstrcat
  677  00001668          	_dstrcat:
  678                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  679  00001668  afbefffc	sw	-4(r29),r30; push fp
  680  0000166c  001df020	add	r30,r0,r29; fp = sp
  681  00001670  afbffff8	sw	-8(r29),r31; push ret addr
  682  00001674  2fbd0018	subui	r29,r29,#24; alloc local storage
  683  00001678  afa20000	sw	0(r29),r2
  684  0000167c  8fc10000	lw	r1,(r30)
  685  00001680  afc1fff4	sw	-12(r30),r1
  686  00001684          	L21_LF2:
  687  00001684  8fc10000	lw	r1,(r30)
  688  00001688  90220000	lbu	r2,(r1)
  689  0000168c  64410000	snei	r1,r2,#0
  690  00001690  1420000c	bnez	r1,L23_LF2
  691  00001694  54000000	nop; delay slot nop
  692  00001698  0800001c	j	L22_LF2
  693  0000169c  54000000	nop; delay slot nop
  694  000016a0          	L23_LF2:
  695  000016a0  8fc20000	lw	r2,(r30)
  696  000016a4  20410001	addi	r1,r2,#1
  697  000016a8  00011020	add	r2,r0,r1
  698  000016ac  afc20000	sw	(r30),r2
  699  000016b0  0bffffd0	j	L21_LF2
  700  000016b4  54000000	nop; delay slot nop
  701  000016b8          	L22_LF2:
  702  000016b8  23bdfff8	addi	r29,r29,#-8
  703  000016bc  001d0820	add	r1,r0,r29
  704  000016c0  8fc20000	lw	r2,(r30)
  705  000016c4  ac220000	sw	(r1),r2
  706  000016c8  8fc20004	lw	r2,4(r30)
  707  000016cc  ac220004	sw	4(r1),r2
  708  000016d0  0ffffe5c	jal	_dstrcpy
  709  000016d4  54000000	nop; delay slot nop
  710  000016d8  23bd0008	addi	r29,r29,#8
  711  000016dc  8fc1fff4	lw	r1,-12(r30)
  712  000016e0  08000004	j	L20_LF2
  713  000016e4  54000000	nop; delay slot nop
  714  000016e8          	L20_LF2:
  715  000016e8  8fa20000	lw	r2,0(r29)
  716  000016ec  8fdffff8	lw	r31,-8(r30)
  717  000016f0  001ee820	add	r29,r0,r30
  718  000016f4  8fdefffc	lw	r30,-4(r30)
  719  000016f8  4be00000	jr	r31
  720  000016fc  54000000	nop
  721  00001700          	.endproc _dstrcat
  722  00001700          	.align 2
  723  00001700          	.proc _dstrncmp
  724  00001700          	.global _dstrncmp
  725  00001700          	_dstrncmp:
  726                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  727  00001700  afbefffc	sw	-4(r29),r30; push fp
  728  00001704  001df020	add	r30,r0,r29; fp = sp
  729  00001708  afbffff8	sw	-8(r29),r31; push ret addr
  730  0000170c  2fbd0018	subui	r29,r29,#24; alloc local storage
  731  00001710  afa20000	sw	0(r29),r2
  732  00001714  afa30004	sw	4(r29),r3
  733  00001718  54000000	nop
  734  0000171c  20010000	addi	r1,r0,#0
  735  00001720  afc1fff4	sw	-12(r30),r1
  736  00001724          	L25_LF2:
  737  00001724  8fc1fff4	lw	r1,-12(r30)
  738  00001728  8fc20008	lw	r2,8(r30)
  739  0000172c  0022082a	slt	r1,r1,r2
  740  00001730  1420000c	bnez	r1,L28_LF2
  741  00001734  54000000	nop; delay slot nop
  742  00001738  08000088	j	L26_LF2
  743  0000173c  54000000	nop; delay slot nop
  744  00001740          	L28_LF2:
  745  00001740  8fc10004	lw	r1,4(r30)
  746  00001744  90220000	lbu	r2,(r1)
  747  00001748  64410000	snei	r1,r2,#0
  748  0000174c  14200018	bnez	r1,L29_LF2
  749  00001750  54000000	nop; delay slot nop
  750  00001754  20010000	addi	r1,r0,#0
  751  00001758  080000d8	j	L24_LF2
  752  0000175c  54000000	nop; delay slot nop
  753  00001760  08000028	j	L30_LF2
  754  00001764  54000000	nop; delay slot nop
  755  00001768          	L29_LF2:
  756  00001768  8fc10000	lw	r1,(r30)
  757  0000176c  8fc20004	lw	r2,4(r30)
  758  00001770  90210000	lbu	r1,(r1)
  759  00001774  90420000	lbu	r2,(r2)
  760  00001778  00220829	sne	r1,r1,r2
  761  0000177c  1020000c	beqz	r1,L30_LF2
  762  00001780  54000000	nop; delay slot nop
  763  00001784  0800003c	j	L26_LF2
  764  00001788  54000000	nop; delay slot nop
  765  0000178c          	L31_LF2:
  766  0000178c          	L30_LF2:
  767  0000178c  8fc20000	lw	r2,(r30)
  768  00001790  20410001	addi	r1,r2,#1
  769  00001794  00011020	add	r2,r0,r1
  770  00001798  afc20000	sw	(r30),r2
  771  0000179c  8fc20004	lw	r2,4(r30)
  772  000017a0  20410001	addi	r1,r2,#1
  773  000017a4  00011020	add	r2,r0,r1
  774  000017a8  afc20004	sw	4(r30),r2
  775  000017ac          	L27_LF2:
  776  000017ac  8fc2fff4	lw	r2,-12(r30)
  777  000017b0  20410001	addi	r1,r2,#1
  778  000017b4  00011020	add	r2,r0,r1
  779  000017b8  afc2fff4	sw	-12(r30),r2
  780  000017bc  0bffff64	j	L25_LF2
  781  000017c0  54000000	nop; delay slot nop
  782  000017c4          	L26_LF2:
  783  000017c4  8fc1fff4	lw	r1,-12(r30)
  784  000017c8  8fc20008	lw	r2,8(r30)
  785  000017cc  00220828	seq	r1,r1,r2
  786  000017d0  10200018	beqz	r1,L32_LF2
  787  000017d4  54000000	nop; delay slot nop
  788  000017d8  20010000	addi	r1,r0,#0
  789  000017dc  08000054	j	L24_LF2
  790  000017e0  54000000	nop; delay slot nop
  791  000017e4  0800004c	j	L33_LF2
  792  000017e8  54000000	nop; delay slot nop
  793  000017ec          	L32_LF2:
  794  000017ec  8fc20000	lw	r2,(r30)
  795  000017f0  90410000	lbu	r1,(r2)
  796  000017f4  8fc20004	lw	r2,4(r30)
  797  000017f8  90430000	lbu	r3,(r2)
  798  000017fc  00230822	sub	r1,r1,r3
  799  00001800  74220000	sgei	r2,r1,#0
  800  00001804  10400020	beqz	r2,L34_LF2
  801  00001808  54000000	nop; delay slot nop
  802  0000180c  8fc10000	lw	r1,(r30)
  803  00001810  8fc20004	lw	r2,4(r30)
  804  00001814  90210000	lbu	r1,(r1)
  805  00001818  90420000	lbu	r2,(r2)
  806  0000181c  00220829	sne	r1,r1,r2
  807  00001820  08000008	j	L35_LF2
  808  00001824  54000000	nop; delay slot nop
  809  00001828          	L34_LF2:
  810  00001828  2001ffff	addi	r1,r0,#-1
  811  0000182c          	L35_LF2:
  812  0000182c  08000004	j	L24_LF2
  813  00001830  54000000	nop; delay slot nop
  814  00001834          	L33_LF2:
  815  00001834          	L24_LF2:
  816  00001834  8fa20000	lw	r2,0(r29)
  817  00001838  8fa30004	lw	r3,4(r29)
  818  0000183c  8fdffff8	lw	r31,-8(r30)
  819  00001840  001ee820	add	r29,r0,r30
  820  00001844  8fdefffc	lw	r30,-4(r30)
  821  00001848  4be00000	jr	r31
  822  0000184c  54000000	nop
  823  00001850          	.endproc _dstrncmp
  824  00001850          	.align 2
  825  00001850          	.proc _dstrlen
  826  00001850          	.global _dstrlen
  827  00001850          	_dstrlen:
  828                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  829  00001850  afbefffc	sw	-4(r29),r30; push fp
  830  00001854  001df020	add	r30,r0,r29; fp = sp
  831  00001858  afbffff8	sw	-8(r29),r31; push ret addr
  832  0000185c  2fbd0018	subui	r29,r29,#24; alloc local storage
  833  00001860  afa20000	sw	0(r29),r2
  834  00001864  20010000	addi	r1,r0,#0
  835  00001868  afc1fff4	sw	-12(r30),r1
  836  0000186c          	L37_LF2:
  837  0000186c  8fc10000	lw	r1,(r30)
  838  00001870  20220001	addi	r2,r1,#1
  839  00001874  afc20000	sw	(r30),r2
  840  00001878  90210000	lbu	r1,(r1)
  841  0000187c  64220000	snei	r2,r1,#0
  842  00001880  1440000c	bnez	r2,L39_LF2
  843  00001884  54000000	nop; delay slot nop
  844  00001888  0800001c	j	L38_LF2
  845  0000188c  54000000	nop; delay slot nop
  846  00001890          	L39_LF2:
  847  00001890  8fc2fff4	lw	r2,-12(r30)
  848  00001894  20410001	addi	r1,r2,#1
  849  00001898  00011020	add	r2,r0,r1
  850  0000189c  afc2fff4	sw	-12(r30),r2
  851  000018a0  0bffffc8	j	L37_LF2
  852  000018a4  54000000	nop; delay slot nop
  853  000018a8          	L38_LF2:
  854  000018a8  8fc1fff4	lw	r1,-12(r30)
  855  000018ac  08000004	j	L36_LF2
  856  000018b0  54000000	nop; delay slot nop
  857  000018b4          	L36_LF2:
  858  000018b4  8fa20000	lw	r2,0(r29)
  859  000018b8  8fdffff8	lw	r31,-8(r30)
  860  000018bc  001ee820	add	r29,r0,r30
  861  000018c0  8fdefffc	lw	r30,-4(r30)
  862  000018c4  4be00000	jr	r31
  863  000018c8  54000000	nop
  864  000018cc          	.endproc _dstrlen
  865  000018cc          	.align 2
  866  000018cc          	.proc _dstrstr
  867  000018cc          	.global _dstrstr
  868  000018cc          	_dstrstr:
  869                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  870  000018cc  afbefffc	sw	-4(r29),r30; push fp
  871  000018d0  001df020	add	r30,r0,r29; fp = sp
  872  000018d4  afbffff8	sw	-8(r29),r31; push ret addr
  873  000018d8  2fbd0018	subui	r29,r29,#24; alloc local storage
  874  000018dc  afa20000	sw	0(r29),r2
  875  000018e0  23bdfff8	addi	r29,r29,#-8
  876  000018e4  001d0820	add	r1,r0,r29
  877  000018e8  8fc20004	lw	r2,4(r30)
  878  000018ec  ac220000	sw	(r1),r2
  879  000018f0  0fffff5c	jal	_dstrlen
  880  000018f4  54000000	nop; delay slot nop
  881  000018f8  23bd0008	addi	r29,r29,#8
  882  000018fc  afc1fff4	sw	-12(r30),r1
  883  00001900          	L41_LF2:
  884  00001900  8fc10000	lw	r1,(r30)
  885  00001904  90220000	lbu	r2,(r1)
  886  00001908  64410000	snei	r1,r2,#0
  887  0000190c  1420000c	bnez	r1,L43_LF2
  888  00001910  54000000	nop; delay slot nop
  889  00001914  08000060	j	L42_LF2
  890  00001918  54000000	nop; delay slot nop
  891  0000191c          	L43_LF2:
  892  0000191c  23bdfff0	addi	r29,r29,#-16
  893  00001920  001d0820	add	r1,r0,r29
  894  00001924  8fc20000	lw	r2,(r30)
  895  00001928  ac220000	sw	(r1),r2
  896  0000192c  8fc20004	lw	r2,4(r30)
  897  00001930  ac220004	sw	4(r1),r2
  898  00001934  8fc2fff4	lw	r2,-12(r30)
  899  00001938  ac220008	sw	8(r1),r2
  900  0000193c  0ffffdc0	jal	_dstrncmp
  901  00001940  54000000	nop; delay slot nop
  902  00001944  23bd0010	addi	r29,r29,#16
  903  00001948  64220000	snei	r2,r1,#0
  904  0000194c  14400010	bnez	r2,L44_LF2
  905  00001950  54000000	nop; delay slot nop
  906  00001954  8fc10000	lw	r1,(r30)
  907  00001958  08000028	j	L40_LF2
  908  0000195c  54000000	nop; delay slot nop
  909  00001960          	L44_LF2:
  910  00001960  8fc20000	lw	r2,(r30)
  911  00001964  20410001	addi	r1,r2,#1
  912  00001968  00011020	add	r2,r0,r1
  913  0000196c  afc20000	sw	(r30),r2
  914  00001970  0bffff8c	j	L41_LF2
  915  00001974  54000000	nop; delay slot nop
  916  00001978          	L42_LF2:
  917  00001978  20010000	addi	r1,r0,#0
  918  0000197c  08000004	j	L40_LF2
  919  00001980  54000000	nop; delay slot nop
  920  00001984          	L40_LF2:
  921  00001984  8fa20000	lw	r2,0(r29)
  922  00001988  8fdffff8	lw	r31,-8(r30)
  923  0000198c  001ee820	add	r29,r0,r30
  924  00001990  8fdefffc	lw	r30,-4(r30)
  925  00001994  4be00000	jr	r31
  926  00001998  54000000	nop
  927  0000199c          	.endproc _dstrstr
  928  0000199c          	.align 2
  929  0000199c          	.proc _dmindex
  930  0000199c          	.global _dmindex
  931  0000199c          	_dmindex:
  932                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  933  0000199c  afbefffc	sw	-4(r29),r30; push fp
  934  000019a0  001df020	add	r30,r0,r29; fp = sp
  935  000019a4  afbffff8	sw	-8(r29),r31; push ret addr
  936  000019a8  2fbd0018	subui	r29,r29,#24; alloc local storage
  937  000019ac  afa20000	sw	0(r29),r2
  938  000019b0  54000000	nop
  939  000019b4          	L46_LF2:
  940  000019b4  8fc10000	lw	r1,(r30)
  941  000019b8  90220000	lbu	r2,(r1)
  942  000019bc  64410000	snei	r1,r2,#0
  943  000019c0  1420000c	bnez	r1,L48_LF2
  944  000019c4  54000000	nop; delay slot nop
  945  000019c8  08000070	j	L47_LF2
  946  000019cc  54000000	nop; delay slot nop
  947  000019d0          	L48_LF2:
  948  000019d0  8fc10004	lw	r1,4(r30)
  949  000019d4  afc1fff4	sw	-12(r30),r1
  950  000019d8          	L49_LF2:
  951  000019d8  8fc1fff4	lw	r1,-12(r30)
  952  000019dc  90220000	lbu	r2,(r1)
  953  000019e0  64410000	snei	r1,r2,#0
  954  000019e4  1420000c	bnez	r1,L52_LF2
  955  000019e8  54000000	nop; delay slot nop
  956  000019ec  08000044	j	L50_LF2
  957  000019f0  54000000	nop; delay slot nop
  958  000019f4          	L52_LF2:
  959  000019f4  8fc10000	lw	r1,(r30)
  960  000019f8  8fc2fff4	lw	r2,-12(r30)
  961  000019fc  90210000	lbu	r1,(r1)
  962  00001a00  90420000	lbu	r2,(r2)
  963  00001a04  00220828	seq	r1,r1,r2
  964  00001a08  10200010	beqz	r1,L51_LF2
  965  00001a0c  54000000	nop; delay slot nop
  966  00001a10  8fc10000	lw	r1,(r30)
  967  00001a14  08000030	j	L45_LF2
  968  00001a18  54000000	nop; delay slot nop
  969  00001a1c          	L53_LF2:
  970  00001a1c          	L51_LF2:
  971  00001a1c  8fc2fff4	lw	r2,-12(r30)
  972  00001a20  20410001	addi	r1,r2,#1
  973  00001a24  00011020	add	r2,r0,r1
  974  00001a28  afc2fff4	sw	-12(r30),r2
  975  00001a2c  0bffffa8	j	L49_LF2
  976  00001a30  54000000	nop; delay slot nop
  977  00001a34          	L50_LF2:
  978  00001a34  0bffff7c	j	L46_LF2
  979  00001a38  54000000	nop; delay slot nop
  980  00001a3c          	L47_LF2:
  981  00001a3c  20010000	addi	r1,r0,#0
  982  00001a40  08000004	j	L45_LF2
  983  00001a44  54000000	nop; delay slot nop
  984  00001a48          	L45_LF2:
  985  00001a48  8fa20000	lw	r2,0(r29)
  986  00001a4c  8fdffff8	lw	r31,-8(r30)
  987  00001a50  001ee820	add	r29,r0,r30
  988  00001a54  8fdefffc	lw	r30,-4(r30)
  989  00001a58  4be00000	jr	r31
  990  00001a5c  54000000	nop
  991  00001a60          	.endproc _dmindex
  992  00001a60          	.align 2
  993  00001a60          	.proc _dindex
  994  00001a60          	.global _dindex
  995  00001a60          	_dindex:
  996                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  997  00001a60  afbefffc	sw	-4(r29),r30; push fp
  998  00001a64  001df020	add	r30,r0,r29; fp = sp
  999  00001a68  afbffff8	sw	-8(r29),r31; push ret addr
 1000  00001a6c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1001  00001a70  afa20000	sw	0(r29),r2
 1002  00001a74  54000000	nop
 1003  00001a78          	L55_LF2:
 1004  00001a78  8fc10000	lw	r1,(r30)
 1005  00001a7c  90220000	lbu	r2,(r1)
 1006  00001a80  64410000	snei	r1,r2,#0
 1007  00001a84  1420000c	bnez	r1,L57_LF2
 1008  00001a88  54000000	nop; delay slot nop
 1009  00001a8c  08000040	j	L56_LF2
 1010  00001a90  54000000	nop; delay slot nop
 1011  00001a94          	L57_LF2:
 1012  00001a94  8fc10000	lw	r1,(r30)
 1013  00001a98  90220000	lbu	r2,(r1)
 1014  00001a9c  8fc10004	lw	r1,4(r30)
 1015  00001aa0  00411028	seq	r2,r2,r1
 1016  00001aa4  10400010	beqz	r2,L58_LF2
 1017  00001aa8  54000000	nop; delay slot nop
 1018  00001aac  8fc10000	lw	r1,(r30)
 1019  00001ab0  08000028	j	L54_LF2
 1020  00001ab4  54000000	nop; delay slot nop
 1021  00001ab8          	L58_LF2:
 1022  00001ab8  8fc20000	lw	r2,(r30)
 1023  00001abc  20410001	addi	r1,r2,#1
 1024  00001ac0  00011020	add	r2,r0,r1
 1025  00001ac4  afc20000	sw	(r30),r2
 1026  00001ac8  0bffffac	j	L55_LF2
 1027  00001acc  54000000	nop; delay slot nop
 1028  00001ad0          	L56_LF2:
 1029  00001ad0  20010000	addi	r1,r0,#0
 1030  00001ad4  08000004	j	L54_LF2
 1031  00001ad8  54000000	nop; delay slot nop
 1032  00001adc          	L54_LF2:
 1033  00001adc  8fa20000	lw	r2,0(r29)
 1034  00001ae0  8fdffff8	lw	r31,-8(r30)
 1035  00001ae4  001ee820	add	r29,r0,r30
 1036  00001ae8  8fdefffc	lw	r30,-4(r30)
 1037  00001aec  4be00000	jr	r31
 1038  00001af0  54000000	nop
 1039  00001af4          	.endproc _dindex
 1040  00001af4          	.align 2
 1041  00001af4          	.proc _ditoa
 1042  00001af4          	.global _ditoa
 1043  00001af4          	_ditoa:
 1044                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1045  00001af4  afbefffc	sw	-4(r29),r30; push fp
 1046  00001af8  001df020	add	r30,r0,r29; fp = sp
 1047  00001afc  afbffff8	sw	-8(r29),r31; push ret addr
 1048  00001b00  2fbd0018	subui	r29,r29,#24; alloc local storage
 1049  00001b04  afa20000	sw	0(r29),r2
 1050  00001b08  afa30004	sw	4(r29),r3
 1051  00001b0c  8fc10000	lw	r1,(r30)
 1052  00001b10  68220000	slti	r2,r1,#0
 1053  00001b14  1040002c	beqz	r2,L60_LF2
 1054  00001b18  54000000	nop; delay slot nop
 1055  00001b1c  8fc10004	lw	r1,4(r30)
 1056  00001b20  20220001	addi	r2,r1,#1
 1057  00001b24  afc20004	sw	4(r30),r2
 1058  00001b28  2002002d	addi	r2,r0,(#0x2d)&0xff
 1059  00001b2c  a0220000	sb	(r1),r2
 1060  00001b30  8fc10000	lw	r1,(r30)
 1061  00001b34  00011022	sub	r2,r0,r1
 1062  00001b38  afc20000	sw	(r30),r2
 1063  00001b3c  08000118	j	L61_LF2
 1064  00001b40  54000000	nop; delay slot nop
 1065  00001b44          	L60_LF2:
 1066  00001b44  8fc10000	lw	r1,(r30)
 1067  00001b48  64220000	snei	r2,r1,#0
 1068  00001b4c  14400020	bnez	r2,L62_LF2
 1069  00001b50  54000000	nop; delay slot nop
 1070  00001b54  8fc10004	lw	r1,4(r30)
 1071  00001b58  20220001	addi	r2,r1,#1
 1072  00001b5c  afc20004	sw	4(r30),r2
 1073  00001b60  20020030	addi	r2,r0,(#0x30)&0xff
 1074  00001b64  a0220000	sb	(r1),r2
 1075  00001b68  080000ec	j	L61_LF2
 1076  00001b6c  54000000	nop; delay slot nop
 1077  00001b70          	L62_LF2:
 1078  00001b70  20010001	addi	r1,r0,#1
 1079  00001b74  afc1fff4	sw	-12(r30),r1
 1080  00001b78          	L64_LF2:
 1081  00001b78  8fc1fff4	lw	r1,-12(r30)
 1082  00001b7c  8fc20000	lw	r2,(r30)
 1083  00001b80  0022082c	sle	r1,r1,r2
 1084  00001b84  1420000c	bnez	r1,L66_LF2
 1085  00001b88  54000000	nop; delay slot nop
 1086  00001b8c  08000024	j	L65_LF2
 1087  00001b90  54000000	nop; delay slot nop
 1088  00001b94          	L67_LF2:
 1089  00001b94          	L66_LF2:
 1090  00001b94  8fc1fff4	lw	r1,-12(r30)
 1091  00001b98  00011820	add	r3,r0,r1
 1092  00001b9c  50620002	slli	r2,r3,#0x2
 1093  00001ba0  00411020	add	r2,r2,r1
 1094  00001ba4  50410001	slli	r1,r2,#0x1
 1095  00001ba8  afc1fff4	sw	-12(r30),r1
 1096  00001bac  0bffffc8	j	L64_LF2
 1097  00001bb0  54000000	nop; delay slot nop
 1098  00001bb4          	L65_LF2:
 1099  00001bb4  54000000	nop
 1100  00001bb8          	L68_LF2:
 1101  00001bb8  8fc1fff4	lw	r1,-12(r30)
 1102  00001bbc  2002000a	addi	r2,r0,#10
 1103  00001bc0  00200035	movi2fp	f0,r1
 1104  00001bc4  00400835	movi2fp	f1,r2
 1105  00001bc8  0401000f	div	f0,f0,f1
 1106  00001bcc  00000834	movfp2i	r1,f0
 1107  00001bd0  afc1fff4	sw	-12(r30),r1
 1108  00001bd4  8fc10004	lw	r1,4(r30)
 1109  00001bd8  20220001	addi	r2,r1,#1
 1110  00001bdc  afc20004	sw	4(r30),r2
 1111  00001be0  8fc20000	lw	r2,(r30)
 1112  00001be4  8fc3fff4	lw	r3,-12(r30)
 1113  00001be8  00400035	movi2fp	f0,r2
 1114  00001bec  00600835	movi2fp	f1,r3
 1115  00001bf0  0401000f	div	f0,f0,f1
 1116  00001bf4  00001034	movfp2i	r2,f0
 1117  00001bf8  00021820	add	r3,r0,r2
 1118  00001bfc  20620030	addi	r2,r3,#48
 1119  00001c00  a0220000	sb	(r1),r2
 1120  00001c04  8fc10000	lw	r1,(r30)
 1121  00001c08  8fc3fff4	lw	r3,-12(r30)
 1122  00001c0c  00200035	movi2fp	f0,r1
 1123  00001c10  00600835	movi2fp	f1,r3
 1124  00001c14  0401000f	div	f0,f0,f1
 1125  00001c18  00001034	movfp2i	r2,f0
 1126  00001c1c  8fc3fff4	lw	r3,-12(r30)
 1127  00001c20  00400035	movi2fp	f0,r2
 1128  00001c24  00600835	movi2fp	f1,r3
 1129  00001c28  0401000e	mult	f0,f0,f1
 1130  00001c2c  00001034	movfp2i	r2,f0
 1131  00001c30  00220822	sub	r1,r1,r2
 1132  00001c34  afc10000	sw	(r30),r1
 1133  00001c38          	L70_LF2:
 1134  00001c38  8fc1fff4	lw	r1,-12(r30)
 1135  00001c3c  6c220001	sgti	r2,r1,#1
 1136  00001c40  1440000c	bnez	r2,L71_LF2
 1137  00001c44  54000000	nop; delay slot nop
 1138  00001c48  0800000c	j	L61_LF2
 1139  00001c4c  54000000	nop; delay slot nop
 1140  00001c50          	L71_LF2:
 1141  00001c50  0bffff64	j	L68_LF2
 1142  00001c54  54000000	nop; delay slot nop
 1143  00001c58          	L69_LF2:
 1144  00001c58          	L63_LF2:
 1145  00001c58          	L61_LF2:
 1146  00001c58  8fc10004	lw	r1,4(r30)
 1147  00001c5c  20020000	addi	r2,r0,(#0x0)&0xff
 1148  00001c60  a0220000	sb	(r1),r2
 1149  00001c64          	L59_LF2:
 1150  00001c64  8fa20000	lw	r2,0(r29)
 1151  00001c68  8fa30004	lw	r3,4(r29)
 1152  00001c6c  8fdffff8	lw	r31,-8(r30)
 1153  00001c70  001ee820	add	r29,r0,r30
 1154  00001c74  8fdefffc	lw	r30,-4(r30)
 1155  00001c78  4be00000	jr	r31
 1156  00001c7c  54000000	nop
 1157  00001c80          	.endproc _ditoa
 1158  00001c80          	.align 2
 1159  00001c80          	.proc _dstrtol
 1160  00001c80          	.global _dstrtol
 1161  00001c80          	_dstrtol:
 1162                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1163  00001c80  afbefffc	sw	-4(r29),r30; push fp
 1164  00001c84  001df020	add	r30,r0,r29; fp = sp
 1165  00001c88  afbffff8	sw	-8(r29),r31; push ret addr
 1166  00001c8c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1167  00001c90  afa20000	sw	0(r29),r2
 1168  00001c94  20010000	addi	r1,r0,#0
 1169  00001c98  afc1fff4	sw	-12(r30),r1
 1170  00001c9c          	L73_LF2:
 1171  00001c9c  8fc10000	lw	r1,(r30)
 1172  00001ca0  90220000	lbu	r2,(r1)
 1173  00001ca4  60410020	seqi	r1,r2,#32
 1174  00001ca8  14200034	bnez	r1,L75_LF2
 1175  00001cac  54000000	nop; delay slot nop
 1176  00001cb0  8fc10000	lw	r1,(r30)
 1177  00001cb4  90220000	lbu	r2,(r1)
 1178  00001cb8  60410009	seqi	r1,r2,#9
 1179  00001cbc  14200020	bnez	r1,L75_LF2
 1180  00001cc0  54000000	nop; delay slot nop
 1181  00001cc4  8fc10000	lw	r1,(r30)
 1182  00001cc8  90220000	lbu	r2,(r1)
 1183  00001ccc  6041000a	seqi	r1,r2,#10
 1184  00001cd0  1420000c	bnez	r1,L75_LF2
 1185  00001cd4  54000000	nop; delay slot nop
 1186  00001cd8  0800001c	j	L74_LF2
 1187  00001cdc  54000000	nop; delay slot nop
 1188  00001ce0          	L75_LF2:
 1189  00001ce0  8fc20000	lw	r2,(r30)
 1190  00001ce4  20410001	addi	r1,r2,#1
 1191  00001ce8  00011020	add	r2,r0,r1
 1192  00001cec  afc20000	sw	(r30),r2
 1193  00001cf0  0bffffa8	j	L73_LF2
 1194  00001cf4  54000000	nop; delay slot nop
 1195  00001cf8          	L74_LF2:
 1196  00001cf8  8fc10004	lw	r1,4(r30)
 1197  00001cfc  64220000	snei	r2,r1,#0
 1198  00001d00  10400010	beqz	r2,L76_LF2
 1199  00001d04  54000000	nop; delay slot nop
 1200  00001d08  8fc10004	lw	r1,4(r30)
 1201  00001d0c  8fc20000	lw	r2,(r30)
 1202  00001d10  ac220000	sw	(r1),r2
 1203  00001d14          	L76_LF2:
 1204  00001d14  8fc10000	lw	r1,(r30)
 1205  00001d18  90220000	lbu	r2,(r1)
 1206  00001d1c  64410000	snei	r1,r2,#0
 1207  00001d20  14200010	bnez	r1,L77_LF2
 1208  00001d24  54000000	nop; delay slot nop
 1209  00001d28  8fc1fff4	lw	r1,-12(r30)
 1210  00001d2c  08000294	j	L72_LF2
 1211  00001d30  54000000	nop; delay slot nop
 1212  00001d34          	L77_LF2:
 1213  00001d34  8fc10000	lw	r1,(r30)
 1214  00001d38  90220000	lbu	r2,(r1)
 1215  00001d3c  6041002d	seqi	r1,r2,#45
 1216  00001d40  10200024	beqz	r1,L78_LF2
 1217  00001d44  54000000	nop; delay slot nop
 1218  00001d48  2001ffff	addi	r1,r0,#-1
 1219  00001d4c  afc1ffec	sw	-20(r30),r1
 1220  00001d50  8fc20000	lw	r2,(r30)
 1221  00001d54  20410001	addi	r1,r2,#1
 1222  00001d58  00011020	add	r2,r0,r1
 1223  00001d5c  afc20000	sw	(r30),r2
 1224  00001d60  0800000c	j	L79_LF2
 1225  00001d64  54000000	nop; delay slot nop
 1226  00001d68          	L78_LF2:
 1227  00001d68  20010001	addi	r1,r0,#1
 1228  00001d6c  afc1ffec	sw	-20(r30),r1
 1229  00001d70          	L79_LF2:
 1230  00001d70  8fc10008	lw	r1,8(r30)
 1231  00001d74  64220000	snei	r2,r1,#0
 1232  00001d78  14400090	bnez	r2,L80_LF2
 1233  00001d7c  54000000	nop; delay slot nop
 1234  00001d80  8fc10000	lw	r1,(r30)
 1235  00001d84  90220000	lbu	r2,(r1)
 1236  00001d88  60410030	seqi	r1,r2,#48
 1237  00001d8c  10200074	beqz	r1,L81_LF2
 1238  00001d90  54000000	nop; delay slot nop
 1239  00001d94  8fc20000	lw	r2,(r30)
 1240  00001d98  20410001	addi	r1,r2,#1
 1241  00001d9c  00011020	add	r2,r0,r1
 1242  00001da0  afc20000	sw	(r30),r2
 1243  00001da4  8fc10000	lw	r1,(r30)
 1244  00001da8  90220000	lbu	r2,(r1)
 1245  00001dac  60410078	seqi	r1,r2,#120
 1246  00001db0  14200020	bnez	r1,L83_LF2
 1247  00001db4  54000000	nop; delay slot nop
 1248  00001db8  8fc10000	lw	r1,(r30)
 1249  00001dbc  90220000	lbu	r2,(r1)
 1250  00001dc0  60410058	seqi	r1,r2,#88
 1251  00001dc4  1420000c	bnez	r1,L83_LF2
 1252  00001dc8  54000000	nop; delay slot nop
 1253  00001dcc  08000024	j	L82_LF2
 1254  00001dd0  54000000	nop; delay slot nop
 1255  00001dd4          	L83_LF2:
 1256  00001dd4  20010010	addi	r1,r0,#16
 1257  00001dd8  afc10008	sw	8(r30),r1
 1258  00001ddc  8fc20000	lw	r2,(r30)
 1259  00001de0  20410001	addi	r1,r2,#1
 1260  00001de4  00011020	add	r2,r0,r1
 1261  00001de8  afc20000	sw	(r30),r2
 1262  00001dec  0800000c	j	L84_LF2
 1263  00001df0  54000000	nop; delay slot nop
 1264  00001df4          	L82_LF2:
 1265  00001df4  20010008	addi	r1,r0,#8
 1266  00001df8  afc10008	sw	8(r30),r1
 1267  00001dfc          	L84_LF2:
 1268  00001dfc  0800000c	j	L80_LF2
 1269  00001e00  54000000	nop; delay slot nop
 1270  00001e04          	L81_LF2:
 1271  00001e04  2001000a	addi	r1,r0,#10
 1272  00001e08  afc10008	sw	8(r30),r1
 1273  00001e0c          	L85_LF2:
 1274  00001e0c          	L80_LF2:
 1275  00001e0c  8fc10008	lw	r1,8(r30)
 1276  00001e10  70220000	slei	r2,r1,#0
 1277  00001e14  1440001c	bnez	r2,L87_LF2
 1278  00001e18  54000000	nop; delay slot nop
 1279  00001e1c  8fc10008	lw	r1,8(r30)
 1280  00001e20  6c220010	sgti	r2,r1,#16
 1281  00001e24  1440000c	bnez	r2,L87_LF2
 1282  00001e28  54000000	nop; delay slot nop
 1283  00001e2c  08000010	j	L86_LF2
 1284  00001e30  54000000	nop; delay slot nop
 1285  00001e34          	L87_LF2:
 1286  00001e34  8fc1fff4	lw	r1,-12(r30)
 1287  00001e38  08000188	j	L72_LF2
 1288  00001e3c  54000000	nop; delay slot nop
 1289  00001e40          	L86_LF2:
 1290  00001e40  54000000	nop
 1291  00001e44          	L88_LF2:
 1292  00001e44  8fc10000	lw	r1,(r30)
 1293  00001e48  90220000	lbu	r2,(r1)
 1294  00001e4c  6c41002f	sgtui	r1,r2,#47
 1295  00001e50  10200030	beqz	r1,L91_LF2
 1296  00001e54  54000000	nop; delay slot nop
 1297  00001e58  8fc10000	lw	r1,(r30)
 1298  00001e5c  90220000	lbu	r2,(r1)
 1299  00001e60  70410039	sleui	r1,r2,#57
 1300  00001e64  1020001c	beqz	r1,L91_LF2
 1301  00001e68  54000000	nop; delay slot nop
 1302  00001e6c  8fc10000	lw	r1,(r30)
 1303  00001e70  90220000	lbu	r2,(r1)
 1304  00001e74  2041ffd0	addi	r1,r2,#-48
 1305  00001e78  afc1fff0	sw	-16(r30),r1
 1306  00001e7c  0800008c	j	L92_LF2
 1307  00001e80  54000000	nop; delay slot nop
 1308  00001e84          	L91_LF2:
 1309  00001e84  8fc10000	lw	r1,(r30)
 1310  00001e88  90220000	lbu	r2,(r1)
 1311  00001e8c  6c410060	sgtui	r1,r2,#96
 1312  00001e90  10200030	beqz	r1,L93_LF2
 1313  00001e94  54000000	nop; delay slot nop
 1314  00001e98  8fc10000	lw	r1,(r30)
 1315  00001e9c  90220000	lbu	r2,(r1)
 1316  00001ea0  7041007a	sleui	r1,r2,#122
 1317  00001ea4  1020001c	beqz	r1,L93_LF2
 1318  00001ea8  54000000	nop; delay slot nop
 1319  00001eac  8fc10000	lw	r1,(r30)
 1320  00001eb0  90220000	lbu	r2,(r1)
 1321  00001eb4  2041ffa9	addi	r1,r2,#-87
 1322  00001eb8  afc1fff0	sw	-16(r30),r1
 1323  00001ebc  0800004c	j	L92_LF2
 1324  00001ec0  54000000	nop; delay slot nop
 1325  00001ec4          	L93_LF2:
 1326  00001ec4  8fc10000	lw	r1,(r30)
 1327  00001ec8  90220000	lbu	r2,(r1)
 1328  00001ecc  6c410040	sgtui	r1,r2,#64
 1329  00001ed0  10200030	beqz	r1,L95_LF2
 1330  00001ed4  54000000	nop; delay slot nop
 1331  00001ed8  8fc10000	lw	r1,(r30)
 1332  00001edc  90220000	lbu	r2,(r1)
 1333  00001ee0  7041005a	sleui	r1,r2,#90
 1334  00001ee4  1020001c	beqz	r1,L95_LF2
 1335  00001ee8  54000000	nop; delay slot nop
 1336  00001eec  8fc10000	lw	r1,(r30)
 1337  00001ef0  90220000	lbu	r2,(r1)
 1338  00001ef4  2041ffc9	addi	r1,r2,#-55
 1339  00001ef8  afc1fff0	sw	-16(r30),r1
 1340  00001efc  0800000c	j	L92_LF2
 1341  00001f00  54000000	nop; delay slot nop
 1342  00001f04          	L95_LF2:
 1343  00001f04  200103e8	addi	r1,r0,#1000
 1344  00001f08  afc1fff0	sw	-16(r30),r1
 1345  00001f0c          	L96_LF2:
 1346  00001f0c          	L94_LF2:
 1347  00001f0c          	L92_LF2:
 1348  00001f0c  8fc1fff0	lw	r1,-16(r30)
 1349  00001f10  8fc20008	lw	r2,8(r30)
 1350  00001f14  0022082a	slt	r1,r1,r2
 1351  00001f18  10200040	beqz	r1,L90_LF2
 1352  00001f1c  54000000	nop; delay slot nop
 1353  00001f20  8fc1fff4	lw	r1,-12(r30)
 1354  00001f24  8fc20008	lw	r2,8(r30)
 1355  00001f28  00200035	movi2fp	f0,r1
 1356  00001f2c  00400835	movi2fp	f1,r2
 1357  00001f30  0401000e	mult	f0,f0,f1
 1358  00001f34  00000834	movfp2i	r1,f0
 1359  00001f38  afc1fff4	sw	-12(r30),r1
 1360  00001f3c  8fc1fff4	lw	r1,-12(r30)
 1361  00001f40  8fc2fff0	lw	r2,-16(r30)
 1362  00001f44  00220820	add	r1,r1,r2
 1363  00001f48  afc1fff4	sw	-12(r30),r1
 1364  00001f4c  8fc20000	lw	r2,(r30)
 1365  00001f50  20410001	addi	r1,r2,#1
 1366  00001f54  00011020	add	r2,r0,r1
 1367  00001f58  afc20000	sw	(r30),r2
 1368  00001f5c          	L97_LF2:
 1369  00001f5c          	L90_LF2:
 1370  00001f5c  8fc1fff0	lw	r1,-16(r30)
 1371  00001f60  8fc20008	lw	r2,8(r30)
 1372  00001f64  0022082a	slt	r1,r1,r2
 1373  00001f68  1420000c	bnez	r1,L98_LF2
 1374  00001f6c  54000000	nop; delay slot nop
 1375  00001f70  0800000c	j	L89_LF2
 1376  00001f74  54000000	nop; delay slot nop
 1377  00001f78          	L98_LF2:
 1378  00001f78  0bfffec8	j	L88_LF2
 1379  00001f7c  54000000	nop; delay slot nop
 1380  00001f80          	L89_LF2:
 1381  00001f80  8fc10004	lw	r1,4(r30)
 1382  00001f84  64220000	snei	r2,r1,#0
 1383  00001f88  10400010	beqz	r2,L99_LF2
 1384  00001f8c  54000000	nop; delay slot nop
 1385  00001f90  8fc10004	lw	r1,4(r30)
 1386  00001f94  8fc20000	lw	r2,(r30)
 1387  00001f98  ac220000	sw	(r1),r2
 1388  00001f9c          	L99_LF2:
 1389  00001f9c  8fc1fff4	lw	r1,-12(r30)
 1390  00001fa0  8fc2ffec	lw	r2,-20(r30)
 1391  00001fa4  00200035	movi2fp	f0,r1
 1392  00001fa8  00400835	movi2fp	f1,r2
 1393  00001fac  0401000e	mult	f0,f0,f1
 1394  00001fb0  00000834	movfp2i	r1,f0
 1395  00001fb4  afc1fff4	sw	-12(r30),r1
 1396  00001fb8  8fc1fff4	lw	r1,-12(r30)
 1397  00001fbc  08000004	j	L72_LF2
 1398  00001fc0  54000000	nop; delay slot nop
 1399  00001fc4          	L72_LF2:
 1400  00001fc4  8fa20000	lw	r2,0(r29)
 1401  00001fc8  8fdffff8	lw	r31,-8(r30)
 1402  00001fcc  001ee820	add	r29,r0,r30
 1403  00001fd0  8fdefffc	lw	r30,-4(r30)
 1404  00001fd4  4be00000	jr	r31
 1405  00001fd8  54000000	nop
 1406  00001fdc          	.endproc _dstrtol
 1407  00001fdc          	.align 2
 1408  00001fdc          	.proc _bcopy
 1409  00001fdc          	.global _bcopy
 1410  00001fdc          	_bcopy:
 1411                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1412  00001fdc  afbefffc	sw	-4(r29),r30; push fp
 1413  00001fe0  001df020	add	r30,r0,r29; fp = sp
 1414  00001fe4  afbffff8	sw	-8(r29),r31; push ret addr
 1415  00001fe8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1416  00001fec  afa20000	sw	0(r29),r2
 1417  00001ff0  afa30004	sw	4(r29),r3
 1418  00001ff4  54000000	nop
 1419  00001ff8          	L101_LF2:
 1420  00001ff8  8fc10008	lw	r1,8(r30)
 1421  00001ffc  2022ffff	addi	r2,r1,#-1
 1422  00002000  afc20008	sw	8(r30),r2
 1423  00002004  6c210000	sgti	r1,r1,#0
 1424  00002008  1420000c	bnez	r1,L103_LF2
 1425  0000200c  54000000	nop; delay slot nop
 1426  00002010  0800002c	j	L102_LF2
 1427  00002014  54000000	nop; delay slot nop
 1428  00002018          	L103_LF2:
 1429  00002018  8fc10004	lw	r1,4(r30)
 1430  0000201c  20220001	addi	r2,r1,#1
 1431  00002020  afc20004	sw	4(r30),r2
 1432  00002024  8fc20000	lw	r2,(r30)
 1433  00002028  20430001	addi	r3,r2,#1
 1434  0000202c  afc30000	sw	(r30),r3
 1435  00002030  80420000	lb	r2,(r2)
 1436  00002034  a0220000	sb	(r1),r2
 1437  00002038  0bffffbc	j	L101_LF2
 1438  0000203c  54000000	nop; delay slot nop
 1439  00002040          	L102_LF2:
 1440  00002040          	L100_LF2:
 1441  00002040  8fa20000	lw	r2,0(r29)
 1442  00002044  8fa30004	lw	r3,4(r29)
 1443  00002048  8fdffff8	lw	r31,-8(r30)
 1444  0000204c  001ee820	add	r29,r0,r30
 1445  00002050  8fdefffc	lw	r30,-4(r30)
 1446  00002054  4be00000	jr	r31
 1447  00002058  54000000	nop
 1448  0000205c          	.endproc _bcopy
 1449  0000205c          	.align 2
 1450  0000205c          	.proc _bzero
 1451  0000205c          	.global _bzero
 1452  0000205c          	_bzero:
 1453                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1454  0000205c  afbefffc	sw	-4(r29),r30; push fp
 1455  00002060  001df020	add	r30,r0,r29; fp = sp
 1456  00002064  afbffff8	sw	-8(r29),r31; push ret addr
 1457  00002068  2fbd0010	subui	r29,r29,#16; alloc local storage
 1458  0000206c  afa20000	sw	0(r29),r2
 1459  00002070  54000000	nop
 1460  00002074          	L105_LF2:
 1461  00002074  8fc10004	lw	r1,4(r30)
 1462  00002078  2022ffff	addi	r2,r1,#-1
 1463  0000207c  afc20004	sw	4(r30),r2
 1464  00002080  6c210000	sgti	r1,r1,#0
 1465  00002084  1420000c	bnez	r1,L107_LF2
 1466  00002088  54000000	nop; delay slot nop
 1467  0000208c  08000020	j	L106_LF2
 1468  00002090  54000000	nop; delay slot nop
 1469  00002094          	L107_LF2:
 1470  00002094  8fc10000	lw	r1,(r30)
 1471  00002098  20220001	addi	r2,r1,#1
 1472  0000209c  afc20000	sw	(r30),r2
 1473  000020a0  20020000	addi	r2,r0,(#0x0)&0xff
 1474  000020a4  a0220000	sb	(r1),r2
 1475  000020a8  0bffffc8	j	L105_LF2
 1476  000020ac  54000000	nop; delay slot nop
 1477  000020b0          	L106_LF2:
 1478  000020b0          	L104_LF2:
 1479  000020b0  8fa20000	lw	r2,0(r29)
 1480  000020b4  8fdffff8	lw	r31,-8(r30)
 1481  000020b8  001ee820	add	r29,r0,r30
 1482  000020bc  8fdefffc	lw	r30,-4(r30)
 1483  000020c0  4be00000	jr	r31
 1484  000020c4  54000000	nop
 1485  000020c8          	.endproc _bzero
 1486  000020c8          	.align 2
 1487  000020c8          	.proc _min
 1488  000020c8          	.global _min
 1489  000020c8          	_min:
 1490                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1491  000020c8  afbefffc	sw	-4(r29),r30; push fp
 1492  000020cc  001df020	add	r30,r0,r29; fp = sp
 1493  000020d0  afbffff8	sw	-8(r29),r31; push ret addr
 1494  000020d4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1495  000020d8  afa20000	sw	0(r29),r2
 1496  000020dc  afa30004	sw	4(r29),r3
 1497  000020e0  8fc10000	lw	r1,(r30)
 1498  000020e4  8fc20004	lw	r2,4(r30)
 1499  000020e8  0022182c	sle	r3,r1,r2
 1500  000020ec  14600008	bnez	r3,L109_LF2
 1501  000020f0  54000000	nop; delay slot nop
 1502  000020f4  8fc10004	lw	r1,4(r30)
 1503  000020f8          	L109_LF2:
 1504  000020f8  08000004	j	L108_LF2
 1505  000020fc  54000000	nop; delay slot nop
 1506  00002100          	L108_LF2:
 1507  00002100  8fa20000	lw	r2,0(r29)
 1508  00002104  8fa30004	lw	r3,4(r29)
 1509  00002108  8fdffff8	lw	r31,-8(r30)
 1510  0000210c  001ee820	add	r29,r0,r30
 1511  00002110  8fdefffc	lw	r30,-4(r30)
 1512  00002114  4be00000	jr	r31
 1513  00002118  54000000	nop
 1514  0000211c          	.endproc _min
 1515  0000211c          	.align 2
 1516  0000211c          	.proc _max
 1517  0000211c          	.global _max
 1518  0000211c          	_max:
 1519                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1520  0000211c  afbefffc	sw	-4(r29),r30; push fp
 1521  00002120  001df020	add	r30,r0,r29; fp = sp
 1522  00002124  afbffff8	sw	-8(r29),r31; push ret addr
 1523  00002128  2fbd0010	subui	r29,r29,#16; alloc local storage
 1524  0000212c  afa20000	sw	0(r29),r2
 1525  00002130  afa30004	sw	4(r29),r3
 1526  00002134  8fc10000	lw	r1,(r30)
 1527  00002138  8fc20004	lw	r2,4(r30)
 1528  0000213c  0022182d	sge	r3,r1,r2
 1529  00002140  14600008	bnez	r3,L111_LF2
 1530  00002144  54000000	nop; delay slot nop
 1531  00002148  8fc10004	lw	r1,4(r30)
 1532  0000214c          	L111_LF2:
 1533  0000214c  08000004	j	L110_LF2
 1534  00002150  54000000	nop; delay slot nop
 1535  00002154          	L110_LF2:
 1536  00002154  8fa20000	lw	r2,0(r29)
 1537  00002158  8fa30004	lw	r3,4(r29)
 1538  0000215c  8fdffff8	lw	r31,-8(r30)
 1539  00002160  001ee820	add	r29,r0,r30
 1540  00002164  8fdefffc	lw	r30,-4(r30)
 1541  00002168  4be00000	jr	r31
 1542  0000216c  54000000	nop
 1543  00002170          	.endproc _max
 1544                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1545                      ;;;
 1546                      ;;; Most of the traps are called in files from libtraps.
 1549  00002170          	.align 2
 1550  00002170          	.proc _exit
 1551  00002170          	.global _exit
 1552  00002170          	_exit:
 1553  00002170  44000300	trap	#0x300
 1554  00002174  4be00000	jr	r31
 1555  00002178  54000000	nop
 1556  0000217c          	.endproc _exit
 1558                      ; for the benefit of gcc.
 1559  0000217c          	.proc ___main
 1560  0000217c          	.global ___main
 1561  0000217c          	___main:
 1562  0000217c  4be00000	jr	r31
 1563  00002180  54000000	nop
 1564  00002184          	.endproc ___main
 1565  00002184          	.text
 1566  00002184          	.global _etext
 1567  00002184          	_etext:
 1568  00002184          	.align 3
 1569  00002188          	.data
 1570  000030bf          	.global _edata
 1571  000030bf          	_edata:
