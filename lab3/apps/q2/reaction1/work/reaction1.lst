 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 179
    4                      ; Text size: 4604
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage\000"
   82  00003004  6500    	
   83  00003006          	.align 2
   84  00003008          	LC1_LF0:
   85  00003008  3c68616e	.ascii "<handle_to_shared_memory_page> <handle_to_page_mapped_semaphore<handle"
   85  0000300c  646c655f	
   85  00003010  746f5f73	
   85  00003014  68617265	
   85  00003018  645f6d65	
   85  0000301c  6d6f7279	
   85  00003020  5f706167	
   85  00003024  653e203c	
   85  00003028  68616e64	
   85  0000302c  6c655f74	
   85  00003030  6f5f7061	
   85  00003034  67655f6d	
   85  00003038  61707065	
   85  0000303c  645f7365	
   85  00003040  6d617068	
   85  00003044  6f72653c	
   85  00003048  68616e64	
   85  0000304c  6c65    	
   86  0000304e  20746f20	.ascii " to lock>\000"
   86  00003052  6c6f636b	
   86  00003056  3e00    	
   87  00003058          	.align 2
   88  00003058          	LC2_LF0:
   89  00003058  32204832	.ascii "2 H2O -> 2 H2 + O2 reacted, PID:%d\n\000"
   89  0000305c  4f202d3e	
   89  00003060  20322048	
   89  00003064  32202b20	
   89  00003068  4f322072	
   89  0000306c  65616374	
   89  00003070  65642c20	
   89  00003074  5049443a	
   89  00003078  25640a00	
   90  0000307c          	.align 2
   91  0000307c          	LC3_LF0:
   92  0000307c  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
   92  00003080  73656d61	
   92  00003084  70686f72	
   92  00003088  6520735f	
   92  0000308c  70726f63	
   92  00003090  735f636f	
   92  00003094  6d706c65	
   92  00003098  74656420	
   92  0000309c  28256429	
   92  000030a0  20696e20	
   92  000030a4  00      	
   93  000030a5          	.align 2
   94  000030a8          	LC4_LF0:
   95  000030a8  65786974	.ascii "exiting..\n\000"
   95  000030ac  696e672e	
   95  000030b0  2e0a00  	
   96  000030b3          	.text
   97  000010d4          	.align 2
   98  000010d4          	.proc _main
   99  000010d4          	.global _main
  100  000010d4          	_main:
  101                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  102  000010d4  afbefffc	sw	-4(r29),r30; push fp
  103  000010d8  001df020	add	r30,r0,r29; fp = sp
  104  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  105  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  106  000010e4  8fc20000	lw	r2,(r30)
  107  000010e8  8fc60004	lw	r6,4(r30)
  108  000010ec  0c001104	jal	___main
  109  000010f0  54000000	nop; not filled.
  110  000010f4  64410006	snei	r1,r2,#6
  111  000010f8  1020004c	beqz	r1,L14_LF0
  112  000010fc  54000000	nop; not filled.
  113  00001100  23bdfff8	addi	r29,r29,#-8
  114  00001104  3c090000	lhi	r9,((LC0_LF0)>>16)&0xffff
  115  00001108  25293000	addui	r9,r9,(LC0_LF0)&0xffff
  116  0000110c  afa90000	sw	(r29),r9
  117  00001110  0c000230	jal	_Printf
  118  00001114  54000000	nop; not filled.
  119  00001118  8cc90000	lw	r9,(r6)
  120  0000111c  afa90000	sw	(r29),r9
  121  00001120  0c000220	jal	_Printf
  122  00001124  54000000	nop; not filled.
  123  00001128  3c090000	lhi	r9,((LC1_LF0)>>16)&0xffff
  124  0000112c  25293008	addui	r9,r9,(LC1_LF0)&0xffff
  125  00001130  afa90000	sw	(r29),r9
  126  00001134  0c00020c	jal	_Printf
  127  00001138  54000000	nop; not filled.
  128  0000113c  0c00030c	jal	_Exit
  129  00001140  54000000	nop; not filled.
  130  00001144  23bd0008	addi	r29,r29,#8
  131  00001148          	L14_LF0:
  132  00001148  23bdfff0	addi	r29,r29,#-16
  133  0000114c  8cc90004	lw	r9,4(r6)
  134  00001150  afa90000	sw	(r29),r9
  135  00001154  20090000	addi	r9,r0,#0
  136  00001158  afa90004	sw	4(r29),r9
  137  0000115c  2009000a	addi	r9,r0,#10
  138  00001160  afa90008	sw	8(r29),r9
  139  00001164  0c000b90	jal	_dstrtol
  140  00001168  54000000	nop; not filled.
  141  0000116c  00014020	add	r8,r0,r1
  142  00001170  8cc90008	lw	r9,8(r6)
  143  00001174  afa90000	sw	(r29),r9
  144  00001178  20090000	addi	r9,r0,#0
  145  0000117c  afa90004	sw	4(r29),r9
  146  00001180  2009000a	addi	r9,r0,#10
  147  00001184  afa90008	sw	8(r29),r9
  148  00001188  0c000b6c	jal	_dstrtol
  149  0000118c  54000000	nop; not filled.
  150  00001190  00012820	add	r5,r0,r1
  151  00001194  8cc9000c	lw	r9,12(r6)
  152  00001198  afa90000	sw	(r29),r9
  153  0000119c  20090000	addi	r9,r0,#0
  154  000011a0  afa90004	sw	4(r29),r9
  155  000011a4  2009000a	addi	r9,r0,#10
  156  000011a8  afa90008	sw	8(r29),r9
  157  000011ac  0c000b48	jal	_dstrtol
  158  000011b0  54000000	nop; not filled.
  159  000011b4  00012020	add	r4,r0,r1
  160  000011b8  8cc90010	lw	r9,16(r6)
  161  000011bc  afa90000	sw	(r29),r9
  162  000011c0  20090000	addi	r9,r0,#0
  163  000011c4  afa90004	sw	4(r29),r9
  164  000011c8  2009000a	addi	r9,r0,#10
  165  000011cc  afa90008	sw	8(r29),r9
  166  000011d0  0c000b24	jal	_dstrtol
  167  000011d4  54000000	nop; not filled.
  168  000011d8  00013820	add	r7,r0,r1
  169  000011dc  8cc90014	lw	r9,20(r6)
  170  000011e0  afa90000	sw	(r29),r9
  171  000011e4  20090000	addi	r9,r0,#0
  172  000011e8  afa90004	sw	4(r29),r9
  173  000011ec  2009000a	addi	r9,r0,#10
  174  000011f0  afa90008	sw	8(r29),r9
  175  000011f4  0c000b00	jal	_dstrtol
  176  000011f8  54000000	nop; not filled.
  177  000011fc  00011820	add	r3,r0,r1
  178  00001200  20020000	addi	r2,r0,#0
  179  00001204  23bd0010	addi	r29,r29,#16
  180  00001208  0043082a	slt	r1,r2,r3
  181  0000120c  10200078	beqz	r1,L16_LF0
  182  00001210  54000000	nop; not filled.
  183  00001214          	L18_LF0:
  184  00001214  23bdfff8	addi	r29,r29,#-8
  185  00001218  afa50000	sw	(r29),r5
  186  0000121c  0c00016c	jal	_sem_wait
  187  00001220  54000000	nop; not filled.
  188  00001224  afa50000	sw	(r29),r5
  189  00001228  0c000160	jal	_sem_wait
  190  0000122c  54000000	nop; not filled.
  191  00001230  afa40000	sw	(r29),r4
  192  00001234  0c000160	jal	_sem_signal
  193  00001238  54000000	nop; not filled.
  194  0000123c  afa40000	sw	(r29),r4
  195  00001240  0c000154	jal	_sem_signal
  196  00001244  54000000	nop; not filled.
  197  00001248  afa70000	sw	(r29),r7
  198  0000124c  0c000148	jal	_sem_signal
  199  00001250  54000000	nop; not filled.
  200  00001254  0c0000f8	jal	_getpid
  201  00001258  54000000	nop; not filled.
  202  0000125c  3c090000	lhi	r9,((LC2_LF0)>>16)&0xffff
  203  00001260  25293058	addui	r9,r9,(LC2_LF0)&0xffff
  204  00001264  afa90000	sw	(r29),r9
  205  00001268  afa10004	sw	4(r29),r1
  206  0000126c  0c0000d4	jal	_Printf
  207  00001270  54000000	nop; not filled.
  208  00001274  23bd0008	addi	r29,r29,#8
  209  00001278  20420001	addi	r2,r2,#1
  210  0000127c  0043082a	slt	r1,r2,r3
  211  00001280  1420ff90	bnez	r1,L18_LF0
  212  00001284  54000000	nop; not filled.
  213  00001288          	L16_LF0:
  214  00001288  23bdfff8	addi	r29,r29,#-8
  215  0000128c  afa80000	sw	(r29),r8
  216  00001290  0c000104	jal	_sem_signal
  217  00001294  54000000	nop; not filled.
  218  00001298  23bd0008	addi	r29,r29,#8
  219  0000129c  64210001	snei	r1,r1,#1
  220  000012a0  10200050	beqz	r1,L20_LF0
  221  000012a4  54000000	nop; not filled.
  222  000012a8  23bdfff8	addi	r29,r29,#-8
  223  000012ac  3c090000	lhi	r9,((LC3_LF0)>>16)&0xffff
  224  000012b0  2529307c	addui	r9,r9,(LC3_LF0)&0xffff
  225  000012b4  afa90000	sw	(r29),r9
  226  000012b8  afa80004	sw	4(r29),r8
  227  000012bc  0c000084	jal	_Printf
  228  000012c0  54000000	nop; not filled.
  229  000012c4  8cc60000	lw	r6,(r6)
  230  000012c8  afa60000	sw	(r29),r6
  231  000012cc  0c000074	jal	_Printf
  232  000012d0  54000000	nop; not filled.
  233  000012d4  3c090000	lhi	r9,((LC4_LF0)>>16)&0xffff
  234  000012d8  252930a8	addui	r9,r9,(LC4_LF0)&0xffff
  235  000012dc  afa90000	sw	(r29),r9
  236  000012e0  0c000060	jal	_Printf
  237  000012e4  54000000	nop; not filled.
  238  000012e8  0c000160	jal	_Exit
  239  000012ec  54000000	nop; not filled.
  240  000012f0  23bd0008	addi	r29,r29,#8
  241  000012f4          	L20_LF0:
  242  000012f4  0c000ef0	jal	_exit
  243  000012f8  54000000	nop
  244  000012fc          	.endproc _main
  245                      ;;;
  246                      ;;; Stub functions for DLX traps.
  247                      ;;;
  248                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  249                      ;;;
  250                      ;;; The traps such as Open and Close
  251                      ;;; (note the capital letters) are for use by user programs.  The traps
  252                      ;;; with names such as open and close (lower case) are for use by the OS.
  253                      ;;;
  256  000012fc          	.align 2
  258                      ;;; The following are the traps to be used by user-level programs
  259                      ;;;
  261  000012fc          	.align 2
  262  000012fc          	.proc _Open
  263  000012fc          	.global _Open
  264  000012fc          	_Open:
  265                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  266                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  267                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  268  000012fc  44000213	trap	#0x213
  269  00001300  4be00000	jr	r31
  270  00001304  54000000	nop
  271  00001308          	.endproc _Open
  273  00001308          	.proc _Close
  274  00001308          	.global _Close
  275  00001308          	_Close:
  276  00001308  44000214	trap	#0x214
  277  0000130c  4be00000	jr	r31
  278  00001310  54000000	nop
  279  00001314          	.endproc _Close
  281  00001314          	.proc _Read
  282  00001314          	.global _Read
  283  00001314          	_Read:
  284  00001314  44000210	trap	#0x210
  285  00001318  4be00000	jr	r31
  286  0000131c  54000000	nop
  287  00001320          	.endproc _Read
  289  00001320          	.proc _Write
  290  00001320          	.global _Write
  291  00001320          	_Write:
  292  00001320  44000211	trap	#0x211
  293  00001324  4be00000	jr	r31
  294  00001328  54000000	nop
  295  0000132c          	.endproc _Write
  297  0000132c          	.proc _Lseek
  298  0000132c          	.global _Lseek
  299  0000132c          	_Lseek:
  300  0000132c  44000212	trap	#0x212
  301  00001330  4be00000	jr	r31
  302  00001334  54000000	nop
  303  00001338          	.endproc _Lseek
  305  00001338          	.proc _Putchar
  306  00001338          	.global _Putchar
  307  00001338          	_Putchar:
  308  00001338  44000280	trap	#0x280
  309  0000133c  4be00000	jr	r31
  310  00001340  54000000	nop
  311  00001344          	.endproc _Putchar
  313  00001344          	.proc _Printf
  314  00001344          	.global _Printf
  315  00001344          	_Printf:
  316  00001344  44000201	trap	#0x201
  317  00001348  4be00000	jr	r31
  318  0000134c  54000000	nop
  319  00001350          	.endproc _Printf
  321  00001350          	.proc _getpid
  322  00001350          	.global _getpid
  323  00001350          	_getpid:
  324  00001350  44000431	trap	#0x431
  325  00001354  4be00000	jr	r31
  326  00001358  54000000	nop
  327  0000135c          	.endproc _getpid
  329  0000135c          	.proc _process_create
  330  0000135c          	.global _process_create
  331  0000135c          	_process_create:
  332  0000135c  44000432	trap	#0x432
  333  00001360  4be00000	jr	r31
  334  00001364  54000000	nop
  335  00001368          	.endproc _process_create
  337  00001368          	.proc _shmget
  338  00001368          	.global _shmget
  339  00001368          	_shmget:
  340  00001368  44000440	trap	#0x440
  341  0000136c  4be00000	jr	r31
  342  00001370  54000000	nop
  343  00001374          	.endproc _shmget
  345  00001374          	.proc _shmat
  346  00001374          	.global _shmat
  347  00001374          	_shmat:
  348  00001374  44000441	trap	#0x441
  349  00001378  4be00000	jr	r31
  350  0000137c  54000000	nop
  351  00001380          	.endproc _shmat
  353  00001380          	.proc _sem_create
  354  00001380          	.global _sem_create
  355  00001380          	_sem_create:
  356  00001380  44000450	trap	#0x450
  357  00001384  4be00000	jr	r31
  358  00001388  54000000	nop
  359  0000138c          	.endproc _sem_create
  361  0000138c          	.proc _sem_wait
  362  0000138c          	.global _sem_wait
  363  0000138c          	_sem_wait:
  364  0000138c  44000451	trap	#0x451
  365  00001390  4be00000	jr	r31
  366  00001394  54000000	nop
  367  00001398          	.endproc _sem_wait
  369  00001398          	.proc _sem_signal
  370  00001398          	.global _sem_signal
  371  00001398          	_sem_signal:
  372  00001398  44000452	trap	#0x452
  373  0000139c  4be00000	jr	r31
  374  000013a0  54000000	nop
  375  000013a4          	.endproc _sem_signal
  377  000013a4          	.proc _lock_create
  378  000013a4          	.global _lock_create
  379  000013a4          	_lock_create:
  380  000013a4  44000453	trap	#0x453
  381  000013a8  4be00000	jr	r31
  382  000013ac  54000000	nop
  383  000013b0          	.endproc _lock_create
  385  000013b0          	.proc _lock_acquire
  386  000013b0          	.global _lock_acquire
  387  000013b0          	_lock_acquire:
  388  000013b0  44000454	trap	#0x454
  389  000013b4  4be00000	jr	r31
  390  000013b8  54000000	nop
  391  000013bc          	.endproc _lock_acquire
  393  000013bc          	.proc _lock_release
  394  000013bc          	.global _lock_release
  395  000013bc          	_lock_release:
  396  000013bc  44000455	trap	#0x455
  397  000013c0  4be00000	jr	r31
  398  000013c4  54000000	nop
  399  000013c8          	.endproc _lock_release
  401  000013c8          	.proc _cond_create
  402  000013c8          	.global _cond_create
  403  000013c8          	_cond_create:
  404  000013c8  44000456	trap	#0x456
  405  000013cc  4be00000	jr	r31
  406  000013d0  54000000	nop
  407  000013d4          	.endproc _cond_create
  409  000013d4          	.proc _cond_wait
  410  000013d4          	.global _cond_wait
  411  000013d4          	_cond_wait:
  412  000013d4  44000457	trap	#0x457
  413  000013d8  4be00000	jr	r31
  414  000013dc  54000000	nop
  415  000013e0          	.endproc _cond_wait
  417  000013e0          	.proc _cond_signal
  418  000013e0          	.global _cond_signal
  419  000013e0          	_cond_signal:
  420  000013e0  44000458	trap	#0x458
  421  000013e4  4be00000	jr	r31
  422  000013e8  54000000	nop
  423  000013ec          	.endproc _cond_signal
  425  000013ec          	.proc _cond_broadcast
  426  000013ec          	.global _cond_broadcast
  427  000013ec          	_cond_broadcast:
  428  000013ec  44000459	trap	#0x459
  429  000013f0  4be00000	jr	r31
  430  000013f4  54000000	nop
  431  000013f8          	.endproc _cond_broadcast
  433  000013f8          	.proc _mbox_create
  434  000013f8          	.global _mbox_create
  435  000013f8          	_mbox_create:
  436  000013f8  44000460	trap	#0x460
  437  000013fc  4be00000	jr	r31
  438  00001400  54000000	nop
  439  00001404          	.endproc _mbox_create
  441  00001404          	.proc _mbox_open
  442  00001404          	.global _mbox_open
  443  00001404          	_mbox_open:
  444  00001404  44000461	trap	#0x461
  445  00001408  4be00000	jr	r31
  446  0000140c  54000000	nop
  447  00001410          	.endproc _mbox_open
  449  00001410          	.proc _mbox_close
  450  00001410          	.global _mbox_close
  451  00001410          	_mbox_close:
  452  00001410  44000462	trap	#0x462
  453  00001414  4be00000	jr	r31
  454  00001418  54000000	nop
  455  0000141c          	.endproc _mbox_close
  457  0000141c          	.proc _mbox_send
  458  0000141c          	.global _mbox_send
  459  0000141c          	_mbox_send:
  460  0000141c  44000463	trap	#0x463
  461  00001420  4be00000	jr	r31
  462  00001424  54000000	nop
  463  00001428          	.endproc _mbox_send
  465  00001428          	.proc _mbox_recv
  466  00001428          	.global _mbox_recv
  467  00001428          	_mbox_recv:
  468  00001428  44000464	trap	#0x464
  469  0000142c  4be00000	jr	r31
  470  00001430  54000000	nop
  471  00001434          	.endproc _mbox_recv
  473  00001434          	.proc _sleep
  474  00001434          	.global _sleep
  475  00001434          	_sleep:
  476  00001434  44000465	trap	#0x465
  477  00001438  4be00000	jr	r31
  478  0000143c  54000000	nop
  479  00001440          	.endproc _sleep
  481  00001440          	.proc _yield
  482  00001440          	.global _yield
  483  00001440          	_yield:
  484  00001440  44000466	trap	#0x466
  485  00001444  4be00000	jr	r31
  486  00001448  54000000	nop
  487  0000144c          	.endproc _yield
  490  0000144c          	.proc _Exit
  491  0000144c          	.global _Exit
  492  0000144c          	_Exit:
  493  0000144c  44000500	trap	#0x500
  494  00001450  4be00000	jr	r31
  495  00001454  54000000	nop
  496  00001458          	.endproc _Exit
  497                      ; Compiled by GCC
  499  00001458          	.align 2
  500  00001458          	.proc _isspace
  501  00001458          	.global _isspace
  502  00001458          	_isspace:
  503                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  504  00001458  afbefffc	sw	-4(r29),r30; push fp
  505  0000145c  001df020	add	r30,r0,r29; fp = sp
  506  00001460  afbffff8	sw	-8(r29),r31; push ret addr
  507  00001464  2fbd0018	subui	r29,r29,#24; alloc local storage
  508  00001468  afa20000	sw	0(r29),r2
  509  0000146c  afa30004	sw	4(r29),r3
  510  00001470  afa40008	sw	8(r29),r4
  511  00001474  83c20003	lb	r2,3(r30)
  512  00001478  20010000	addi	r1,r0,#0
  513  0000147c  304300ff	andi	r3,r2,#0x00ff
  514  00001480  60640020	seqi	r4,r3,#32
  515  00001484  1480002c	bnez	r4,L3_LF2
  516  00001488  54000000	nop; delay slot nop
  517  0000148c  304300ff	andi	r3,r2,#0x00ff
  518  00001490  60640009	seqi	r4,r3,#9
  519  00001494  1480001c	bnez	r4,L3_LF2
  520  00001498  54000000	nop; delay slot nop
  521  0000149c  304300ff	andi	r3,r2,#0x00ff
  522  000014a0  6064000a	seqi	r4,r3,#10
  523  000014a4  1480000c	bnez	r4,L3_LF2
  524  000014a8  54000000	nop; delay slot nop
  525  000014ac  08000008	j	L2_LF2
  526  000014b0  54000000	nop; delay slot nop
  527  000014b4          	L3_LF2:
  528  000014b4  20010001	addi	r1,r0,#1
  529  000014b8          	L2_LF2:
  530  000014b8  08000004	j	L1_LF2
  531  000014bc  54000000	nop; delay slot nop
  532  000014c0          	L1_LF2:
  533  000014c0  8fa20000	lw	r2,0(r29)
  534  000014c4  8fa30004	lw	r3,4(r29)
  535  000014c8  8fa40008	lw	r4,8(r29)
  536  000014cc  8fdffff8	lw	r31,-8(r30)
  537  000014d0  001ee820	add	r29,r0,r30
  538  000014d4  8fdefffc	lw	r30,-4(r30)
  539  000014d8  4be00000	jr	r31
  540  000014dc  54000000	nop
  541  000014e0          	.endproc _isspace
  542  000014e0          	.align 2
  543  000014e0          	.proc _isxdigit
  544  000014e0          	.global _isxdigit
  545  000014e0          	_isxdigit:
  546                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  547  000014e0  afbefffc	sw	-4(r29),r30; push fp
  548  000014e4  001df020	add	r30,r0,r29; fp = sp
  549  000014e8  afbffff8	sw	-8(r29),r31; push ret addr
  550  000014ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  551  000014f0  afa20000	sw	0(r29),r2
  552  000014f4  afa30004	sw	4(r29),r3
  553  000014f8  afa40008	sw	8(r29),r4
  554  000014fc  83c20003	lb	r2,3(r30)
  555  00001500  20010000	addi	r1,r0,#0
  556  00001504  304300ff	andi	r3,r2,#0x00ff
  557  00001508  6c64002f	sgtui	r4,r3,#47
  558  0000150c  1080001c	beqz	r4,L7_LF2
  559  00001510  54000000	nop; delay slot nop
  560  00001514  304300ff	andi	r3,r2,#0x00ff
  561  00001518  70640039	sleui	r4,r3,#57
  562  0000151c  1480005c	bnez	r4,L6_LF2
  563  00001520  54000000	nop; delay slot nop
  564  00001524  08000004	j	L7_LF2
  565  00001528  54000000	nop; delay slot nop
  566  0000152c          	L7_LF2:
  567  0000152c  304300ff	andi	r3,r2,#0x00ff
  568  00001530  6c640060	sgtui	r4,r3,#96
  569  00001534  1080001c	beqz	r4,L8_LF2
  570  00001538  54000000	nop; delay slot nop
  571  0000153c  304300ff	andi	r3,r2,#0x00ff
  572  00001540  70640066	sleui	r4,r3,#102
  573  00001544  14800034	bnez	r4,L6_LF2
  574  00001548  54000000	nop; delay slot nop
  575  0000154c  08000004	j	L8_LF2
  576  00001550  54000000	nop; delay slot nop
  577  00001554          	L8_LF2:
  578  00001554  304300ff	andi	r3,r2,#0x00ff
  579  00001558  6c640040	sgtui	r4,r3,#64
  580  0000155c  10800020	beqz	r4,L5_LF2
  581  00001560  54000000	nop; delay slot nop
  582  00001564  304300ff	andi	r3,r2,#0x00ff
  583  00001568  70640041	sleui	r4,r3,#65
  584  0000156c  1480000c	bnez	r4,L6_LF2
  585  00001570  54000000	nop; delay slot nop
  586  00001574  08000008	j	L5_LF2
  587  00001578  54000000	nop; delay slot nop
  588  0000157c          	L6_LF2:
  589  0000157c  20010001	addi	r1,r0,#1
  590  00001580          	L5_LF2:
  591  00001580  08000004	j	L4_LF2
  592  00001584  54000000	nop; delay slot nop
  593  00001588          	L4_LF2:
  594  00001588  8fa20000	lw	r2,0(r29)
  595  0000158c  8fa30004	lw	r3,4(r29)
  596  00001590  8fa40008	lw	r4,8(r29)
  597  00001594  8fdffff8	lw	r31,-8(r30)
  598  00001598  001ee820	add	r29,r0,r30
  599  0000159c  8fdefffc	lw	r30,-4(r30)
  600  000015a0  4be00000	jr	r31
  601  000015a4  54000000	nop
  602  000015a8          	.endproc _isxdigit
  603  000015a8          	.align 2
  604  000015a8          	.proc _dstrcpy
  605  000015a8          	.global _dstrcpy
  606  000015a8          	_dstrcpy:
  607                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  608  000015a8  afbefffc	sw	-4(r29),r30; push fp
  609  000015ac  001df020	add	r30,r0,r29; fp = sp
  610  000015b0  afbffff8	sw	-8(r29),r31; push ret addr
  611  000015b4  2fbd0018	subui	r29,r29,#24; alloc local storage
  612  000015b8  afa20000	sw	0(r29),r2
  613  000015bc  afa30004	sw	4(r29),r3
  614  000015c0  8fc10000	lw	r1,(r30)
  615  000015c4  afc1fff4	sw	-12(r30),r1
  616  000015c8          	L10_LF2:
  617  000015c8  8fc10000	lw	r1,(r30)
  618  000015cc  20220001	addi	r2,r1,#1
  619  000015d0  afc20000	sw	(r30),r2
  620  000015d4  8fc20004	lw	r2,4(r30)
  621  000015d8  20430001	addi	r3,r2,#1
  622  000015dc  afc30004	sw	4(r30),r3
  623  000015e0  80420000	lb	r2,(r2)
  624  000015e4  a0220000	sb	(r1),r2
  625  000015e8  a3c2fff3	sb	-13(r30),r2
  626  000015ec          	L12_LF2:
  627  000015ec  93c1fff3	lbu	r1,-13(r30)
  628  000015f0  64220000	snei	r2,r1,#0
  629  000015f4  1440000c	bnez	r2,L13_LF2
  630  000015f8  54000000	nop; delay slot nop
  631  000015fc  0800000c	j	L11_LF2
  632  00001600  54000000	nop; delay slot nop
  633  00001604          	L13_LF2:
  634  00001604  0bffffc0	j	L10_LF2
  635  00001608  54000000	nop; delay slot nop
  636  0000160c          	L11_LF2:
  637  0000160c  8fc1fff4	lw	r1,-12(r30)
  638  00001610  08000004	j	L9_LF2
  639  00001614  54000000	nop; delay slot nop
  640  00001618          	L9_LF2:
  641  00001618  8fa20000	lw	r2,0(r29)
  642  0000161c  8fa30004	lw	r3,4(r29)
  643  00001620  8fdffff8	lw	r31,-8(r30)
  644  00001624  001ee820	add	r29,r0,r30
  645  00001628  8fdefffc	lw	r30,-4(r30)
  646  0000162c  4be00000	jr	r31
  647  00001630  54000000	nop
  648  00001634          	.endproc _dstrcpy
  649  00001634          	.align 2
  650  00001634          	.proc _dstrncpy
  651  00001634          	.global _dstrncpy
  652  00001634          	_dstrncpy:
  653                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  654  00001634  afbefffc	sw	-4(r29),r30; push fp
  655  00001638  001df020	add	r30,r0,r29; fp = sp
  656  0000163c  afbffff8	sw	-8(r29),r31; push ret addr
  657  00001640  2fbd0018	subui	r29,r29,#24; alloc local storage
  658  00001644  afa20000	sw	0(r29),r2
  659  00001648  afa30004	sw	4(r29),r3
  660  0000164c  8fc10000	lw	r1,(r30)
  661  00001650  afc1fff4	sw	-12(r30),r1
  662  00001654          	L15_LF2:
  663  00001654  8fc10008	lw	r1,8(r30)
  664  00001658  2022ffff	addi	r2,r1,#-1
  665  0000165c  afc20008	sw	8(r30),r2
  666  00001660  70210000	slei	r1,r1,#0
  667  00001664  1020000c	beqz	r1,L18_LF2
  668  00001668  54000000	nop; delay slot nop
  669  0000166c  08000048	j	L16_LF2
  670  00001670  54000000	nop; delay slot nop
  671  00001674          	L18_LF2:
  672  00001674  8fc10000	lw	r1,(r30)
  673  00001678  20220001	addi	r2,r1,#1
  674  0000167c  afc20000	sw	(r30),r2
  675  00001680  8fc20004	lw	r2,4(r30)
  676  00001684  20430001	addi	r3,r2,#1
  677  00001688  afc30004	sw	4(r30),r3
  678  0000168c  80420000	lb	r2,(r2)
  679  00001690  a0220000	sb	(r1),r2
  680  00001694  a3c2fff3	sb	-13(r30),r2
  681  00001698          	L17_LF2:
  682  00001698  93c1fff3	lbu	r1,-13(r30)
  683  0000169c  64220000	snei	r2,r1,#0
  684  000016a0  1440000c	bnez	r2,L19_LF2
  685  000016a4  54000000	nop; delay slot nop
  686  000016a8  0800000c	j	L16_LF2
  687  000016ac  54000000	nop; delay slot nop
  688  000016b0          	L19_LF2:
  689  000016b0  0bffffa0	j	L15_LF2
  690  000016b4  54000000	nop; delay slot nop
  691  000016b8          	L16_LF2:
  692  000016b8  8fc1fff4	lw	r1,-12(r30)
  693  000016bc  08000004	j	L14_LF2
  694  000016c0  54000000	nop; delay slot nop
  695  000016c4          	L14_LF2:
  696  000016c4  8fa20000	lw	r2,0(r29)
  697  000016c8  8fa30004	lw	r3,4(r29)
  698  000016cc  8fdffff8	lw	r31,-8(r30)
  699  000016d0  001ee820	add	r29,r0,r30
  700  000016d4  8fdefffc	lw	r30,-4(r30)
  701  000016d8  4be00000	jr	r31
  702  000016dc  54000000	nop
  703  000016e0          	.endproc _dstrncpy
  704  000016e0          	.align 2
  705  000016e0          	.proc _dstrcat
  706  000016e0          	.global _dstrcat
  707  000016e0          	_dstrcat:
  708                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  709  000016e0  afbefffc	sw	-4(r29),r30; push fp
  710  000016e4  001df020	add	r30,r0,r29; fp = sp
  711  000016e8  afbffff8	sw	-8(r29),r31; push ret addr
  712  000016ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  713  000016f0  afa20000	sw	0(r29),r2
  714  000016f4  8fc10000	lw	r1,(r30)
  715  000016f8  afc1fff4	sw	-12(r30),r1
  716  000016fc          	L21_LF2:
  717  000016fc  8fc10000	lw	r1,(r30)
  718  00001700  90220000	lbu	r2,(r1)
  719  00001704  64410000	snei	r1,r2,#0
  720  00001708  1420000c	bnez	r1,L23_LF2
  721  0000170c  54000000	nop; delay slot nop
  722  00001710  0800001c	j	L22_LF2
  723  00001714  54000000	nop; delay slot nop
  724  00001718          	L23_LF2:
  725  00001718  8fc20000	lw	r2,(r30)
  726  0000171c  20410001	addi	r1,r2,#1
  727  00001720  00011020	add	r2,r0,r1
  728  00001724  afc20000	sw	(r30),r2
  729  00001728  0bffffd0	j	L21_LF2
  730  0000172c  54000000	nop; delay slot nop
  731  00001730          	L22_LF2:
  732  00001730  23bdfff8	addi	r29,r29,#-8
  733  00001734  001d0820	add	r1,r0,r29
  734  00001738  8fc20000	lw	r2,(r30)
  735  0000173c  ac220000	sw	(r1),r2
  736  00001740  8fc20004	lw	r2,4(r30)
  737  00001744  ac220004	sw	4(r1),r2
  738  00001748  0ffffe5c	jal	_dstrcpy
  739  0000174c  54000000	nop; delay slot nop
  740  00001750  23bd0008	addi	r29,r29,#8
  741  00001754  8fc1fff4	lw	r1,-12(r30)
  742  00001758  08000004	j	L20_LF2
  743  0000175c  54000000	nop; delay slot nop
  744  00001760          	L20_LF2:
  745  00001760  8fa20000	lw	r2,0(r29)
  746  00001764  8fdffff8	lw	r31,-8(r30)
  747  00001768  001ee820	add	r29,r0,r30
  748  0000176c  8fdefffc	lw	r30,-4(r30)
  749  00001770  4be00000	jr	r31
  750  00001774  54000000	nop
  751  00001778          	.endproc _dstrcat
  752  00001778          	.align 2
  753  00001778          	.proc _dstrncmp
  754  00001778          	.global _dstrncmp
  755  00001778          	_dstrncmp:
  756                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  757  00001778  afbefffc	sw	-4(r29),r30; push fp
  758  0000177c  001df020	add	r30,r0,r29; fp = sp
  759  00001780  afbffff8	sw	-8(r29),r31; push ret addr
  760  00001784  2fbd0018	subui	r29,r29,#24; alloc local storage
  761  00001788  afa20000	sw	0(r29),r2
  762  0000178c  afa30004	sw	4(r29),r3
  763  00001790  54000000	nop
  764  00001794  20010000	addi	r1,r0,#0
  765  00001798  afc1fff4	sw	-12(r30),r1
  766  0000179c          	L25_LF2:
  767  0000179c  8fc1fff4	lw	r1,-12(r30)
  768  000017a0  8fc20008	lw	r2,8(r30)
  769  000017a4  0022082a	slt	r1,r1,r2
  770  000017a8  1420000c	bnez	r1,L28_LF2
  771  000017ac  54000000	nop; delay slot nop
  772  000017b0  08000088	j	L26_LF2
  773  000017b4  54000000	nop; delay slot nop
  774  000017b8          	L28_LF2:
  775  000017b8  8fc10004	lw	r1,4(r30)
  776  000017bc  90220000	lbu	r2,(r1)
  777  000017c0  64410000	snei	r1,r2,#0
  778  000017c4  14200018	bnez	r1,L29_LF2
  779  000017c8  54000000	nop; delay slot nop
  780  000017cc  20010000	addi	r1,r0,#0
  781  000017d0  080000d8	j	L24_LF2
  782  000017d4  54000000	nop; delay slot nop
  783  000017d8  08000028	j	L30_LF2
  784  000017dc  54000000	nop; delay slot nop
  785  000017e0          	L29_LF2:
  786  000017e0  8fc10000	lw	r1,(r30)
  787  000017e4  8fc20004	lw	r2,4(r30)
  788  000017e8  90210000	lbu	r1,(r1)
  789  000017ec  90420000	lbu	r2,(r2)
  790  000017f0  00220829	sne	r1,r1,r2
  791  000017f4  1020000c	beqz	r1,L30_LF2
  792  000017f8  54000000	nop; delay slot nop
  793  000017fc  0800003c	j	L26_LF2
  794  00001800  54000000	nop; delay slot nop
  795  00001804          	L31_LF2:
  796  00001804          	L30_LF2:
  797  00001804  8fc20000	lw	r2,(r30)
  798  00001808  20410001	addi	r1,r2,#1
  799  0000180c  00011020	add	r2,r0,r1
  800  00001810  afc20000	sw	(r30),r2
  801  00001814  8fc20004	lw	r2,4(r30)
  802  00001818  20410001	addi	r1,r2,#1
  803  0000181c  00011020	add	r2,r0,r1
  804  00001820  afc20004	sw	4(r30),r2
  805  00001824          	L27_LF2:
  806  00001824  8fc2fff4	lw	r2,-12(r30)
  807  00001828  20410001	addi	r1,r2,#1
  808  0000182c  00011020	add	r2,r0,r1
  809  00001830  afc2fff4	sw	-12(r30),r2
  810  00001834  0bffff64	j	L25_LF2
  811  00001838  54000000	nop; delay slot nop
  812  0000183c          	L26_LF2:
  813  0000183c  8fc1fff4	lw	r1,-12(r30)
  814  00001840  8fc20008	lw	r2,8(r30)
  815  00001844  00220828	seq	r1,r1,r2
  816  00001848  10200018	beqz	r1,L32_LF2
  817  0000184c  54000000	nop; delay slot nop
  818  00001850  20010000	addi	r1,r0,#0
  819  00001854  08000054	j	L24_LF2
  820  00001858  54000000	nop; delay slot nop
  821  0000185c  0800004c	j	L33_LF2
  822  00001860  54000000	nop; delay slot nop
  823  00001864          	L32_LF2:
  824  00001864  8fc20000	lw	r2,(r30)
  825  00001868  90410000	lbu	r1,(r2)
  826  0000186c  8fc20004	lw	r2,4(r30)
  827  00001870  90430000	lbu	r3,(r2)
  828  00001874  00230822	sub	r1,r1,r3
  829  00001878  74220000	sgei	r2,r1,#0
  830  0000187c  10400020	beqz	r2,L34_LF2
  831  00001880  54000000	nop; delay slot nop
  832  00001884  8fc10000	lw	r1,(r30)
  833  00001888  8fc20004	lw	r2,4(r30)
  834  0000188c  90210000	lbu	r1,(r1)
  835  00001890  90420000	lbu	r2,(r2)
  836  00001894  00220829	sne	r1,r1,r2
  837  00001898  08000008	j	L35_LF2
  838  0000189c  54000000	nop; delay slot nop
  839  000018a0          	L34_LF2:
  840  000018a0  2001ffff	addi	r1,r0,#-1
  841  000018a4          	L35_LF2:
  842  000018a4  08000004	j	L24_LF2
  843  000018a8  54000000	nop; delay slot nop
  844  000018ac          	L33_LF2:
  845  000018ac          	L24_LF2:
  846  000018ac  8fa20000	lw	r2,0(r29)
  847  000018b0  8fa30004	lw	r3,4(r29)
  848  000018b4  8fdffff8	lw	r31,-8(r30)
  849  000018b8  001ee820	add	r29,r0,r30
  850  000018bc  8fdefffc	lw	r30,-4(r30)
  851  000018c0  4be00000	jr	r31
  852  000018c4  54000000	nop
  853  000018c8          	.endproc _dstrncmp
  854  000018c8          	.align 2
  855  000018c8          	.proc _dstrlen
  856  000018c8          	.global _dstrlen
  857  000018c8          	_dstrlen:
  858                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  859  000018c8  afbefffc	sw	-4(r29),r30; push fp
  860  000018cc  001df020	add	r30,r0,r29; fp = sp
  861  000018d0  afbffff8	sw	-8(r29),r31; push ret addr
  862  000018d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  863  000018d8  afa20000	sw	0(r29),r2
  864  000018dc  20010000	addi	r1,r0,#0
  865  000018e0  afc1fff4	sw	-12(r30),r1
  866  000018e4          	L37_LF2:
  867  000018e4  8fc10000	lw	r1,(r30)
  868  000018e8  20220001	addi	r2,r1,#1
  869  000018ec  afc20000	sw	(r30),r2
  870  000018f0  90210000	lbu	r1,(r1)
  871  000018f4  64220000	snei	r2,r1,#0
  872  000018f8  1440000c	bnez	r2,L39_LF2
  873  000018fc  54000000	nop; delay slot nop
  874  00001900  0800001c	j	L38_LF2
  875  00001904  54000000	nop; delay slot nop
  876  00001908          	L39_LF2:
  877  00001908  8fc2fff4	lw	r2,-12(r30)
  878  0000190c  20410001	addi	r1,r2,#1
  879  00001910  00011020	add	r2,r0,r1
  880  00001914  afc2fff4	sw	-12(r30),r2
  881  00001918  0bffffc8	j	L37_LF2
  882  0000191c  54000000	nop; delay slot nop
  883  00001920          	L38_LF2:
  884  00001920  8fc1fff4	lw	r1,-12(r30)
  885  00001924  08000004	j	L36_LF2
  886  00001928  54000000	nop; delay slot nop
  887  0000192c          	L36_LF2:
  888  0000192c  8fa20000	lw	r2,0(r29)
  889  00001930  8fdffff8	lw	r31,-8(r30)
  890  00001934  001ee820	add	r29,r0,r30
  891  00001938  8fdefffc	lw	r30,-4(r30)
  892  0000193c  4be00000	jr	r31
  893  00001940  54000000	nop
  894  00001944          	.endproc _dstrlen
  895  00001944          	.align 2
  896  00001944          	.proc _dstrstr
  897  00001944          	.global _dstrstr
  898  00001944          	_dstrstr:
  899                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  900  00001944  afbefffc	sw	-4(r29),r30; push fp
  901  00001948  001df020	add	r30,r0,r29; fp = sp
  902  0000194c  afbffff8	sw	-8(r29),r31; push ret addr
  903  00001950  2fbd0018	subui	r29,r29,#24; alloc local storage
  904  00001954  afa20000	sw	0(r29),r2
  905  00001958  23bdfff8	addi	r29,r29,#-8
  906  0000195c  001d0820	add	r1,r0,r29
  907  00001960  8fc20004	lw	r2,4(r30)
  908  00001964  ac220000	sw	(r1),r2
  909  00001968  0fffff5c	jal	_dstrlen
  910  0000196c  54000000	nop; delay slot nop
  911  00001970  23bd0008	addi	r29,r29,#8
  912  00001974  afc1fff4	sw	-12(r30),r1
  913  00001978          	L41_LF2:
  914  00001978  8fc10000	lw	r1,(r30)
  915  0000197c  90220000	lbu	r2,(r1)
  916  00001980  64410000	snei	r1,r2,#0
  917  00001984  1420000c	bnez	r1,L43_LF2
  918  00001988  54000000	nop; delay slot nop
  919  0000198c  08000060	j	L42_LF2
  920  00001990  54000000	nop; delay slot nop
  921  00001994          	L43_LF2:
  922  00001994  23bdfff0	addi	r29,r29,#-16
  923  00001998  001d0820	add	r1,r0,r29
  924  0000199c  8fc20000	lw	r2,(r30)
  925  000019a0  ac220000	sw	(r1),r2
  926  000019a4  8fc20004	lw	r2,4(r30)
  927  000019a8  ac220004	sw	4(r1),r2
  928  000019ac  8fc2fff4	lw	r2,-12(r30)
  929  000019b0  ac220008	sw	8(r1),r2
  930  000019b4  0ffffdc0	jal	_dstrncmp
  931  000019b8  54000000	nop; delay slot nop
  932  000019bc  23bd0010	addi	r29,r29,#16
  933  000019c0  64220000	snei	r2,r1,#0
  934  000019c4  14400010	bnez	r2,L44_LF2
  935  000019c8  54000000	nop; delay slot nop
  936  000019cc  8fc10000	lw	r1,(r30)
  937  000019d0  08000028	j	L40_LF2
  938  000019d4  54000000	nop; delay slot nop
  939  000019d8          	L44_LF2:
  940  000019d8  8fc20000	lw	r2,(r30)
  941  000019dc  20410001	addi	r1,r2,#1
  942  000019e0  00011020	add	r2,r0,r1
  943  000019e4  afc20000	sw	(r30),r2
  944  000019e8  0bffff8c	j	L41_LF2
  945  000019ec  54000000	nop; delay slot nop
  946  000019f0          	L42_LF2:
  947  000019f0  20010000	addi	r1,r0,#0
  948  000019f4  08000004	j	L40_LF2
  949  000019f8  54000000	nop; delay slot nop
  950  000019fc          	L40_LF2:
  951  000019fc  8fa20000	lw	r2,0(r29)
  952  00001a00  8fdffff8	lw	r31,-8(r30)
  953  00001a04  001ee820	add	r29,r0,r30
  954  00001a08  8fdefffc	lw	r30,-4(r30)
  955  00001a0c  4be00000	jr	r31
  956  00001a10  54000000	nop
  957  00001a14          	.endproc _dstrstr
  958  00001a14          	.align 2
  959  00001a14          	.proc _dmindex
  960  00001a14          	.global _dmindex
  961  00001a14          	_dmindex:
  962                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  963  00001a14  afbefffc	sw	-4(r29),r30; push fp
  964  00001a18  001df020	add	r30,r0,r29; fp = sp
  965  00001a1c  afbffff8	sw	-8(r29),r31; push ret addr
  966  00001a20  2fbd0018	subui	r29,r29,#24; alloc local storage
  967  00001a24  afa20000	sw	0(r29),r2
  968  00001a28  54000000	nop
  969  00001a2c          	L46_LF2:
  970  00001a2c  8fc10000	lw	r1,(r30)
  971  00001a30  90220000	lbu	r2,(r1)
  972  00001a34  64410000	snei	r1,r2,#0
  973  00001a38  1420000c	bnez	r1,L48_LF2
  974  00001a3c  54000000	nop; delay slot nop
  975  00001a40  08000070	j	L47_LF2
  976  00001a44  54000000	nop; delay slot nop
  977  00001a48          	L48_LF2:
  978  00001a48  8fc10004	lw	r1,4(r30)
  979  00001a4c  afc1fff4	sw	-12(r30),r1
  980  00001a50          	L49_LF2:
  981  00001a50  8fc1fff4	lw	r1,-12(r30)
  982  00001a54  90220000	lbu	r2,(r1)
  983  00001a58  64410000	snei	r1,r2,#0
  984  00001a5c  1420000c	bnez	r1,L52_LF2
  985  00001a60  54000000	nop; delay slot nop
  986  00001a64  08000044	j	L50_LF2
  987  00001a68  54000000	nop; delay slot nop
  988  00001a6c          	L52_LF2:
  989  00001a6c  8fc10000	lw	r1,(r30)
  990  00001a70  8fc2fff4	lw	r2,-12(r30)
  991  00001a74  90210000	lbu	r1,(r1)
  992  00001a78  90420000	lbu	r2,(r2)
  993  00001a7c  00220828	seq	r1,r1,r2
  994  00001a80  10200010	beqz	r1,L51_LF2
  995  00001a84  54000000	nop; delay slot nop
  996  00001a88  8fc10000	lw	r1,(r30)
  997  00001a8c  08000030	j	L45_LF2
  998  00001a90  54000000	nop; delay slot nop
  999  00001a94          	L53_LF2:
 1000  00001a94          	L51_LF2:
 1001  00001a94  8fc2fff4	lw	r2,-12(r30)
 1002  00001a98  20410001	addi	r1,r2,#1
 1003  00001a9c  00011020	add	r2,r0,r1
 1004  00001aa0  afc2fff4	sw	-12(r30),r2
 1005  00001aa4  0bffffa8	j	L49_LF2
 1006  00001aa8  54000000	nop; delay slot nop
 1007  00001aac          	L50_LF2:
 1008  00001aac  0bffff7c	j	L46_LF2
 1009  00001ab0  54000000	nop; delay slot nop
 1010  00001ab4          	L47_LF2:
 1011  00001ab4  20010000	addi	r1,r0,#0
 1012  00001ab8  08000004	j	L45_LF2
 1013  00001abc  54000000	nop; delay slot nop
 1014  00001ac0          	L45_LF2:
 1015  00001ac0  8fa20000	lw	r2,0(r29)
 1016  00001ac4  8fdffff8	lw	r31,-8(r30)
 1017  00001ac8  001ee820	add	r29,r0,r30
 1018  00001acc  8fdefffc	lw	r30,-4(r30)
 1019  00001ad0  4be00000	jr	r31
 1020  00001ad4  54000000	nop
 1021  00001ad8          	.endproc _dmindex
 1022  00001ad8          	.align 2
 1023  00001ad8          	.proc _dindex
 1024  00001ad8          	.global _dindex
 1025  00001ad8          	_dindex:
 1026                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1027  00001ad8  afbefffc	sw	-4(r29),r30; push fp
 1028  00001adc  001df020	add	r30,r0,r29; fp = sp
 1029  00001ae0  afbffff8	sw	-8(r29),r31; push ret addr
 1030  00001ae4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1031  00001ae8  afa20000	sw	0(r29),r2
 1032  00001aec  54000000	nop
 1033  00001af0          	L55_LF2:
 1034  00001af0  8fc10000	lw	r1,(r30)
 1035  00001af4  90220000	lbu	r2,(r1)
 1036  00001af8  64410000	snei	r1,r2,#0
 1037  00001afc  1420000c	bnez	r1,L57_LF2
 1038  00001b00  54000000	nop; delay slot nop
 1039  00001b04  08000040	j	L56_LF2
 1040  00001b08  54000000	nop; delay slot nop
 1041  00001b0c          	L57_LF2:
 1042  00001b0c  8fc10000	lw	r1,(r30)
 1043  00001b10  90220000	lbu	r2,(r1)
 1044  00001b14  8fc10004	lw	r1,4(r30)
 1045  00001b18  00411028	seq	r2,r2,r1
 1046  00001b1c  10400010	beqz	r2,L58_LF2
 1047  00001b20  54000000	nop; delay slot nop
 1048  00001b24  8fc10000	lw	r1,(r30)
 1049  00001b28  08000028	j	L54_LF2
 1050  00001b2c  54000000	nop; delay slot nop
 1051  00001b30          	L58_LF2:
 1052  00001b30  8fc20000	lw	r2,(r30)
 1053  00001b34  20410001	addi	r1,r2,#1
 1054  00001b38  00011020	add	r2,r0,r1
 1055  00001b3c  afc20000	sw	(r30),r2
 1056  00001b40  0bffffac	j	L55_LF2
 1057  00001b44  54000000	nop; delay slot nop
 1058  00001b48          	L56_LF2:
 1059  00001b48  20010000	addi	r1,r0,#0
 1060  00001b4c  08000004	j	L54_LF2
 1061  00001b50  54000000	nop; delay slot nop
 1062  00001b54          	L54_LF2:
 1063  00001b54  8fa20000	lw	r2,0(r29)
 1064  00001b58  8fdffff8	lw	r31,-8(r30)
 1065  00001b5c  001ee820	add	r29,r0,r30
 1066  00001b60  8fdefffc	lw	r30,-4(r30)
 1067  00001b64  4be00000	jr	r31
 1068  00001b68  54000000	nop
 1069  00001b6c          	.endproc _dindex
 1070  00001b6c          	.align 2
 1071  00001b6c          	.proc _ditoa
 1072  00001b6c          	.global _ditoa
 1073  00001b6c          	_ditoa:
 1074                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1075  00001b6c  afbefffc	sw	-4(r29),r30; push fp
 1076  00001b70  001df020	add	r30,r0,r29; fp = sp
 1077  00001b74  afbffff8	sw	-8(r29),r31; push ret addr
 1078  00001b78  2fbd0018	subui	r29,r29,#24; alloc local storage
 1079  00001b7c  afa20000	sw	0(r29),r2
 1080  00001b80  afa30004	sw	4(r29),r3
 1081  00001b84  8fc10000	lw	r1,(r30)
 1082  00001b88  68220000	slti	r2,r1,#0
 1083  00001b8c  1040002c	beqz	r2,L60_LF2
 1084  00001b90  54000000	nop; delay slot nop
 1085  00001b94  8fc10004	lw	r1,4(r30)
 1086  00001b98  20220001	addi	r2,r1,#1
 1087  00001b9c  afc20004	sw	4(r30),r2
 1088  00001ba0  2002002d	addi	r2,r0,(#0x2d)&0xff
 1089  00001ba4  a0220000	sb	(r1),r2
 1090  00001ba8  8fc10000	lw	r1,(r30)
 1091  00001bac  00011022	sub	r2,r0,r1
 1092  00001bb0  afc20000	sw	(r30),r2
 1093  00001bb4  08000118	j	L61_LF2
 1094  00001bb8  54000000	nop; delay slot nop
 1095  00001bbc          	L60_LF2:
 1096  00001bbc  8fc10000	lw	r1,(r30)
 1097  00001bc0  64220000	snei	r2,r1,#0
 1098  00001bc4  14400020	bnez	r2,L62_LF2
 1099  00001bc8  54000000	nop; delay slot nop
 1100  00001bcc  8fc10004	lw	r1,4(r30)
 1101  00001bd0  20220001	addi	r2,r1,#1
 1102  00001bd4  afc20004	sw	4(r30),r2
 1103  00001bd8  20020030	addi	r2,r0,(#0x30)&0xff
 1104  00001bdc  a0220000	sb	(r1),r2
 1105  00001be0  080000ec	j	L61_LF2
 1106  00001be4  54000000	nop; delay slot nop
 1107  00001be8          	L62_LF2:
 1108  00001be8  20010001	addi	r1,r0,#1
 1109  00001bec  afc1fff4	sw	-12(r30),r1
 1110  00001bf0          	L64_LF2:
 1111  00001bf0  8fc1fff4	lw	r1,-12(r30)
 1112  00001bf4  8fc20000	lw	r2,(r30)
 1113  00001bf8  0022082c	sle	r1,r1,r2
 1114  00001bfc  1420000c	bnez	r1,L66_LF2
 1115  00001c00  54000000	nop; delay slot nop
 1116  00001c04  08000024	j	L65_LF2
 1117  00001c08  54000000	nop; delay slot nop
 1118  00001c0c          	L67_LF2:
 1119  00001c0c          	L66_LF2:
 1120  00001c0c  8fc1fff4	lw	r1,-12(r30)
 1121  00001c10  00011820	add	r3,r0,r1
 1122  00001c14  50620002	slli	r2,r3,#0x2
 1123  00001c18  00411020	add	r2,r2,r1
 1124  00001c1c  50410001	slli	r1,r2,#0x1
 1125  00001c20  afc1fff4	sw	-12(r30),r1
 1126  00001c24  0bffffc8	j	L64_LF2
 1127  00001c28  54000000	nop; delay slot nop
 1128  00001c2c          	L65_LF2:
 1129  00001c2c  54000000	nop
 1130  00001c30          	L68_LF2:
 1131  00001c30  8fc1fff4	lw	r1,-12(r30)
 1132  00001c34  2002000a	addi	r2,r0,#10
 1133  00001c38  00200035	movi2fp	f0,r1
 1134  00001c3c  00400835	movi2fp	f1,r2
 1135  00001c40  0401000f	div	f0,f0,f1
 1136  00001c44  00000834	movfp2i	r1,f0
 1137  00001c48  afc1fff4	sw	-12(r30),r1
 1138  00001c4c  8fc10004	lw	r1,4(r30)
 1139  00001c50  20220001	addi	r2,r1,#1
 1140  00001c54  afc20004	sw	4(r30),r2
 1141  00001c58  8fc20000	lw	r2,(r30)
 1142  00001c5c  8fc3fff4	lw	r3,-12(r30)
 1143  00001c60  00400035	movi2fp	f0,r2
 1144  00001c64  00600835	movi2fp	f1,r3
 1145  00001c68  0401000f	div	f0,f0,f1
 1146  00001c6c  00001034	movfp2i	r2,f0
 1147  00001c70  00021820	add	r3,r0,r2
 1148  00001c74  20620030	addi	r2,r3,#48
 1149  00001c78  a0220000	sb	(r1),r2
 1150  00001c7c  8fc10000	lw	r1,(r30)
 1151  00001c80  8fc3fff4	lw	r3,-12(r30)
 1152  00001c84  00200035	movi2fp	f0,r1
 1153  00001c88  00600835	movi2fp	f1,r3
 1154  00001c8c  0401000f	div	f0,f0,f1
 1155  00001c90  00001034	movfp2i	r2,f0
 1156  00001c94  8fc3fff4	lw	r3,-12(r30)
 1157  00001c98  00400035	movi2fp	f0,r2
 1158  00001c9c  00600835	movi2fp	f1,r3
 1159  00001ca0  0401000e	mult	f0,f0,f1
 1160  00001ca4  00001034	movfp2i	r2,f0
 1161  00001ca8  00220822	sub	r1,r1,r2
 1162  00001cac  afc10000	sw	(r30),r1
 1163  00001cb0          	L70_LF2:
 1164  00001cb0  8fc1fff4	lw	r1,-12(r30)
 1165  00001cb4  6c220001	sgti	r2,r1,#1
 1166  00001cb8  1440000c	bnez	r2,L71_LF2
 1167  00001cbc  54000000	nop; delay slot nop
 1168  00001cc0  0800000c	j	L61_LF2
 1169  00001cc4  54000000	nop; delay slot nop
 1170  00001cc8          	L71_LF2:
 1171  00001cc8  0bffff64	j	L68_LF2
 1172  00001ccc  54000000	nop; delay slot nop
 1173  00001cd0          	L69_LF2:
 1174  00001cd0          	L63_LF2:
 1175  00001cd0          	L61_LF2:
 1176  00001cd0  8fc10004	lw	r1,4(r30)
 1177  00001cd4  20020000	addi	r2,r0,(#0x0)&0xff
 1178  00001cd8  a0220000	sb	(r1),r2
 1179  00001cdc          	L59_LF2:
 1180  00001cdc  8fa20000	lw	r2,0(r29)
 1181  00001ce0  8fa30004	lw	r3,4(r29)
 1182  00001ce4  8fdffff8	lw	r31,-8(r30)
 1183  00001ce8  001ee820	add	r29,r0,r30
 1184  00001cec  8fdefffc	lw	r30,-4(r30)
 1185  00001cf0  4be00000	jr	r31
 1186  00001cf4  54000000	nop
 1187  00001cf8          	.endproc _ditoa
 1188  00001cf8          	.align 2
 1189  00001cf8          	.proc _dstrtol
 1190  00001cf8          	.global _dstrtol
 1191  00001cf8          	_dstrtol:
 1192                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1193  00001cf8  afbefffc	sw	-4(r29),r30; push fp
 1194  00001cfc  001df020	add	r30,r0,r29; fp = sp
 1195  00001d00  afbffff8	sw	-8(r29),r31; push ret addr
 1196  00001d04  2fbd0020	subui	r29,r29,#32; alloc local storage
 1197  00001d08  afa20000	sw	0(r29),r2
 1198  00001d0c  20010000	addi	r1,r0,#0
 1199  00001d10  afc1fff4	sw	-12(r30),r1
 1200  00001d14          	L73_LF2:
 1201  00001d14  8fc10000	lw	r1,(r30)
 1202  00001d18  90220000	lbu	r2,(r1)
 1203  00001d1c  60410020	seqi	r1,r2,#32
 1204  00001d20  14200034	bnez	r1,L75_LF2
 1205  00001d24  54000000	nop; delay slot nop
 1206  00001d28  8fc10000	lw	r1,(r30)
 1207  00001d2c  90220000	lbu	r2,(r1)
 1208  00001d30  60410009	seqi	r1,r2,#9
 1209  00001d34  14200020	bnez	r1,L75_LF2
 1210  00001d38  54000000	nop; delay slot nop
 1211  00001d3c  8fc10000	lw	r1,(r30)
 1212  00001d40  90220000	lbu	r2,(r1)
 1213  00001d44  6041000a	seqi	r1,r2,#10
 1214  00001d48  1420000c	bnez	r1,L75_LF2
 1215  00001d4c  54000000	nop; delay slot nop
 1216  00001d50  0800001c	j	L74_LF2
 1217  00001d54  54000000	nop; delay slot nop
 1218  00001d58          	L75_LF2:
 1219  00001d58  8fc20000	lw	r2,(r30)
 1220  00001d5c  20410001	addi	r1,r2,#1
 1221  00001d60  00011020	add	r2,r0,r1
 1222  00001d64  afc20000	sw	(r30),r2
 1223  00001d68  0bffffa8	j	L73_LF2
 1224  00001d6c  54000000	nop; delay slot nop
 1225  00001d70          	L74_LF2:
 1226  00001d70  8fc10004	lw	r1,4(r30)
 1227  00001d74  64220000	snei	r2,r1,#0
 1228  00001d78  10400010	beqz	r2,L76_LF2
 1229  00001d7c  54000000	nop; delay slot nop
 1230  00001d80  8fc10004	lw	r1,4(r30)
 1231  00001d84  8fc20000	lw	r2,(r30)
 1232  00001d88  ac220000	sw	(r1),r2
 1233  00001d8c          	L76_LF2:
 1234  00001d8c  8fc10000	lw	r1,(r30)
 1235  00001d90  90220000	lbu	r2,(r1)
 1236  00001d94  64410000	snei	r1,r2,#0
 1237  00001d98  14200010	bnez	r1,L77_LF2
 1238  00001d9c  54000000	nop; delay slot nop
 1239  00001da0  8fc1fff4	lw	r1,-12(r30)
 1240  00001da4  08000294	j	L72_LF2
 1241  00001da8  54000000	nop; delay slot nop
 1242  00001dac          	L77_LF2:
 1243  00001dac  8fc10000	lw	r1,(r30)
 1244  00001db0  90220000	lbu	r2,(r1)
 1245  00001db4  6041002d	seqi	r1,r2,#45
 1246  00001db8  10200024	beqz	r1,L78_LF2
 1247  00001dbc  54000000	nop; delay slot nop
 1248  00001dc0  2001ffff	addi	r1,r0,#-1
 1249  00001dc4  afc1ffec	sw	-20(r30),r1
 1250  00001dc8  8fc20000	lw	r2,(r30)
 1251  00001dcc  20410001	addi	r1,r2,#1
 1252  00001dd0  00011020	add	r2,r0,r1
 1253  00001dd4  afc20000	sw	(r30),r2
 1254  00001dd8  0800000c	j	L79_LF2
 1255  00001ddc  54000000	nop; delay slot nop
 1256  00001de0          	L78_LF2:
 1257  00001de0  20010001	addi	r1,r0,#1
 1258  00001de4  afc1ffec	sw	-20(r30),r1
 1259  00001de8          	L79_LF2:
 1260  00001de8  8fc10008	lw	r1,8(r30)
 1261  00001dec  64220000	snei	r2,r1,#0
 1262  00001df0  14400090	bnez	r2,L80_LF2
 1263  00001df4  54000000	nop; delay slot nop
 1264  00001df8  8fc10000	lw	r1,(r30)
 1265  00001dfc  90220000	lbu	r2,(r1)
 1266  00001e00  60410030	seqi	r1,r2,#48
 1267  00001e04  10200074	beqz	r1,L81_LF2
 1268  00001e08  54000000	nop; delay slot nop
 1269  00001e0c  8fc20000	lw	r2,(r30)
 1270  00001e10  20410001	addi	r1,r2,#1
 1271  00001e14  00011020	add	r2,r0,r1
 1272  00001e18  afc20000	sw	(r30),r2
 1273  00001e1c  8fc10000	lw	r1,(r30)
 1274  00001e20  90220000	lbu	r2,(r1)
 1275  00001e24  60410078	seqi	r1,r2,#120
 1276  00001e28  14200020	bnez	r1,L83_LF2
 1277  00001e2c  54000000	nop; delay slot nop
 1278  00001e30  8fc10000	lw	r1,(r30)
 1279  00001e34  90220000	lbu	r2,(r1)
 1280  00001e38  60410058	seqi	r1,r2,#88
 1281  00001e3c  1420000c	bnez	r1,L83_LF2
 1282  00001e40  54000000	nop; delay slot nop
 1283  00001e44  08000024	j	L82_LF2
 1284  00001e48  54000000	nop; delay slot nop
 1285  00001e4c          	L83_LF2:
 1286  00001e4c  20010010	addi	r1,r0,#16
 1287  00001e50  afc10008	sw	8(r30),r1
 1288  00001e54  8fc20000	lw	r2,(r30)
 1289  00001e58  20410001	addi	r1,r2,#1
 1290  00001e5c  00011020	add	r2,r0,r1
 1291  00001e60  afc20000	sw	(r30),r2
 1292  00001e64  0800000c	j	L84_LF2
 1293  00001e68  54000000	nop; delay slot nop
 1294  00001e6c          	L82_LF2:
 1295  00001e6c  20010008	addi	r1,r0,#8
 1296  00001e70  afc10008	sw	8(r30),r1
 1297  00001e74          	L84_LF2:
 1298  00001e74  0800000c	j	L80_LF2
 1299  00001e78  54000000	nop; delay slot nop
 1300  00001e7c          	L81_LF2:
 1301  00001e7c  2001000a	addi	r1,r0,#10
 1302  00001e80  afc10008	sw	8(r30),r1
 1303  00001e84          	L85_LF2:
 1304  00001e84          	L80_LF2:
 1305  00001e84  8fc10008	lw	r1,8(r30)
 1306  00001e88  70220000	slei	r2,r1,#0
 1307  00001e8c  1440001c	bnez	r2,L87_LF2
 1308  00001e90  54000000	nop; delay slot nop
 1309  00001e94  8fc10008	lw	r1,8(r30)
 1310  00001e98  6c220010	sgti	r2,r1,#16
 1311  00001e9c  1440000c	bnez	r2,L87_LF2
 1312  00001ea0  54000000	nop; delay slot nop
 1313  00001ea4  08000010	j	L86_LF2
 1314  00001ea8  54000000	nop; delay slot nop
 1315  00001eac          	L87_LF2:
 1316  00001eac  8fc1fff4	lw	r1,-12(r30)
 1317  00001eb0  08000188	j	L72_LF2
 1318  00001eb4  54000000	nop; delay slot nop
 1319  00001eb8          	L86_LF2:
 1320  00001eb8  54000000	nop
 1321  00001ebc          	L88_LF2:
 1322  00001ebc  8fc10000	lw	r1,(r30)
 1323  00001ec0  90220000	lbu	r2,(r1)
 1324  00001ec4  6c41002f	sgtui	r1,r2,#47
 1325  00001ec8  10200030	beqz	r1,L91_LF2
 1326  00001ecc  54000000	nop; delay slot nop
 1327  00001ed0  8fc10000	lw	r1,(r30)
 1328  00001ed4  90220000	lbu	r2,(r1)
 1329  00001ed8  70410039	sleui	r1,r2,#57
 1330  00001edc  1020001c	beqz	r1,L91_LF2
 1331  00001ee0  54000000	nop; delay slot nop
 1332  00001ee4  8fc10000	lw	r1,(r30)
 1333  00001ee8  90220000	lbu	r2,(r1)
 1334  00001eec  2041ffd0	addi	r1,r2,#-48
 1335  00001ef0  afc1fff0	sw	-16(r30),r1
 1336  00001ef4  0800008c	j	L92_LF2
 1337  00001ef8  54000000	nop; delay slot nop
 1338  00001efc          	L91_LF2:
 1339  00001efc  8fc10000	lw	r1,(r30)
 1340  00001f00  90220000	lbu	r2,(r1)
 1341  00001f04  6c410060	sgtui	r1,r2,#96
 1342  00001f08  10200030	beqz	r1,L93_LF2
 1343  00001f0c  54000000	nop; delay slot nop
 1344  00001f10  8fc10000	lw	r1,(r30)
 1345  00001f14  90220000	lbu	r2,(r1)
 1346  00001f18  7041007a	sleui	r1,r2,#122
 1347  00001f1c  1020001c	beqz	r1,L93_LF2
 1348  00001f20  54000000	nop; delay slot nop
 1349  00001f24  8fc10000	lw	r1,(r30)
 1350  00001f28  90220000	lbu	r2,(r1)
 1351  00001f2c  2041ffa9	addi	r1,r2,#-87
 1352  00001f30  afc1fff0	sw	-16(r30),r1
 1353  00001f34  0800004c	j	L92_LF2
 1354  00001f38  54000000	nop; delay slot nop
 1355  00001f3c          	L93_LF2:
 1356  00001f3c  8fc10000	lw	r1,(r30)
 1357  00001f40  90220000	lbu	r2,(r1)
 1358  00001f44  6c410040	sgtui	r1,r2,#64
 1359  00001f48  10200030	beqz	r1,L95_LF2
 1360  00001f4c  54000000	nop; delay slot nop
 1361  00001f50  8fc10000	lw	r1,(r30)
 1362  00001f54  90220000	lbu	r2,(r1)
 1363  00001f58  7041005a	sleui	r1,r2,#90
 1364  00001f5c  1020001c	beqz	r1,L95_LF2
 1365  00001f60  54000000	nop; delay slot nop
 1366  00001f64  8fc10000	lw	r1,(r30)
 1367  00001f68  90220000	lbu	r2,(r1)
 1368  00001f6c  2041ffc9	addi	r1,r2,#-55
 1369  00001f70  afc1fff0	sw	-16(r30),r1
 1370  00001f74  0800000c	j	L92_LF2
 1371  00001f78  54000000	nop; delay slot nop
 1372  00001f7c          	L95_LF2:
 1373  00001f7c  200103e8	addi	r1,r0,#1000
 1374  00001f80  afc1fff0	sw	-16(r30),r1
 1375  00001f84          	L96_LF2:
 1376  00001f84          	L94_LF2:
 1377  00001f84          	L92_LF2:
 1378  00001f84  8fc1fff0	lw	r1,-16(r30)
 1379  00001f88  8fc20008	lw	r2,8(r30)
 1380  00001f8c  0022082a	slt	r1,r1,r2
 1381  00001f90  10200040	beqz	r1,L90_LF2
 1382  00001f94  54000000	nop; delay slot nop
 1383  00001f98  8fc1fff4	lw	r1,-12(r30)
 1384  00001f9c  8fc20008	lw	r2,8(r30)
 1385  00001fa0  00200035	movi2fp	f0,r1
 1386  00001fa4  00400835	movi2fp	f1,r2
 1387  00001fa8  0401000e	mult	f0,f0,f1
 1388  00001fac  00000834	movfp2i	r1,f0
 1389  00001fb0  afc1fff4	sw	-12(r30),r1
 1390  00001fb4  8fc1fff4	lw	r1,-12(r30)
 1391  00001fb8  8fc2fff0	lw	r2,-16(r30)
 1392  00001fbc  00220820	add	r1,r1,r2
 1393  00001fc0  afc1fff4	sw	-12(r30),r1
 1394  00001fc4  8fc20000	lw	r2,(r30)
 1395  00001fc8  20410001	addi	r1,r2,#1
 1396  00001fcc  00011020	add	r2,r0,r1
 1397  00001fd0  afc20000	sw	(r30),r2
 1398  00001fd4          	L97_LF2:
 1399  00001fd4          	L90_LF2:
 1400  00001fd4  8fc1fff0	lw	r1,-16(r30)
 1401  00001fd8  8fc20008	lw	r2,8(r30)
 1402  00001fdc  0022082a	slt	r1,r1,r2
 1403  00001fe0  1420000c	bnez	r1,L98_LF2
 1404  00001fe4  54000000	nop; delay slot nop
 1405  00001fe8  0800000c	j	L89_LF2
 1406  00001fec  54000000	nop; delay slot nop
 1407  00001ff0          	L98_LF2:
 1408  00001ff0  0bfffec8	j	L88_LF2
 1409  00001ff4  54000000	nop; delay slot nop
 1410  00001ff8          	L89_LF2:
 1411  00001ff8  8fc10004	lw	r1,4(r30)
 1412  00001ffc  64220000	snei	r2,r1,#0
 1413  00002000  10400010	beqz	r2,L99_LF2
 1414  00002004  54000000	nop; delay slot nop
 1415  00002008  8fc10004	lw	r1,4(r30)
 1416  0000200c  8fc20000	lw	r2,(r30)
 1417  00002010  ac220000	sw	(r1),r2
 1418  00002014          	L99_LF2:
 1419  00002014  8fc1fff4	lw	r1,-12(r30)
 1420  00002018  8fc2ffec	lw	r2,-20(r30)
 1421  0000201c  00200035	movi2fp	f0,r1
 1422  00002020  00400835	movi2fp	f1,r2
 1423  00002024  0401000e	mult	f0,f0,f1
 1424  00002028  00000834	movfp2i	r1,f0
 1425  0000202c  afc1fff4	sw	-12(r30),r1
 1426  00002030  8fc1fff4	lw	r1,-12(r30)
 1427  00002034  08000004	j	L72_LF2
 1428  00002038  54000000	nop; delay slot nop
 1429  0000203c          	L72_LF2:
 1430  0000203c  8fa20000	lw	r2,0(r29)
 1431  00002040  8fdffff8	lw	r31,-8(r30)
 1432  00002044  001ee820	add	r29,r0,r30
 1433  00002048  8fdefffc	lw	r30,-4(r30)
 1434  0000204c  4be00000	jr	r31
 1435  00002050  54000000	nop
 1436  00002054          	.endproc _dstrtol
 1437  00002054          	.align 2
 1438  00002054          	.proc _bcopy
 1439  00002054          	.global _bcopy
 1440  00002054          	_bcopy:
 1441                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1442  00002054  afbefffc	sw	-4(r29),r30; push fp
 1443  00002058  001df020	add	r30,r0,r29; fp = sp
 1444  0000205c  afbffff8	sw	-8(r29),r31; push ret addr
 1445  00002060  2fbd0010	subui	r29,r29,#16; alloc local storage
 1446  00002064  afa20000	sw	0(r29),r2
 1447  00002068  afa30004	sw	4(r29),r3
 1448  0000206c  54000000	nop
 1449  00002070          	L101_LF2:
 1450  00002070  8fc10008	lw	r1,8(r30)
 1451  00002074  2022ffff	addi	r2,r1,#-1
 1452  00002078  afc20008	sw	8(r30),r2
 1453  0000207c  6c210000	sgti	r1,r1,#0
 1454  00002080  1420000c	bnez	r1,L103_LF2
 1455  00002084  54000000	nop; delay slot nop
 1456  00002088  0800002c	j	L102_LF2
 1457  0000208c  54000000	nop; delay slot nop
 1458  00002090          	L103_LF2:
 1459  00002090  8fc10004	lw	r1,4(r30)
 1460  00002094  20220001	addi	r2,r1,#1
 1461  00002098  afc20004	sw	4(r30),r2
 1462  0000209c  8fc20000	lw	r2,(r30)
 1463  000020a0  20430001	addi	r3,r2,#1
 1464  000020a4  afc30000	sw	(r30),r3
 1465  000020a8  80420000	lb	r2,(r2)
 1466  000020ac  a0220000	sb	(r1),r2
 1467  000020b0  0bffffbc	j	L101_LF2
 1468  000020b4  54000000	nop; delay slot nop
 1469  000020b8          	L102_LF2:
 1470  000020b8          	L100_LF2:
 1471  000020b8  8fa20000	lw	r2,0(r29)
 1472  000020bc  8fa30004	lw	r3,4(r29)
 1473  000020c0  8fdffff8	lw	r31,-8(r30)
 1474  000020c4  001ee820	add	r29,r0,r30
 1475  000020c8  8fdefffc	lw	r30,-4(r30)
 1476  000020cc  4be00000	jr	r31
 1477  000020d0  54000000	nop
 1478  000020d4          	.endproc _bcopy
 1479  000020d4          	.align 2
 1480  000020d4          	.proc _bzero
 1481  000020d4          	.global _bzero
 1482  000020d4          	_bzero:
 1483                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1484  000020d4  afbefffc	sw	-4(r29),r30; push fp
 1485  000020d8  001df020	add	r30,r0,r29; fp = sp
 1486  000020dc  afbffff8	sw	-8(r29),r31; push ret addr
 1487  000020e0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1488  000020e4  afa20000	sw	0(r29),r2
 1489  000020e8  54000000	nop
 1490  000020ec          	L105_LF2:
 1491  000020ec  8fc10004	lw	r1,4(r30)
 1492  000020f0  2022ffff	addi	r2,r1,#-1
 1493  000020f4  afc20004	sw	4(r30),r2
 1494  000020f8  6c210000	sgti	r1,r1,#0
 1495  000020fc  1420000c	bnez	r1,L107_LF2
 1496  00002100  54000000	nop; delay slot nop
 1497  00002104  08000020	j	L106_LF2
 1498  00002108  54000000	nop; delay slot nop
 1499  0000210c          	L107_LF2:
 1500  0000210c  8fc10000	lw	r1,(r30)
 1501  00002110  20220001	addi	r2,r1,#1
 1502  00002114  afc20000	sw	(r30),r2
 1503  00002118  20020000	addi	r2,r0,(#0x0)&0xff
 1504  0000211c  a0220000	sb	(r1),r2
 1505  00002120  0bffffc8	j	L105_LF2
 1506  00002124  54000000	nop; delay slot nop
 1507  00002128          	L106_LF2:
 1508  00002128          	L104_LF2:
 1509  00002128  8fa20000	lw	r2,0(r29)
 1510  0000212c  8fdffff8	lw	r31,-8(r30)
 1511  00002130  001ee820	add	r29,r0,r30
 1512  00002134  8fdefffc	lw	r30,-4(r30)
 1513  00002138  4be00000	jr	r31
 1514  0000213c  54000000	nop
 1515  00002140          	.endproc _bzero
 1516  00002140          	.align 2
 1517  00002140          	.proc _min
 1518  00002140          	.global _min
 1519  00002140          	_min:
 1520                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1521  00002140  afbefffc	sw	-4(r29),r30; push fp
 1522  00002144  001df020	add	r30,r0,r29; fp = sp
 1523  00002148  afbffff8	sw	-8(r29),r31; push ret addr
 1524  0000214c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1525  00002150  afa20000	sw	0(r29),r2
 1526  00002154  afa30004	sw	4(r29),r3
 1527  00002158  8fc10000	lw	r1,(r30)
 1528  0000215c  8fc20004	lw	r2,4(r30)
 1529  00002160  0022182c	sle	r3,r1,r2
 1530  00002164  14600008	bnez	r3,L109_LF2
 1531  00002168  54000000	nop; delay slot nop
 1532  0000216c  8fc10004	lw	r1,4(r30)
 1533  00002170          	L109_LF2:
 1534  00002170  08000004	j	L108_LF2
 1535  00002174  54000000	nop; delay slot nop
 1536  00002178          	L108_LF2:
 1537  00002178  8fa20000	lw	r2,0(r29)
 1538  0000217c  8fa30004	lw	r3,4(r29)
 1539  00002180  8fdffff8	lw	r31,-8(r30)
 1540  00002184  001ee820	add	r29,r0,r30
 1541  00002188  8fdefffc	lw	r30,-4(r30)
 1542  0000218c  4be00000	jr	r31
 1543  00002190  54000000	nop
 1544  00002194          	.endproc _min
 1545  00002194          	.align 2
 1546  00002194          	.proc _max
 1547  00002194          	.global _max
 1548  00002194          	_max:
 1549                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1550  00002194  afbefffc	sw	-4(r29),r30; push fp
 1551  00002198  001df020	add	r30,r0,r29; fp = sp
 1552  0000219c  afbffff8	sw	-8(r29),r31; push ret addr
 1553  000021a0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1554  000021a4  afa20000	sw	0(r29),r2
 1555  000021a8  afa30004	sw	4(r29),r3
 1556  000021ac  8fc10000	lw	r1,(r30)
 1557  000021b0  8fc20004	lw	r2,4(r30)
 1558  000021b4  0022182d	sge	r3,r1,r2
 1559  000021b8  14600008	bnez	r3,L111_LF2
 1560  000021bc  54000000	nop; delay slot nop
 1561  000021c0  8fc10004	lw	r1,4(r30)
 1562  000021c4          	L111_LF2:
 1563  000021c4  08000004	j	L110_LF2
 1564  000021c8  54000000	nop; delay slot nop
 1565  000021cc          	L110_LF2:
 1566  000021cc  8fa20000	lw	r2,0(r29)
 1567  000021d0  8fa30004	lw	r3,4(r29)
 1568  000021d4  8fdffff8	lw	r31,-8(r30)
 1569  000021d8  001ee820	add	r29,r0,r30
 1570  000021dc  8fdefffc	lw	r30,-4(r30)
 1571  000021e0  4be00000	jr	r31
 1572  000021e4  54000000	nop
 1573  000021e8          	.endproc _max
 1574                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1575                      ;;;
 1576                      ;;; Most of the traps are called in files from libtraps.
 1579  000021e8          	.align 2
 1580  000021e8          	.proc _exit
 1581  000021e8          	.global _exit
 1582  000021e8          	_exit:
 1583  000021e8  44000300	trap	#0x300
 1584  000021ec  4be00000	jr	r31
 1585  000021f0  54000000	nop
 1586  000021f4          	.endproc _exit
 1588                      ; for the benefit of gcc.
 1589  000021f4          	.proc ___main
 1590  000021f4          	.global ___main
 1591  000021f4          	___main:
 1592  000021f4  4be00000	jr	r31
 1593  000021f8  54000000	nop
 1594  000021fc          	.endproc ___main
 1595  000021fc          	.text
 1596  000021fc          	.global _etext
 1597  000021fc          	_etext:
 1598  000021fc          	.align 3
 1599  00002200          	.data
 1600  000030b3          	.global _edata
 1601  000030b3          	_edata:
