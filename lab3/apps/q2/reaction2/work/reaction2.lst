 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 179
    4                      ; Text size: 4580
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage\000"
   82  00003004  6500    	
   83  00003006          	.align 2
   84  00003008          	LC1_LF0:
   85  00003008  3c68616e	.ascii "<handle_to_shared_memory_page> <handle_to_page_mapped_semaphore<handle"
   85  0000300c  646c655f	
   85  00003010  746f5f73	
   85  00003014  68617265	
   85  00003018  645f6d65	
   85  0000301c  6d6f7279	
   85  00003020  5f706167	
   85  00003024  653e203c	
   85  00003028  68616e64	
   85  0000302c  6c655f74	
   85  00003030  6f5f7061	
   85  00003034  67655f6d	
   85  00003038  61707065	
   85  0000303c  645f7365	
   85  00003040  6d617068	
   85  00003044  6f72653c	
   85  00003048  68616e64	
   85  0000304c  6c65    	
   86  0000304e  20746f20	.ascii " to lock>\000"
   86  00003052  6c6f636b	
   86  00003056  3e00    	
   87  00003058          	.align 2
   88  00003058          	LC2_LF0:
   89  00003058  534f3420	.ascii "SO4 -> SO2 + O2 reacted, PID:%d\n\000"
   89  0000305c  2d3e2053	
   89  00003060  4f32202b	
   89  00003064  204f3220	
   89  00003068  72656163	
   89  0000306c  7465642c	
   89  00003070  20504944	
   89  00003074  3a25640a	
   89  00003078  00      	
   90  00003079          	.align 2
   91  0000307c          	LC3_LF0:
   92  0000307c  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
   92  00003080  73656d61	
   92  00003084  70686f72	
   92  00003088  6520735f	
   92  0000308c  70726f63	
   92  00003090  735f636f	
   92  00003094  6d706c65	
   92  00003098  74656420	
   92  0000309c  28256429	
   92  000030a0  20696e20	
   92  000030a4  00      	
   93  000030a5          	.align 2
   94  000030a8          	LC4_LF0:
   95  000030a8  65786974	.ascii "exiting..\n\000"
   95  000030ac  696e672e	
   95  000030b0  2e0a00  	
   96  000030b3          	.text
   97  000010d4          	.align 2
   98  000010d4          	.proc _main
   99  000010d4          	.global _main
  100  000010d4          	_main:
  101                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  102  000010d4  afbefffc	sw	-4(r29),r30; push fp
  103  000010d8  001df020	add	r30,r0,r29; fp = sp
  104  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  105  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  106  000010e4  8fc20000	lw	r2,(r30)
  107  000010e8  8fc40004	lw	r4,4(r30)
  108  000010ec  0c0010ec	jal	___main
  109  000010f0  54000000	nop; not filled.
  110  000010f4  64410006	snei	r1,r2,#6
  111  000010f8  1020004c	beqz	r1,L14_LF0
  112  000010fc  54000000	nop; not filled.
  113  00001100  23bdfff8	addi	r29,r29,#-8
  114  00001104  3c090000	lhi	r9,((LC0_LF0)>>16)&0xffff
  115  00001108  25293000	addui	r9,r9,(LC0_LF0)&0xffff
  116  0000110c  afa90000	sw	(r29),r9
  117  00001110  0c000218	jal	_Printf
  118  00001114  54000000	nop; not filled.
  119  00001118  8c890000	lw	r9,(r4)
  120  0000111c  afa90000	sw	(r29),r9
  121  00001120  0c000208	jal	_Printf
  122  00001124  54000000	nop; not filled.
  123  00001128  3c090000	lhi	r9,((LC1_LF0)>>16)&0xffff
  124  0000112c  25293008	addui	r9,r9,(LC1_LF0)&0xffff
  125  00001130  afa90000	sw	(r29),r9
  126  00001134  0c0001f4	jal	_Printf
  127  00001138  54000000	nop; not filled.
  128  0000113c  0c0002f4	jal	_Exit
  129  00001140  54000000	nop; not filled.
  130  00001144  23bd0008	addi	r29,r29,#8
  131  00001148          	L14_LF0:
  132  00001148  23bdfff0	addi	r29,r29,#-16
  133  0000114c  8c890004	lw	r9,4(r4)
  134  00001150  afa90000	sw	(r29),r9
  135  00001154  20090000	addi	r9,r0,#0
  136  00001158  afa90004	sw	4(r29),r9
  137  0000115c  2009000a	addi	r9,r0,#10
  138  00001160  afa90008	sw	8(r29),r9
  139  00001164  0c000b78	jal	_dstrtol
  140  00001168  54000000	nop; not filled.
  141  0000116c  00014020	add	r8,r0,r1
  142  00001170  8c890008	lw	r9,8(r4)
  143  00001174  afa90000	sw	(r29),r9
  144  00001178  20090000	addi	r9,r0,#0
  145  0000117c  afa90004	sw	4(r29),r9
  146  00001180  2009000a	addi	r9,r0,#10
  147  00001184  afa90008	sw	8(r29),r9
  148  00001188  0c000b54	jal	_dstrtol
  149  0000118c  54000000	nop; not filled.
  150  00001190  00013820	add	r7,r0,r1
  151  00001194  8c89000c	lw	r9,12(r4)
  152  00001198  afa90000	sw	(r29),r9
  153  0000119c  20090000	addi	r9,r0,#0
  154  000011a0  afa90004	sw	4(r29),r9
  155  000011a4  2009000a	addi	r9,r0,#10
  156  000011a8  afa90008	sw	8(r29),r9
  157  000011ac  0c000b30	jal	_dstrtol
  158  000011b0  54000000	nop; not filled.
  159  000011b4  00013020	add	r6,r0,r1
  160  000011b8  8c890010	lw	r9,16(r4)
  161  000011bc  afa90000	sw	(r29),r9
  162  000011c0  20090000	addi	r9,r0,#0
  163  000011c4  afa90004	sw	4(r29),r9
  164  000011c8  2009000a	addi	r9,r0,#10
  165  000011cc  afa90008	sw	8(r29),r9
  166  000011d0  0c000b0c	jal	_dstrtol
  167  000011d4  54000000	nop; not filled.
  168  000011d8  00012820	add	r5,r0,r1
  169  000011dc  8c890014	lw	r9,20(r4)
  170  000011e0  afa90000	sw	(r29),r9
  171  000011e4  20090000	addi	r9,r0,#0
  172  000011e8  afa90004	sw	4(r29),r9
  173  000011ec  2009000a	addi	r9,r0,#10
  174  000011f0  afa90008	sw	8(r29),r9
  175  000011f4  0c000ae8	jal	_dstrtol
  176  000011f8  54000000	nop; not filled.
  177  000011fc  00011820	add	r3,r0,r1
  178  00001200  20020000	addi	r2,r0,#0
  179  00001204  23bd0010	addi	r29,r29,#16
  180  00001208  0043082a	slt	r1,r2,r3
  181  0000120c  10200060	beqz	r1,L16_LF0
  182  00001210  54000000	nop; not filled.
  183  00001214          	L18_LF0:
  184  00001214  23bdfff8	addi	r29,r29,#-8
  185  00001218  afa70000	sw	(r29),r7
  186  0000121c  0c000154	jal	_sem_wait
  187  00001220  54000000	nop; not filled.
  188  00001224  afa60000	sw	(r29),r6
  189  00001228  0c000154	jal	_sem_signal
  190  0000122c  54000000	nop; not filled.
  191  00001230  afa50000	sw	(r29),r5
  192  00001234  0c000148	jal	_sem_signal
  193  00001238  54000000	nop; not filled.
  194  0000123c  0c0000f8	jal	_getpid
  195  00001240  54000000	nop; not filled.
  196  00001244  3c090000	lhi	r9,((LC2_LF0)>>16)&0xffff
  197  00001248  25293058	addui	r9,r9,(LC2_LF0)&0xffff
  198  0000124c  afa90000	sw	(r29),r9
  199  00001250  afa10004	sw	4(r29),r1
  200  00001254  0c0000d4	jal	_Printf
  201  00001258  54000000	nop; not filled.
  202  0000125c  23bd0008	addi	r29,r29,#8
  203  00001260  20420001	addi	r2,r2,#1
  204  00001264  0043082a	slt	r1,r2,r3
  205  00001268  1420ffa8	bnez	r1,L18_LF0
  206  0000126c  54000000	nop; not filled.
  207  00001270          	L16_LF0:
  208  00001270  23bdfff8	addi	r29,r29,#-8
  209  00001274  afa80000	sw	(r29),r8
  210  00001278  0c000104	jal	_sem_signal
  211  0000127c  54000000	nop; not filled.
  212  00001280  23bd0008	addi	r29,r29,#8
  213  00001284  64210001	snei	r1,r1,#1
  214  00001288  10200050	beqz	r1,L20_LF0
  215  0000128c  54000000	nop; not filled.
  216  00001290  23bdfff8	addi	r29,r29,#-8
  217  00001294  3c090000	lhi	r9,((LC3_LF0)>>16)&0xffff
  218  00001298  2529307c	addui	r9,r9,(LC3_LF0)&0xffff
  219  0000129c  afa90000	sw	(r29),r9
  220  000012a0  afa80004	sw	4(r29),r8
  221  000012a4  0c000084	jal	_Printf
  222  000012a8  54000000	nop; not filled.
  223  000012ac  8c840000	lw	r4,(r4)
  224  000012b0  afa40000	sw	(r29),r4
  225  000012b4  0c000074	jal	_Printf
  226  000012b8  54000000	nop; not filled.
  227  000012bc  3c090000	lhi	r9,((LC4_LF0)>>16)&0xffff
  228  000012c0  252930a8	addui	r9,r9,(LC4_LF0)&0xffff
  229  000012c4  afa90000	sw	(r29),r9
  230  000012c8  0c000060	jal	_Printf
  231  000012cc  54000000	nop; not filled.
  232  000012d0  0c000160	jal	_Exit
  233  000012d4  54000000	nop; not filled.
  234  000012d8  23bd0008	addi	r29,r29,#8
  235  000012dc          	L20_LF0:
  236  000012dc  0c000ef0	jal	_exit
  237  000012e0  54000000	nop
  238  000012e4          	.endproc _main
  239                      ;;;
  240                      ;;; Stub functions for DLX traps.
  241                      ;;;
  242                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  243                      ;;;
  244                      ;;; The traps such as Open and Close
  245                      ;;; (note the capital letters) are for use by user programs.  The traps
  246                      ;;; with names such as open and close (lower case) are for use by the OS.
  247                      ;;;
  250  000012e4          	.align 2
  252                      ;;; The following are the traps to be used by user-level programs
  253                      ;;;
  255  000012e4          	.align 2
  256  000012e4          	.proc _Open
  257  000012e4          	.global _Open
  258  000012e4          	_Open:
  259                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  260                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  261                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  262  000012e4  44000213	trap	#0x213
  263  000012e8  4be00000	jr	r31
  264  000012ec  54000000	nop
  265  000012f0          	.endproc _Open
  267  000012f0          	.proc _Close
  268  000012f0          	.global _Close
  269  000012f0          	_Close:
  270  000012f0  44000214	trap	#0x214
  271  000012f4  4be00000	jr	r31
  272  000012f8  54000000	nop
  273  000012fc          	.endproc _Close
  275  000012fc          	.proc _Read
  276  000012fc          	.global _Read
  277  000012fc          	_Read:
  278  000012fc  44000210	trap	#0x210
  279  00001300  4be00000	jr	r31
  280  00001304  54000000	nop
  281  00001308          	.endproc _Read
  283  00001308          	.proc _Write
  284  00001308          	.global _Write
  285  00001308          	_Write:
  286  00001308  44000211	trap	#0x211
  287  0000130c  4be00000	jr	r31
  288  00001310  54000000	nop
  289  00001314          	.endproc _Write
  291  00001314          	.proc _Lseek
  292  00001314          	.global _Lseek
  293  00001314          	_Lseek:
  294  00001314  44000212	trap	#0x212
  295  00001318  4be00000	jr	r31
  296  0000131c  54000000	nop
  297  00001320          	.endproc _Lseek
  299  00001320          	.proc _Putchar
  300  00001320          	.global _Putchar
  301  00001320          	_Putchar:
  302  00001320  44000280	trap	#0x280
  303  00001324  4be00000	jr	r31
  304  00001328  54000000	nop
  305  0000132c          	.endproc _Putchar
  307  0000132c          	.proc _Printf
  308  0000132c          	.global _Printf
  309  0000132c          	_Printf:
  310  0000132c  44000201	trap	#0x201
  311  00001330  4be00000	jr	r31
  312  00001334  54000000	nop
  313  00001338          	.endproc _Printf
  315  00001338          	.proc _getpid
  316  00001338          	.global _getpid
  317  00001338          	_getpid:
  318  00001338  44000431	trap	#0x431
  319  0000133c  4be00000	jr	r31
  320  00001340  54000000	nop
  321  00001344          	.endproc _getpid
  323  00001344          	.proc _process_create
  324  00001344          	.global _process_create
  325  00001344          	_process_create:
  326  00001344  44000432	trap	#0x432
  327  00001348  4be00000	jr	r31
  328  0000134c  54000000	nop
  329  00001350          	.endproc _process_create
  331  00001350          	.proc _shmget
  332  00001350          	.global _shmget
  333  00001350          	_shmget:
  334  00001350  44000440	trap	#0x440
  335  00001354  4be00000	jr	r31
  336  00001358  54000000	nop
  337  0000135c          	.endproc _shmget
  339  0000135c          	.proc _shmat
  340  0000135c          	.global _shmat
  341  0000135c          	_shmat:
  342  0000135c  44000441	trap	#0x441
  343  00001360  4be00000	jr	r31
  344  00001364  54000000	nop
  345  00001368          	.endproc _shmat
  347  00001368          	.proc _sem_create
  348  00001368          	.global _sem_create
  349  00001368          	_sem_create:
  350  00001368  44000450	trap	#0x450
  351  0000136c  4be00000	jr	r31
  352  00001370  54000000	nop
  353  00001374          	.endproc _sem_create
  355  00001374          	.proc _sem_wait
  356  00001374          	.global _sem_wait
  357  00001374          	_sem_wait:
  358  00001374  44000451	trap	#0x451
  359  00001378  4be00000	jr	r31
  360  0000137c  54000000	nop
  361  00001380          	.endproc _sem_wait
  363  00001380          	.proc _sem_signal
  364  00001380          	.global _sem_signal
  365  00001380          	_sem_signal:
  366  00001380  44000452	trap	#0x452
  367  00001384  4be00000	jr	r31
  368  00001388  54000000	nop
  369  0000138c          	.endproc _sem_signal
  371  0000138c          	.proc _lock_create
  372  0000138c          	.global _lock_create
  373  0000138c          	_lock_create:
  374  0000138c  44000453	trap	#0x453
  375  00001390  4be00000	jr	r31
  376  00001394  54000000	nop
  377  00001398          	.endproc _lock_create
  379  00001398          	.proc _lock_acquire
  380  00001398          	.global _lock_acquire
  381  00001398          	_lock_acquire:
  382  00001398  44000454	trap	#0x454
  383  0000139c  4be00000	jr	r31
  384  000013a0  54000000	nop
  385  000013a4          	.endproc _lock_acquire
  387  000013a4          	.proc _lock_release
  388  000013a4          	.global _lock_release
  389  000013a4          	_lock_release:
  390  000013a4  44000455	trap	#0x455
  391  000013a8  4be00000	jr	r31
  392  000013ac  54000000	nop
  393  000013b0          	.endproc _lock_release
  395  000013b0          	.proc _cond_create
  396  000013b0          	.global _cond_create
  397  000013b0          	_cond_create:
  398  000013b0  44000456	trap	#0x456
  399  000013b4  4be00000	jr	r31
  400  000013b8  54000000	nop
  401  000013bc          	.endproc _cond_create
  403  000013bc          	.proc _cond_wait
  404  000013bc          	.global _cond_wait
  405  000013bc          	_cond_wait:
  406  000013bc  44000457	trap	#0x457
  407  000013c0  4be00000	jr	r31
  408  000013c4  54000000	nop
  409  000013c8          	.endproc _cond_wait
  411  000013c8          	.proc _cond_signal
  412  000013c8          	.global _cond_signal
  413  000013c8          	_cond_signal:
  414  000013c8  44000458	trap	#0x458
  415  000013cc  4be00000	jr	r31
  416  000013d0  54000000	nop
  417  000013d4          	.endproc _cond_signal
  419  000013d4          	.proc _cond_broadcast
  420  000013d4          	.global _cond_broadcast
  421  000013d4          	_cond_broadcast:
  422  000013d4  44000459	trap	#0x459
  423  000013d8  4be00000	jr	r31
  424  000013dc  54000000	nop
  425  000013e0          	.endproc _cond_broadcast
  427  000013e0          	.proc _mbox_create
  428  000013e0          	.global _mbox_create
  429  000013e0          	_mbox_create:
  430  000013e0  44000460	trap	#0x460
  431  000013e4  4be00000	jr	r31
  432  000013e8  54000000	nop
  433  000013ec          	.endproc _mbox_create
  435  000013ec          	.proc _mbox_open
  436  000013ec          	.global _mbox_open
  437  000013ec          	_mbox_open:
  438  000013ec  44000461	trap	#0x461
  439  000013f0  4be00000	jr	r31
  440  000013f4  54000000	nop
  441  000013f8          	.endproc _mbox_open
  443  000013f8          	.proc _mbox_close
  444  000013f8          	.global _mbox_close
  445  000013f8          	_mbox_close:
  446  000013f8  44000462	trap	#0x462
  447  000013fc  4be00000	jr	r31
  448  00001400  54000000	nop
  449  00001404          	.endproc _mbox_close
  451  00001404          	.proc _mbox_send
  452  00001404          	.global _mbox_send
  453  00001404          	_mbox_send:
  454  00001404  44000463	trap	#0x463
  455  00001408  4be00000	jr	r31
  456  0000140c  54000000	nop
  457  00001410          	.endproc _mbox_send
  459  00001410          	.proc _mbox_recv
  460  00001410          	.global _mbox_recv
  461  00001410          	_mbox_recv:
  462  00001410  44000464	trap	#0x464
  463  00001414  4be00000	jr	r31
  464  00001418  54000000	nop
  465  0000141c          	.endproc _mbox_recv
  467  0000141c          	.proc _sleep
  468  0000141c          	.global _sleep
  469  0000141c          	_sleep:
  470  0000141c  44000465	trap	#0x465
  471  00001420  4be00000	jr	r31
  472  00001424  54000000	nop
  473  00001428          	.endproc _sleep
  475  00001428          	.proc _yield
  476  00001428          	.global _yield
  477  00001428          	_yield:
  478  00001428  44000466	trap	#0x466
  479  0000142c  4be00000	jr	r31
  480  00001430  54000000	nop
  481  00001434          	.endproc _yield
  484  00001434          	.proc _Exit
  485  00001434          	.global _Exit
  486  00001434          	_Exit:
  487  00001434  44000500	trap	#0x500
  488  00001438  4be00000	jr	r31
  489  0000143c  54000000	nop
  490  00001440          	.endproc _Exit
  491                      ; Compiled by GCC
  493  00001440          	.align 2
  494  00001440          	.proc _isspace
  495  00001440          	.global _isspace
  496  00001440          	_isspace:
  497                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  498  00001440  afbefffc	sw	-4(r29),r30; push fp
  499  00001444  001df020	add	r30,r0,r29; fp = sp
  500  00001448  afbffff8	sw	-8(r29),r31; push ret addr
  501  0000144c  2fbd0018	subui	r29,r29,#24; alloc local storage
  502  00001450  afa20000	sw	0(r29),r2
  503  00001454  afa30004	sw	4(r29),r3
  504  00001458  afa40008	sw	8(r29),r4
  505  0000145c  83c20003	lb	r2,3(r30)
  506  00001460  20010000	addi	r1,r0,#0
  507  00001464  304300ff	andi	r3,r2,#0x00ff
  508  00001468  60640020	seqi	r4,r3,#32
  509  0000146c  1480002c	bnez	r4,L3_LF2
  510  00001470  54000000	nop; delay slot nop
  511  00001474  304300ff	andi	r3,r2,#0x00ff
  512  00001478  60640009	seqi	r4,r3,#9
  513  0000147c  1480001c	bnez	r4,L3_LF2
  514  00001480  54000000	nop; delay slot nop
  515  00001484  304300ff	andi	r3,r2,#0x00ff
  516  00001488  6064000a	seqi	r4,r3,#10
  517  0000148c  1480000c	bnez	r4,L3_LF2
  518  00001490  54000000	nop; delay slot nop
  519  00001494  08000008	j	L2_LF2
  520  00001498  54000000	nop; delay slot nop
  521  0000149c          	L3_LF2:
  522  0000149c  20010001	addi	r1,r0,#1
  523  000014a0          	L2_LF2:
  524  000014a0  08000004	j	L1_LF2
  525  000014a4  54000000	nop; delay slot nop
  526  000014a8          	L1_LF2:
  527  000014a8  8fa20000	lw	r2,0(r29)
  528  000014ac  8fa30004	lw	r3,4(r29)
  529  000014b0  8fa40008	lw	r4,8(r29)
  530  000014b4  8fdffff8	lw	r31,-8(r30)
  531  000014b8  001ee820	add	r29,r0,r30
  532  000014bc  8fdefffc	lw	r30,-4(r30)
  533  000014c0  4be00000	jr	r31
  534  000014c4  54000000	nop
  535  000014c8          	.endproc _isspace
  536  000014c8          	.align 2
  537  000014c8          	.proc _isxdigit
  538  000014c8          	.global _isxdigit
  539  000014c8          	_isxdigit:
  540                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  541  000014c8  afbefffc	sw	-4(r29),r30; push fp
  542  000014cc  001df020	add	r30,r0,r29; fp = sp
  543  000014d0  afbffff8	sw	-8(r29),r31; push ret addr
  544  000014d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  545  000014d8  afa20000	sw	0(r29),r2
  546  000014dc  afa30004	sw	4(r29),r3
  547  000014e0  afa40008	sw	8(r29),r4
  548  000014e4  83c20003	lb	r2,3(r30)
  549  000014e8  20010000	addi	r1,r0,#0
  550  000014ec  304300ff	andi	r3,r2,#0x00ff
  551  000014f0  6c64002f	sgtui	r4,r3,#47
  552  000014f4  1080001c	beqz	r4,L7_LF2
  553  000014f8  54000000	nop; delay slot nop
  554  000014fc  304300ff	andi	r3,r2,#0x00ff
  555  00001500  70640039	sleui	r4,r3,#57
  556  00001504  1480005c	bnez	r4,L6_LF2
  557  00001508  54000000	nop; delay slot nop
  558  0000150c  08000004	j	L7_LF2
  559  00001510  54000000	nop; delay slot nop
  560  00001514          	L7_LF2:
  561  00001514  304300ff	andi	r3,r2,#0x00ff
  562  00001518  6c640060	sgtui	r4,r3,#96
  563  0000151c  1080001c	beqz	r4,L8_LF2
  564  00001520  54000000	nop; delay slot nop
  565  00001524  304300ff	andi	r3,r2,#0x00ff
  566  00001528  70640066	sleui	r4,r3,#102
  567  0000152c  14800034	bnez	r4,L6_LF2
  568  00001530  54000000	nop; delay slot nop
  569  00001534  08000004	j	L8_LF2
  570  00001538  54000000	nop; delay slot nop
  571  0000153c          	L8_LF2:
  572  0000153c  304300ff	andi	r3,r2,#0x00ff
  573  00001540  6c640040	sgtui	r4,r3,#64
  574  00001544  10800020	beqz	r4,L5_LF2
  575  00001548  54000000	nop; delay slot nop
  576  0000154c  304300ff	andi	r3,r2,#0x00ff
  577  00001550  70640041	sleui	r4,r3,#65
  578  00001554  1480000c	bnez	r4,L6_LF2
  579  00001558  54000000	nop; delay slot nop
  580  0000155c  08000008	j	L5_LF2
  581  00001560  54000000	nop; delay slot nop
  582  00001564          	L6_LF2:
  583  00001564  20010001	addi	r1,r0,#1
  584  00001568          	L5_LF2:
  585  00001568  08000004	j	L4_LF2
  586  0000156c  54000000	nop; delay slot nop
  587  00001570          	L4_LF2:
  588  00001570  8fa20000	lw	r2,0(r29)
  589  00001574  8fa30004	lw	r3,4(r29)
  590  00001578  8fa40008	lw	r4,8(r29)
  591  0000157c  8fdffff8	lw	r31,-8(r30)
  592  00001580  001ee820	add	r29,r0,r30
  593  00001584  8fdefffc	lw	r30,-4(r30)
  594  00001588  4be00000	jr	r31
  595  0000158c  54000000	nop
  596  00001590          	.endproc _isxdigit
  597  00001590          	.align 2
  598  00001590          	.proc _dstrcpy
  599  00001590          	.global _dstrcpy
  600  00001590          	_dstrcpy:
  601                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  602  00001590  afbefffc	sw	-4(r29),r30; push fp
  603  00001594  001df020	add	r30,r0,r29; fp = sp
  604  00001598  afbffff8	sw	-8(r29),r31; push ret addr
  605  0000159c  2fbd0018	subui	r29,r29,#24; alloc local storage
  606  000015a0  afa20000	sw	0(r29),r2
  607  000015a4  afa30004	sw	4(r29),r3
  608  000015a8  8fc10000	lw	r1,(r30)
  609  000015ac  afc1fff4	sw	-12(r30),r1
  610  000015b0          	L10_LF2:
  611  000015b0  8fc10000	lw	r1,(r30)
  612  000015b4  20220001	addi	r2,r1,#1
  613  000015b8  afc20000	sw	(r30),r2
  614  000015bc  8fc20004	lw	r2,4(r30)
  615  000015c0  20430001	addi	r3,r2,#1
  616  000015c4  afc30004	sw	4(r30),r3
  617  000015c8  80420000	lb	r2,(r2)
  618  000015cc  a0220000	sb	(r1),r2
  619  000015d0  a3c2fff3	sb	-13(r30),r2
  620  000015d4          	L12_LF2:
  621  000015d4  93c1fff3	lbu	r1,-13(r30)
  622  000015d8  64220000	snei	r2,r1,#0
  623  000015dc  1440000c	bnez	r2,L13_LF2
  624  000015e0  54000000	nop; delay slot nop
  625  000015e4  0800000c	j	L11_LF2
  626  000015e8  54000000	nop; delay slot nop
  627  000015ec          	L13_LF2:
  628  000015ec  0bffffc0	j	L10_LF2
  629  000015f0  54000000	nop; delay slot nop
  630  000015f4          	L11_LF2:
  631  000015f4  8fc1fff4	lw	r1,-12(r30)
  632  000015f8  08000004	j	L9_LF2
  633  000015fc  54000000	nop; delay slot nop
  634  00001600          	L9_LF2:
  635  00001600  8fa20000	lw	r2,0(r29)
  636  00001604  8fa30004	lw	r3,4(r29)
  637  00001608  8fdffff8	lw	r31,-8(r30)
  638  0000160c  001ee820	add	r29,r0,r30
  639  00001610  8fdefffc	lw	r30,-4(r30)
  640  00001614  4be00000	jr	r31
  641  00001618  54000000	nop
  642  0000161c          	.endproc _dstrcpy
  643  0000161c          	.align 2
  644  0000161c          	.proc _dstrncpy
  645  0000161c          	.global _dstrncpy
  646  0000161c          	_dstrncpy:
  647                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  648  0000161c  afbefffc	sw	-4(r29),r30; push fp
  649  00001620  001df020	add	r30,r0,r29; fp = sp
  650  00001624  afbffff8	sw	-8(r29),r31; push ret addr
  651  00001628  2fbd0018	subui	r29,r29,#24; alloc local storage
  652  0000162c  afa20000	sw	0(r29),r2
  653  00001630  afa30004	sw	4(r29),r3
  654  00001634  8fc10000	lw	r1,(r30)
  655  00001638  afc1fff4	sw	-12(r30),r1
  656  0000163c          	L15_LF2:
  657  0000163c  8fc10008	lw	r1,8(r30)
  658  00001640  2022ffff	addi	r2,r1,#-1
  659  00001644  afc20008	sw	8(r30),r2
  660  00001648  70210000	slei	r1,r1,#0
  661  0000164c  1020000c	beqz	r1,L18_LF2
  662  00001650  54000000	nop; delay slot nop
  663  00001654  08000048	j	L16_LF2
  664  00001658  54000000	nop; delay slot nop
  665  0000165c          	L18_LF2:
  666  0000165c  8fc10000	lw	r1,(r30)
  667  00001660  20220001	addi	r2,r1,#1
  668  00001664  afc20000	sw	(r30),r2
  669  00001668  8fc20004	lw	r2,4(r30)
  670  0000166c  20430001	addi	r3,r2,#1
  671  00001670  afc30004	sw	4(r30),r3
  672  00001674  80420000	lb	r2,(r2)
  673  00001678  a0220000	sb	(r1),r2
  674  0000167c  a3c2fff3	sb	-13(r30),r2
  675  00001680          	L17_LF2:
  676  00001680  93c1fff3	lbu	r1,-13(r30)
  677  00001684  64220000	snei	r2,r1,#0
  678  00001688  1440000c	bnez	r2,L19_LF2
  679  0000168c  54000000	nop; delay slot nop
  680  00001690  0800000c	j	L16_LF2
  681  00001694  54000000	nop; delay slot nop
  682  00001698          	L19_LF2:
  683  00001698  0bffffa0	j	L15_LF2
  684  0000169c  54000000	nop; delay slot nop
  685  000016a0          	L16_LF2:
  686  000016a0  8fc1fff4	lw	r1,-12(r30)
  687  000016a4  08000004	j	L14_LF2
  688  000016a8  54000000	nop; delay slot nop
  689  000016ac          	L14_LF2:
  690  000016ac  8fa20000	lw	r2,0(r29)
  691  000016b0  8fa30004	lw	r3,4(r29)
  692  000016b4  8fdffff8	lw	r31,-8(r30)
  693  000016b8  001ee820	add	r29,r0,r30
  694  000016bc  8fdefffc	lw	r30,-4(r30)
  695  000016c0  4be00000	jr	r31
  696  000016c4  54000000	nop
  697  000016c8          	.endproc _dstrncpy
  698  000016c8          	.align 2
  699  000016c8          	.proc _dstrcat
  700  000016c8          	.global _dstrcat
  701  000016c8          	_dstrcat:
  702                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  703  000016c8  afbefffc	sw	-4(r29),r30; push fp
  704  000016cc  001df020	add	r30,r0,r29; fp = sp
  705  000016d0  afbffff8	sw	-8(r29),r31; push ret addr
  706  000016d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  707  000016d8  afa20000	sw	0(r29),r2
  708  000016dc  8fc10000	lw	r1,(r30)
  709  000016e0  afc1fff4	sw	-12(r30),r1
  710  000016e4          	L21_LF2:
  711  000016e4  8fc10000	lw	r1,(r30)
  712  000016e8  90220000	lbu	r2,(r1)
  713  000016ec  64410000	snei	r1,r2,#0
  714  000016f0  1420000c	bnez	r1,L23_LF2
  715  000016f4  54000000	nop; delay slot nop
  716  000016f8  0800001c	j	L22_LF2
  717  000016fc  54000000	nop; delay slot nop
  718  00001700          	L23_LF2:
  719  00001700  8fc20000	lw	r2,(r30)
  720  00001704  20410001	addi	r1,r2,#1
  721  00001708  00011020	add	r2,r0,r1
  722  0000170c  afc20000	sw	(r30),r2
  723  00001710  0bffffd0	j	L21_LF2
  724  00001714  54000000	nop; delay slot nop
  725  00001718          	L22_LF2:
  726  00001718  23bdfff8	addi	r29,r29,#-8
  727  0000171c  001d0820	add	r1,r0,r29
  728  00001720  8fc20000	lw	r2,(r30)
  729  00001724  ac220000	sw	(r1),r2
  730  00001728  8fc20004	lw	r2,4(r30)
  731  0000172c  ac220004	sw	4(r1),r2
  732  00001730  0ffffe5c	jal	_dstrcpy
  733  00001734  54000000	nop; delay slot nop
  734  00001738  23bd0008	addi	r29,r29,#8
  735  0000173c  8fc1fff4	lw	r1,-12(r30)
  736  00001740  08000004	j	L20_LF2
  737  00001744  54000000	nop; delay slot nop
  738  00001748          	L20_LF2:
  739  00001748  8fa20000	lw	r2,0(r29)
  740  0000174c  8fdffff8	lw	r31,-8(r30)
  741  00001750  001ee820	add	r29,r0,r30
  742  00001754  8fdefffc	lw	r30,-4(r30)
  743  00001758  4be00000	jr	r31
  744  0000175c  54000000	nop
  745  00001760          	.endproc _dstrcat
  746  00001760          	.align 2
  747  00001760          	.proc _dstrncmp
  748  00001760          	.global _dstrncmp
  749  00001760          	_dstrncmp:
  750                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  751  00001760  afbefffc	sw	-4(r29),r30; push fp
  752  00001764  001df020	add	r30,r0,r29; fp = sp
  753  00001768  afbffff8	sw	-8(r29),r31; push ret addr
  754  0000176c  2fbd0018	subui	r29,r29,#24; alloc local storage
  755  00001770  afa20000	sw	0(r29),r2
  756  00001774  afa30004	sw	4(r29),r3
  757  00001778  54000000	nop
  758  0000177c  20010000	addi	r1,r0,#0
  759  00001780  afc1fff4	sw	-12(r30),r1
  760  00001784          	L25_LF2:
  761  00001784  8fc1fff4	lw	r1,-12(r30)
  762  00001788  8fc20008	lw	r2,8(r30)
  763  0000178c  0022082a	slt	r1,r1,r2
  764  00001790  1420000c	bnez	r1,L28_LF2
  765  00001794  54000000	nop; delay slot nop
  766  00001798  08000088	j	L26_LF2
  767  0000179c  54000000	nop; delay slot nop
  768  000017a0          	L28_LF2:
  769  000017a0  8fc10004	lw	r1,4(r30)
  770  000017a4  90220000	lbu	r2,(r1)
  771  000017a8  64410000	snei	r1,r2,#0
  772  000017ac  14200018	bnez	r1,L29_LF2
  773  000017b0  54000000	nop; delay slot nop
  774  000017b4  20010000	addi	r1,r0,#0
  775  000017b8  080000d8	j	L24_LF2
  776  000017bc  54000000	nop; delay slot nop
  777  000017c0  08000028	j	L30_LF2
  778  000017c4  54000000	nop; delay slot nop
  779  000017c8          	L29_LF2:
  780  000017c8  8fc10000	lw	r1,(r30)
  781  000017cc  8fc20004	lw	r2,4(r30)
  782  000017d0  90210000	lbu	r1,(r1)
  783  000017d4  90420000	lbu	r2,(r2)
  784  000017d8  00220829	sne	r1,r1,r2
  785  000017dc  1020000c	beqz	r1,L30_LF2
  786  000017e0  54000000	nop; delay slot nop
  787  000017e4  0800003c	j	L26_LF2
  788  000017e8  54000000	nop; delay slot nop
  789  000017ec          	L31_LF2:
  790  000017ec          	L30_LF2:
  791  000017ec  8fc20000	lw	r2,(r30)
  792  000017f0  20410001	addi	r1,r2,#1
  793  000017f4  00011020	add	r2,r0,r1
  794  000017f8  afc20000	sw	(r30),r2
  795  000017fc  8fc20004	lw	r2,4(r30)
  796  00001800  20410001	addi	r1,r2,#1
  797  00001804  00011020	add	r2,r0,r1
  798  00001808  afc20004	sw	4(r30),r2
  799  0000180c          	L27_LF2:
  800  0000180c  8fc2fff4	lw	r2,-12(r30)
  801  00001810  20410001	addi	r1,r2,#1
  802  00001814  00011020	add	r2,r0,r1
  803  00001818  afc2fff4	sw	-12(r30),r2
  804  0000181c  0bffff64	j	L25_LF2
  805  00001820  54000000	nop; delay slot nop
  806  00001824          	L26_LF2:
  807  00001824  8fc1fff4	lw	r1,-12(r30)
  808  00001828  8fc20008	lw	r2,8(r30)
  809  0000182c  00220828	seq	r1,r1,r2
  810  00001830  10200018	beqz	r1,L32_LF2
  811  00001834  54000000	nop; delay slot nop
  812  00001838  20010000	addi	r1,r0,#0
  813  0000183c  08000054	j	L24_LF2
  814  00001840  54000000	nop; delay slot nop
  815  00001844  0800004c	j	L33_LF2
  816  00001848  54000000	nop; delay slot nop
  817  0000184c          	L32_LF2:
  818  0000184c  8fc20000	lw	r2,(r30)
  819  00001850  90410000	lbu	r1,(r2)
  820  00001854  8fc20004	lw	r2,4(r30)
  821  00001858  90430000	lbu	r3,(r2)
  822  0000185c  00230822	sub	r1,r1,r3
  823  00001860  74220000	sgei	r2,r1,#0
  824  00001864  10400020	beqz	r2,L34_LF2
  825  00001868  54000000	nop; delay slot nop
  826  0000186c  8fc10000	lw	r1,(r30)
  827  00001870  8fc20004	lw	r2,4(r30)
  828  00001874  90210000	lbu	r1,(r1)
  829  00001878  90420000	lbu	r2,(r2)
  830  0000187c  00220829	sne	r1,r1,r2
  831  00001880  08000008	j	L35_LF2
  832  00001884  54000000	nop; delay slot nop
  833  00001888          	L34_LF2:
  834  00001888  2001ffff	addi	r1,r0,#-1
  835  0000188c          	L35_LF2:
  836  0000188c  08000004	j	L24_LF2
  837  00001890  54000000	nop; delay slot nop
  838  00001894          	L33_LF2:
  839  00001894          	L24_LF2:
  840  00001894  8fa20000	lw	r2,0(r29)
  841  00001898  8fa30004	lw	r3,4(r29)
  842  0000189c  8fdffff8	lw	r31,-8(r30)
  843  000018a0  001ee820	add	r29,r0,r30
  844  000018a4  8fdefffc	lw	r30,-4(r30)
  845  000018a8  4be00000	jr	r31
  846  000018ac  54000000	nop
  847  000018b0          	.endproc _dstrncmp
  848  000018b0          	.align 2
  849  000018b0          	.proc _dstrlen
  850  000018b0          	.global _dstrlen
  851  000018b0          	_dstrlen:
  852                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  853  000018b0  afbefffc	sw	-4(r29),r30; push fp
  854  000018b4  001df020	add	r30,r0,r29; fp = sp
  855  000018b8  afbffff8	sw	-8(r29),r31; push ret addr
  856  000018bc  2fbd0018	subui	r29,r29,#24; alloc local storage
  857  000018c0  afa20000	sw	0(r29),r2
  858  000018c4  20010000	addi	r1,r0,#0
  859  000018c8  afc1fff4	sw	-12(r30),r1
  860  000018cc          	L37_LF2:
  861  000018cc  8fc10000	lw	r1,(r30)
  862  000018d0  20220001	addi	r2,r1,#1
  863  000018d4  afc20000	sw	(r30),r2
  864  000018d8  90210000	lbu	r1,(r1)
  865  000018dc  64220000	snei	r2,r1,#0
  866  000018e0  1440000c	bnez	r2,L39_LF2
  867  000018e4  54000000	nop; delay slot nop
  868  000018e8  0800001c	j	L38_LF2
  869  000018ec  54000000	nop; delay slot nop
  870  000018f0          	L39_LF2:
  871  000018f0  8fc2fff4	lw	r2,-12(r30)
  872  000018f4  20410001	addi	r1,r2,#1
  873  000018f8  00011020	add	r2,r0,r1
  874  000018fc  afc2fff4	sw	-12(r30),r2
  875  00001900  0bffffc8	j	L37_LF2
  876  00001904  54000000	nop; delay slot nop
  877  00001908          	L38_LF2:
  878  00001908  8fc1fff4	lw	r1,-12(r30)
  879  0000190c  08000004	j	L36_LF2
  880  00001910  54000000	nop; delay slot nop
  881  00001914          	L36_LF2:
  882  00001914  8fa20000	lw	r2,0(r29)
  883  00001918  8fdffff8	lw	r31,-8(r30)
  884  0000191c  001ee820	add	r29,r0,r30
  885  00001920  8fdefffc	lw	r30,-4(r30)
  886  00001924  4be00000	jr	r31
  887  00001928  54000000	nop
  888  0000192c          	.endproc _dstrlen
  889  0000192c          	.align 2
  890  0000192c          	.proc _dstrstr
  891  0000192c          	.global _dstrstr
  892  0000192c          	_dstrstr:
  893                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  894  0000192c  afbefffc	sw	-4(r29),r30; push fp
  895  00001930  001df020	add	r30,r0,r29; fp = sp
  896  00001934  afbffff8	sw	-8(r29),r31; push ret addr
  897  00001938  2fbd0018	subui	r29,r29,#24; alloc local storage
  898  0000193c  afa20000	sw	0(r29),r2
  899  00001940  23bdfff8	addi	r29,r29,#-8
  900  00001944  001d0820	add	r1,r0,r29
  901  00001948  8fc20004	lw	r2,4(r30)
  902  0000194c  ac220000	sw	(r1),r2
  903  00001950  0fffff5c	jal	_dstrlen
  904  00001954  54000000	nop; delay slot nop
  905  00001958  23bd0008	addi	r29,r29,#8
  906  0000195c  afc1fff4	sw	-12(r30),r1
  907  00001960          	L41_LF2:
  908  00001960  8fc10000	lw	r1,(r30)
  909  00001964  90220000	lbu	r2,(r1)
  910  00001968  64410000	snei	r1,r2,#0
  911  0000196c  1420000c	bnez	r1,L43_LF2
  912  00001970  54000000	nop; delay slot nop
  913  00001974  08000060	j	L42_LF2
  914  00001978  54000000	nop; delay slot nop
  915  0000197c          	L43_LF2:
  916  0000197c  23bdfff0	addi	r29,r29,#-16
  917  00001980  001d0820	add	r1,r0,r29
  918  00001984  8fc20000	lw	r2,(r30)
  919  00001988  ac220000	sw	(r1),r2
  920  0000198c  8fc20004	lw	r2,4(r30)
  921  00001990  ac220004	sw	4(r1),r2
  922  00001994  8fc2fff4	lw	r2,-12(r30)
  923  00001998  ac220008	sw	8(r1),r2
  924  0000199c  0ffffdc0	jal	_dstrncmp
  925  000019a0  54000000	nop; delay slot nop
  926  000019a4  23bd0010	addi	r29,r29,#16
  927  000019a8  64220000	snei	r2,r1,#0
  928  000019ac  14400010	bnez	r2,L44_LF2
  929  000019b0  54000000	nop; delay slot nop
  930  000019b4  8fc10000	lw	r1,(r30)
  931  000019b8  08000028	j	L40_LF2
  932  000019bc  54000000	nop; delay slot nop
  933  000019c0          	L44_LF2:
  934  000019c0  8fc20000	lw	r2,(r30)
  935  000019c4  20410001	addi	r1,r2,#1
  936  000019c8  00011020	add	r2,r0,r1
  937  000019cc  afc20000	sw	(r30),r2
  938  000019d0  0bffff8c	j	L41_LF2
  939  000019d4  54000000	nop; delay slot nop
  940  000019d8          	L42_LF2:
  941  000019d8  20010000	addi	r1,r0,#0
  942  000019dc  08000004	j	L40_LF2
  943  000019e0  54000000	nop; delay slot nop
  944  000019e4          	L40_LF2:
  945  000019e4  8fa20000	lw	r2,0(r29)
  946  000019e8  8fdffff8	lw	r31,-8(r30)
  947  000019ec  001ee820	add	r29,r0,r30
  948  000019f0  8fdefffc	lw	r30,-4(r30)
  949  000019f4  4be00000	jr	r31
  950  000019f8  54000000	nop
  951  000019fc          	.endproc _dstrstr
  952  000019fc          	.align 2
  953  000019fc          	.proc _dmindex
  954  000019fc          	.global _dmindex
  955  000019fc          	_dmindex:
  956                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  957  000019fc  afbefffc	sw	-4(r29),r30; push fp
  958  00001a00  001df020	add	r30,r0,r29; fp = sp
  959  00001a04  afbffff8	sw	-8(r29),r31; push ret addr
  960  00001a08  2fbd0018	subui	r29,r29,#24; alloc local storage
  961  00001a0c  afa20000	sw	0(r29),r2
  962  00001a10  54000000	nop
  963  00001a14          	L46_LF2:
  964  00001a14  8fc10000	lw	r1,(r30)
  965  00001a18  90220000	lbu	r2,(r1)
  966  00001a1c  64410000	snei	r1,r2,#0
  967  00001a20  1420000c	bnez	r1,L48_LF2
  968  00001a24  54000000	nop; delay slot nop
  969  00001a28  08000070	j	L47_LF2
  970  00001a2c  54000000	nop; delay slot nop
  971  00001a30          	L48_LF2:
  972  00001a30  8fc10004	lw	r1,4(r30)
  973  00001a34  afc1fff4	sw	-12(r30),r1
  974  00001a38          	L49_LF2:
  975  00001a38  8fc1fff4	lw	r1,-12(r30)
  976  00001a3c  90220000	lbu	r2,(r1)
  977  00001a40  64410000	snei	r1,r2,#0
  978  00001a44  1420000c	bnez	r1,L52_LF2
  979  00001a48  54000000	nop; delay slot nop
  980  00001a4c  08000044	j	L50_LF2
  981  00001a50  54000000	nop; delay slot nop
  982  00001a54          	L52_LF2:
  983  00001a54  8fc10000	lw	r1,(r30)
  984  00001a58  8fc2fff4	lw	r2,-12(r30)
  985  00001a5c  90210000	lbu	r1,(r1)
  986  00001a60  90420000	lbu	r2,(r2)
  987  00001a64  00220828	seq	r1,r1,r2
  988  00001a68  10200010	beqz	r1,L51_LF2
  989  00001a6c  54000000	nop; delay slot nop
  990  00001a70  8fc10000	lw	r1,(r30)
  991  00001a74  08000030	j	L45_LF2
  992  00001a78  54000000	nop; delay slot nop
  993  00001a7c          	L53_LF2:
  994  00001a7c          	L51_LF2:
  995  00001a7c  8fc2fff4	lw	r2,-12(r30)
  996  00001a80  20410001	addi	r1,r2,#1
  997  00001a84  00011020	add	r2,r0,r1
  998  00001a88  afc2fff4	sw	-12(r30),r2
  999  00001a8c  0bffffa8	j	L49_LF2
 1000  00001a90  54000000	nop; delay slot nop
 1001  00001a94          	L50_LF2:
 1002  00001a94  0bffff7c	j	L46_LF2
 1003  00001a98  54000000	nop; delay slot nop
 1004  00001a9c          	L47_LF2:
 1005  00001a9c  20010000	addi	r1,r0,#0
 1006  00001aa0  08000004	j	L45_LF2
 1007  00001aa4  54000000	nop; delay slot nop
 1008  00001aa8          	L45_LF2:
 1009  00001aa8  8fa20000	lw	r2,0(r29)
 1010  00001aac  8fdffff8	lw	r31,-8(r30)
 1011  00001ab0  001ee820	add	r29,r0,r30
 1012  00001ab4  8fdefffc	lw	r30,-4(r30)
 1013  00001ab8  4be00000	jr	r31
 1014  00001abc  54000000	nop
 1015  00001ac0          	.endproc _dmindex
 1016  00001ac0          	.align 2
 1017  00001ac0          	.proc _dindex
 1018  00001ac0          	.global _dindex
 1019  00001ac0          	_dindex:
 1020                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1021  00001ac0  afbefffc	sw	-4(r29),r30; push fp
 1022  00001ac4  001df020	add	r30,r0,r29; fp = sp
 1023  00001ac8  afbffff8	sw	-8(r29),r31; push ret addr
 1024  00001acc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1025  00001ad0  afa20000	sw	0(r29),r2
 1026  00001ad4  54000000	nop
 1027  00001ad8          	L55_LF2:
 1028  00001ad8  8fc10000	lw	r1,(r30)
 1029  00001adc  90220000	lbu	r2,(r1)
 1030  00001ae0  64410000	snei	r1,r2,#0
 1031  00001ae4  1420000c	bnez	r1,L57_LF2
 1032  00001ae8  54000000	nop; delay slot nop
 1033  00001aec  08000040	j	L56_LF2
 1034  00001af0  54000000	nop; delay slot nop
 1035  00001af4          	L57_LF2:
 1036  00001af4  8fc10000	lw	r1,(r30)
 1037  00001af8  90220000	lbu	r2,(r1)
 1038  00001afc  8fc10004	lw	r1,4(r30)
 1039  00001b00  00411028	seq	r2,r2,r1
 1040  00001b04  10400010	beqz	r2,L58_LF2
 1041  00001b08  54000000	nop; delay slot nop
 1042  00001b0c  8fc10000	lw	r1,(r30)
 1043  00001b10  08000028	j	L54_LF2
 1044  00001b14  54000000	nop; delay slot nop
 1045  00001b18          	L58_LF2:
 1046  00001b18  8fc20000	lw	r2,(r30)
 1047  00001b1c  20410001	addi	r1,r2,#1
 1048  00001b20  00011020	add	r2,r0,r1
 1049  00001b24  afc20000	sw	(r30),r2
 1050  00001b28  0bffffac	j	L55_LF2
 1051  00001b2c  54000000	nop; delay slot nop
 1052  00001b30          	L56_LF2:
 1053  00001b30  20010000	addi	r1,r0,#0
 1054  00001b34  08000004	j	L54_LF2
 1055  00001b38  54000000	nop; delay slot nop
 1056  00001b3c          	L54_LF2:
 1057  00001b3c  8fa20000	lw	r2,0(r29)
 1058  00001b40  8fdffff8	lw	r31,-8(r30)
 1059  00001b44  001ee820	add	r29,r0,r30
 1060  00001b48  8fdefffc	lw	r30,-4(r30)
 1061  00001b4c  4be00000	jr	r31
 1062  00001b50  54000000	nop
 1063  00001b54          	.endproc _dindex
 1064  00001b54          	.align 2
 1065  00001b54          	.proc _ditoa
 1066  00001b54          	.global _ditoa
 1067  00001b54          	_ditoa:
 1068                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1069  00001b54  afbefffc	sw	-4(r29),r30; push fp
 1070  00001b58  001df020	add	r30,r0,r29; fp = sp
 1071  00001b5c  afbffff8	sw	-8(r29),r31; push ret addr
 1072  00001b60  2fbd0018	subui	r29,r29,#24; alloc local storage
 1073  00001b64  afa20000	sw	0(r29),r2
 1074  00001b68  afa30004	sw	4(r29),r3
 1075  00001b6c  8fc10000	lw	r1,(r30)
 1076  00001b70  68220000	slti	r2,r1,#0
 1077  00001b74  1040002c	beqz	r2,L60_LF2
 1078  00001b78  54000000	nop; delay slot nop
 1079  00001b7c  8fc10004	lw	r1,4(r30)
 1080  00001b80  20220001	addi	r2,r1,#1
 1081  00001b84  afc20004	sw	4(r30),r2
 1082  00001b88  2002002d	addi	r2,r0,(#0x2d)&0xff
 1083  00001b8c  a0220000	sb	(r1),r2
 1084  00001b90  8fc10000	lw	r1,(r30)
 1085  00001b94  00011022	sub	r2,r0,r1
 1086  00001b98  afc20000	sw	(r30),r2
 1087  00001b9c  08000118	j	L61_LF2
 1088  00001ba0  54000000	nop; delay slot nop
 1089  00001ba4          	L60_LF2:
 1090  00001ba4  8fc10000	lw	r1,(r30)
 1091  00001ba8  64220000	snei	r2,r1,#0
 1092  00001bac  14400020	bnez	r2,L62_LF2
 1093  00001bb0  54000000	nop; delay slot nop
 1094  00001bb4  8fc10004	lw	r1,4(r30)
 1095  00001bb8  20220001	addi	r2,r1,#1
 1096  00001bbc  afc20004	sw	4(r30),r2
 1097  00001bc0  20020030	addi	r2,r0,(#0x30)&0xff
 1098  00001bc4  a0220000	sb	(r1),r2
 1099  00001bc8  080000ec	j	L61_LF2
 1100  00001bcc  54000000	nop; delay slot nop
 1101  00001bd0          	L62_LF2:
 1102  00001bd0  20010001	addi	r1,r0,#1
 1103  00001bd4  afc1fff4	sw	-12(r30),r1
 1104  00001bd8          	L64_LF2:
 1105  00001bd8  8fc1fff4	lw	r1,-12(r30)
 1106  00001bdc  8fc20000	lw	r2,(r30)
 1107  00001be0  0022082c	sle	r1,r1,r2
 1108  00001be4  1420000c	bnez	r1,L66_LF2
 1109  00001be8  54000000	nop; delay slot nop
 1110  00001bec  08000024	j	L65_LF2
 1111  00001bf0  54000000	nop; delay slot nop
 1112  00001bf4          	L67_LF2:
 1113  00001bf4          	L66_LF2:
 1114  00001bf4  8fc1fff4	lw	r1,-12(r30)
 1115  00001bf8  00011820	add	r3,r0,r1
 1116  00001bfc  50620002	slli	r2,r3,#0x2
 1117  00001c00  00411020	add	r2,r2,r1
 1118  00001c04  50410001	slli	r1,r2,#0x1
 1119  00001c08  afc1fff4	sw	-12(r30),r1
 1120  00001c0c  0bffffc8	j	L64_LF2
 1121  00001c10  54000000	nop; delay slot nop
 1122  00001c14          	L65_LF2:
 1123  00001c14  54000000	nop
 1124  00001c18          	L68_LF2:
 1125  00001c18  8fc1fff4	lw	r1,-12(r30)
 1126  00001c1c  2002000a	addi	r2,r0,#10
 1127  00001c20  00200035	movi2fp	f0,r1
 1128  00001c24  00400835	movi2fp	f1,r2
 1129  00001c28  0401000f	div	f0,f0,f1
 1130  00001c2c  00000834	movfp2i	r1,f0
 1131  00001c30  afc1fff4	sw	-12(r30),r1
 1132  00001c34  8fc10004	lw	r1,4(r30)
 1133  00001c38  20220001	addi	r2,r1,#1
 1134  00001c3c  afc20004	sw	4(r30),r2
 1135  00001c40  8fc20000	lw	r2,(r30)
 1136  00001c44  8fc3fff4	lw	r3,-12(r30)
 1137  00001c48  00400035	movi2fp	f0,r2
 1138  00001c4c  00600835	movi2fp	f1,r3
 1139  00001c50  0401000f	div	f0,f0,f1
 1140  00001c54  00001034	movfp2i	r2,f0
 1141  00001c58  00021820	add	r3,r0,r2
 1142  00001c5c  20620030	addi	r2,r3,#48
 1143  00001c60  a0220000	sb	(r1),r2
 1144  00001c64  8fc10000	lw	r1,(r30)
 1145  00001c68  8fc3fff4	lw	r3,-12(r30)
 1146  00001c6c  00200035	movi2fp	f0,r1
 1147  00001c70  00600835	movi2fp	f1,r3
 1148  00001c74  0401000f	div	f0,f0,f1
 1149  00001c78  00001034	movfp2i	r2,f0
 1150  00001c7c  8fc3fff4	lw	r3,-12(r30)
 1151  00001c80  00400035	movi2fp	f0,r2
 1152  00001c84  00600835	movi2fp	f1,r3
 1153  00001c88  0401000e	mult	f0,f0,f1
 1154  00001c8c  00001034	movfp2i	r2,f0
 1155  00001c90  00220822	sub	r1,r1,r2
 1156  00001c94  afc10000	sw	(r30),r1
 1157  00001c98          	L70_LF2:
 1158  00001c98  8fc1fff4	lw	r1,-12(r30)
 1159  00001c9c  6c220001	sgti	r2,r1,#1
 1160  00001ca0  1440000c	bnez	r2,L71_LF2
 1161  00001ca4  54000000	nop; delay slot nop
 1162  00001ca8  0800000c	j	L61_LF2
 1163  00001cac  54000000	nop; delay slot nop
 1164  00001cb0          	L71_LF2:
 1165  00001cb0  0bffff64	j	L68_LF2
 1166  00001cb4  54000000	nop; delay slot nop
 1167  00001cb8          	L69_LF2:
 1168  00001cb8          	L63_LF2:
 1169  00001cb8          	L61_LF2:
 1170  00001cb8  8fc10004	lw	r1,4(r30)
 1171  00001cbc  20020000	addi	r2,r0,(#0x0)&0xff
 1172  00001cc0  a0220000	sb	(r1),r2
 1173  00001cc4          	L59_LF2:
 1174  00001cc4  8fa20000	lw	r2,0(r29)
 1175  00001cc8  8fa30004	lw	r3,4(r29)
 1176  00001ccc  8fdffff8	lw	r31,-8(r30)
 1177  00001cd0  001ee820	add	r29,r0,r30
 1178  00001cd4  8fdefffc	lw	r30,-4(r30)
 1179  00001cd8  4be00000	jr	r31
 1180  00001cdc  54000000	nop
 1181  00001ce0          	.endproc _ditoa
 1182  00001ce0          	.align 2
 1183  00001ce0          	.proc _dstrtol
 1184  00001ce0          	.global _dstrtol
 1185  00001ce0          	_dstrtol:
 1186                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1187  00001ce0  afbefffc	sw	-4(r29),r30; push fp
 1188  00001ce4  001df020	add	r30,r0,r29; fp = sp
 1189  00001ce8  afbffff8	sw	-8(r29),r31; push ret addr
 1190  00001cec  2fbd0020	subui	r29,r29,#32; alloc local storage
 1191  00001cf0  afa20000	sw	0(r29),r2
 1192  00001cf4  20010000	addi	r1,r0,#0
 1193  00001cf8  afc1fff4	sw	-12(r30),r1
 1194  00001cfc          	L73_LF2:
 1195  00001cfc  8fc10000	lw	r1,(r30)
 1196  00001d00  90220000	lbu	r2,(r1)
 1197  00001d04  60410020	seqi	r1,r2,#32
 1198  00001d08  14200034	bnez	r1,L75_LF2
 1199  00001d0c  54000000	nop; delay slot nop
 1200  00001d10  8fc10000	lw	r1,(r30)
 1201  00001d14  90220000	lbu	r2,(r1)
 1202  00001d18  60410009	seqi	r1,r2,#9
 1203  00001d1c  14200020	bnez	r1,L75_LF2
 1204  00001d20  54000000	nop; delay slot nop
 1205  00001d24  8fc10000	lw	r1,(r30)
 1206  00001d28  90220000	lbu	r2,(r1)
 1207  00001d2c  6041000a	seqi	r1,r2,#10
 1208  00001d30  1420000c	bnez	r1,L75_LF2
 1209  00001d34  54000000	nop; delay slot nop
 1210  00001d38  0800001c	j	L74_LF2
 1211  00001d3c  54000000	nop; delay slot nop
 1212  00001d40          	L75_LF2:
 1213  00001d40  8fc20000	lw	r2,(r30)
 1214  00001d44  20410001	addi	r1,r2,#1
 1215  00001d48  00011020	add	r2,r0,r1
 1216  00001d4c  afc20000	sw	(r30),r2
 1217  00001d50  0bffffa8	j	L73_LF2
 1218  00001d54  54000000	nop; delay slot nop
 1219  00001d58          	L74_LF2:
 1220  00001d58  8fc10004	lw	r1,4(r30)
 1221  00001d5c  64220000	snei	r2,r1,#0
 1222  00001d60  10400010	beqz	r2,L76_LF2
 1223  00001d64  54000000	nop; delay slot nop
 1224  00001d68  8fc10004	lw	r1,4(r30)
 1225  00001d6c  8fc20000	lw	r2,(r30)
 1226  00001d70  ac220000	sw	(r1),r2
 1227  00001d74          	L76_LF2:
 1228  00001d74  8fc10000	lw	r1,(r30)
 1229  00001d78  90220000	lbu	r2,(r1)
 1230  00001d7c  64410000	snei	r1,r2,#0
 1231  00001d80  14200010	bnez	r1,L77_LF2
 1232  00001d84  54000000	nop; delay slot nop
 1233  00001d88  8fc1fff4	lw	r1,-12(r30)
 1234  00001d8c  08000294	j	L72_LF2
 1235  00001d90  54000000	nop; delay slot nop
 1236  00001d94          	L77_LF2:
 1237  00001d94  8fc10000	lw	r1,(r30)
 1238  00001d98  90220000	lbu	r2,(r1)
 1239  00001d9c  6041002d	seqi	r1,r2,#45
 1240  00001da0  10200024	beqz	r1,L78_LF2
 1241  00001da4  54000000	nop; delay slot nop
 1242  00001da8  2001ffff	addi	r1,r0,#-1
 1243  00001dac  afc1ffec	sw	-20(r30),r1
 1244  00001db0  8fc20000	lw	r2,(r30)
 1245  00001db4  20410001	addi	r1,r2,#1
 1246  00001db8  00011020	add	r2,r0,r1
 1247  00001dbc  afc20000	sw	(r30),r2
 1248  00001dc0  0800000c	j	L79_LF2
 1249  00001dc4  54000000	nop; delay slot nop
 1250  00001dc8          	L78_LF2:
 1251  00001dc8  20010001	addi	r1,r0,#1
 1252  00001dcc  afc1ffec	sw	-20(r30),r1
 1253  00001dd0          	L79_LF2:
 1254  00001dd0  8fc10008	lw	r1,8(r30)
 1255  00001dd4  64220000	snei	r2,r1,#0
 1256  00001dd8  14400090	bnez	r2,L80_LF2
 1257  00001ddc  54000000	nop; delay slot nop
 1258  00001de0  8fc10000	lw	r1,(r30)
 1259  00001de4  90220000	lbu	r2,(r1)
 1260  00001de8  60410030	seqi	r1,r2,#48
 1261  00001dec  10200074	beqz	r1,L81_LF2
 1262  00001df0  54000000	nop; delay slot nop
 1263  00001df4  8fc20000	lw	r2,(r30)
 1264  00001df8  20410001	addi	r1,r2,#1
 1265  00001dfc  00011020	add	r2,r0,r1
 1266  00001e00  afc20000	sw	(r30),r2
 1267  00001e04  8fc10000	lw	r1,(r30)
 1268  00001e08  90220000	lbu	r2,(r1)
 1269  00001e0c  60410078	seqi	r1,r2,#120
 1270  00001e10  14200020	bnez	r1,L83_LF2
 1271  00001e14  54000000	nop; delay slot nop
 1272  00001e18  8fc10000	lw	r1,(r30)
 1273  00001e1c  90220000	lbu	r2,(r1)
 1274  00001e20  60410058	seqi	r1,r2,#88
 1275  00001e24  1420000c	bnez	r1,L83_LF2
 1276  00001e28  54000000	nop; delay slot nop
 1277  00001e2c  08000024	j	L82_LF2
 1278  00001e30  54000000	nop; delay slot nop
 1279  00001e34          	L83_LF2:
 1280  00001e34  20010010	addi	r1,r0,#16
 1281  00001e38  afc10008	sw	8(r30),r1
 1282  00001e3c  8fc20000	lw	r2,(r30)
 1283  00001e40  20410001	addi	r1,r2,#1
 1284  00001e44  00011020	add	r2,r0,r1
 1285  00001e48  afc20000	sw	(r30),r2
 1286  00001e4c  0800000c	j	L84_LF2
 1287  00001e50  54000000	nop; delay slot nop
 1288  00001e54          	L82_LF2:
 1289  00001e54  20010008	addi	r1,r0,#8
 1290  00001e58  afc10008	sw	8(r30),r1
 1291  00001e5c          	L84_LF2:
 1292  00001e5c  0800000c	j	L80_LF2
 1293  00001e60  54000000	nop; delay slot nop
 1294  00001e64          	L81_LF2:
 1295  00001e64  2001000a	addi	r1,r0,#10
 1296  00001e68  afc10008	sw	8(r30),r1
 1297  00001e6c          	L85_LF2:
 1298  00001e6c          	L80_LF2:
 1299  00001e6c  8fc10008	lw	r1,8(r30)
 1300  00001e70  70220000	slei	r2,r1,#0
 1301  00001e74  1440001c	bnez	r2,L87_LF2
 1302  00001e78  54000000	nop; delay slot nop
 1303  00001e7c  8fc10008	lw	r1,8(r30)
 1304  00001e80  6c220010	sgti	r2,r1,#16
 1305  00001e84  1440000c	bnez	r2,L87_LF2
 1306  00001e88  54000000	nop; delay slot nop
 1307  00001e8c  08000010	j	L86_LF2
 1308  00001e90  54000000	nop; delay slot nop
 1309  00001e94          	L87_LF2:
 1310  00001e94  8fc1fff4	lw	r1,-12(r30)
 1311  00001e98  08000188	j	L72_LF2
 1312  00001e9c  54000000	nop; delay slot nop
 1313  00001ea0          	L86_LF2:
 1314  00001ea0  54000000	nop
 1315  00001ea4          	L88_LF2:
 1316  00001ea4  8fc10000	lw	r1,(r30)
 1317  00001ea8  90220000	lbu	r2,(r1)
 1318  00001eac  6c41002f	sgtui	r1,r2,#47
 1319  00001eb0  10200030	beqz	r1,L91_LF2
 1320  00001eb4  54000000	nop; delay slot nop
 1321  00001eb8  8fc10000	lw	r1,(r30)
 1322  00001ebc  90220000	lbu	r2,(r1)
 1323  00001ec0  70410039	sleui	r1,r2,#57
 1324  00001ec4  1020001c	beqz	r1,L91_LF2
 1325  00001ec8  54000000	nop; delay slot nop
 1326  00001ecc  8fc10000	lw	r1,(r30)
 1327  00001ed0  90220000	lbu	r2,(r1)
 1328  00001ed4  2041ffd0	addi	r1,r2,#-48
 1329  00001ed8  afc1fff0	sw	-16(r30),r1
 1330  00001edc  0800008c	j	L92_LF2
 1331  00001ee0  54000000	nop; delay slot nop
 1332  00001ee4          	L91_LF2:
 1333  00001ee4  8fc10000	lw	r1,(r30)
 1334  00001ee8  90220000	lbu	r2,(r1)
 1335  00001eec  6c410060	sgtui	r1,r2,#96
 1336  00001ef0  10200030	beqz	r1,L93_LF2
 1337  00001ef4  54000000	nop; delay slot nop
 1338  00001ef8  8fc10000	lw	r1,(r30)
 1339  00001efc  90220000	lbu	r2,(r1)
 1340  00001f00  7041007a	sleui	r1,r2,#122
 1341  00001f04  1020001c	beqz	r1,L93_LF2
 1342  00001f08  54000000	nop; delay slot nop
 1343  00001f0c  8fc10000	lw	r1,(r30)
 1344  00001f10  90220000	lbu	r2,(r1)
 1345  00001f14  2041ffa9	addi	r1,r2,#-87
 1346  00001f18  afc1fff0	sw	-16(r30),r1
 1347  00001f1c  0800004c	j	L92_LF2
 1348  00001f20  54000000	nop; delay slot nop
 1349  00001f24          	L93_LF2:
 1350  00001f24  8fc10000	lw	r1,(r30)
 1351  00001f28  90220000	lbu	r2,(r1)
 1352  00001f2c  6c410040	sgtui	r1,r2,#64
 1353  00001f30  10200030	beqz	r1,L95_LF2
 1354  00001f34  54000000	nop; delay slot nop
 1355  00001f38  8fc10000	lw	r1,(r30)
 1356  00001f3c  90220000	lbu	r2,(r1)
 1357  00001f40  7041005a	sleui	r1,r2,#90
 1358  00001f44  1020001c	beqz	r1,L95_LF2
 1359  00001f48  54000000	nop; delay slot nop
 1360  00001f4c  8fc10000	lw	r1,(r30)
 1361  00001f50  90220000	lbu	r2,(r1)
 1362  00001f54  2041ffc9	addi	r1,r2,#-55
 1363  00001f58  afc1fff0	sw	-16(r30),r1
 1364  00001f5c  0800000c	j	L92_LF2
 1365  00001f60  54000000	nop; delay slot nop
 1366  00001f64          	L95_LF2:
 1367  00001f64  200103e8	addi	r1,r0,#1000
 1368  00001f68  afc1fff0	sw	-16(r30),r1
 1369  00001f6c          	L96_LF2:
 1370  00001f6c          	L94_LF2:
 1371  00001f6c          	L92_LF2:
 1372  00001f6c  8fc1fff0	lw	r1,-16(r30)
 1373  00001f70  8fc20008	lw	r2,8(r30)
 1374  00001f74  0022082a	slt	r1,r1,r2
 1375  00001f78  10200040	beqz	r1,L90_LF2
 1376  00001f7c  54000000	nop; delay slot nop
 1377  00001f80  8fc1fff4	lw	r1,-12(r30)
 1378  00001f84  8fc20008	lw	r2,8(r30)
 1379  00001f88  00200035	movi2fp	f0,r1
 1380  00001f8c  00400835	movi2fp	f1,r2
 1381  00001f90  0401000e	mult	f0,f0,f1
 1382  00001f94  00000834	movfp2i	r1,f0
 1383  00001f98  afc1fff4	sw	-12(r30),r1
 1384  00001f9c  8fc1fff4	lw	r1,-12(r30)
 1385  00001fa0  8fc2fff0	lw	r2,-16(r30)
 1386  00001fa4  00220820	add	r1,r1,r2
 1387  00001fa8  afc1fff4	sw	-12(r30),r1
 1388  00001fac  8fc20000	lw	r2,(r30)
 1389  00001fb0  20410001	addi	r1,r2,#1
 1390  00001fb4  00011020	add	r2,r0,r1
 1391  00001fb8  afc20000	sw	(r30),r2
 1392  00001fbc          	L97_LF2:
 1393  00001fbc          	L90_LF2:
 1394  00001fbc  8fc1fff0	lw	r1,-16(r30)
 1395  00001fc0  8fc20008	lw	r2,8(r30)
 1396  00001fc4  0022082a	slt	r1,r1,r2
 1397  00001fc8  1420000c	bnez	r1,L98_LF2
 1398  00001fcc  54000000	nop; delay slot nop
 1399  00001fd0  0800000c	j	L89_LF2
 1400  00001fd4  54000000	nop; delay slot nop
 1401  00001fd8          	L98_LF2:
 1402  00001fd8  0bfffec8	j	L88_LF2
 1403  00001fdc  54000000	nop; delay slot nop
 1404  00001fe0          	L89_LF2:
 1405  00001fe0  8fc10004	lw	r1,4(r30)
 1406  00001fe4  64220000	snei	r2,r1,#0
 1407  00001fe8  10400010	beqz	r2,L99_LF2
 1408  00001fec  54000000	nop; delay slot nop
 1409  00001ff0  8fc10004	lw	r1,4(r30)
 1410  00001ff4  8fc20000	lw	r2,(r30)
 1411  00001ff8  ac220000	sw	(r1),r2
 1412  00001ffc          	L99_LF2:
 1413  00001ffc  8fc1fff4	lw	r1,-12(r30)
 1414  00002000  8fc2ffec	lw	r2,-20(r30)
 1415  00002004  00200035	movi2fp	f0,r1
 1416  00002008  00400835	movi2fp	f1,r2
 1417  0000200c  0401000e	mult	f0,f0,f1
 1418  00002010  00000834	movfp2i	r1,f0
 1419  00002014  afc1fff4	sw	-12(r30),r1
 1420  00002018  8fc1fff4	lw	r1,-12(r30)
 1421  0000201c  08000004	j	L72_LF2
 1422  00002020  54000000	nop; delay slot nop
 1423  00002024          	L72_LF2:
 1424  00002024  8fa20000	lw	r2,0(r29)
 1425  00002028  8fdffff8	lw	r31,-8(r30)
 1426  0000202c  001ee820	add	r29,r0,r30
 1427  00002030  8fdefffc	lw	r30,-4(r30)
 1428  00002034  4be00000	jr	r31
 1429  00002038  54000000	nop
 1430  0000203c          	.endproc _dstrtol
 1431  0000203c          	.align 2
 1432  0000203c          	.proc _bcopy
 1433  0000203c          	.global _bcopy
 1434  0000203c          	_bcopy:
 1435                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1436  0000203c  afbefffc	sw	-4(r29),r30; push fp
 1437  00002040  001df020	add	r30,r0,r29; fp = sp
 1438  00002044  afbffff8	sw	-8(r29),r31; push ret addr
 1439  00002048  2fbd0010	subui	r29,r29,#16; alloc local storage
 1440  0000204c  afa20000	sw	0(r29),r2
 1441  00002050  afa30004	sw	4(r29),r3
 1442  00002054  54000000	nop
 1443  00002058          	L101_LF2:
 1444  00002058  8fc10008	lw	r1,8(r30)
 1445  0000205c  2022ffff	addi	r2,r1,#-1
 1446  00002060  afc20008	sw	8(r30),r2
 1447  00002064  6c210000	sgti	r1,r1,#0
 1448  00002068  1420000c	bnez	r1,L103_LF2
 1449  0000206c  54000000	nop; delay slot nop
 1450  00002070  0800002c	j	L102_LF2
 1451  00002074  54000000	nop; delay slot nop
 1452  00002078          	L103_LF2:
 1453  00002078  8fc10004	lw	r1,4(r30)
 1454  0000207c  20220001	addi	r2,r1,#1
 1455  00002080  afc20004	sw	4(r30),r2
 1456  00002084  8fc20000	lw	r2,(r30)
 1457  00002088  20430001	addi	r3,r2,#1
 1458  0000208c  afc30000	sw	(r30),r3
 1459  00002090  80420000	lb	r2,(r2)
 1460  00002094  a0220000	sb	(r1),r2
 1461  00002098  0bffffbc	j	L101_LF2
 1462  0000209c  54000000	nop; delay slot nop
 1463  000020a0          	L102_LF2:
 1464  000020a0          	L100_LF2:
 1465  000020a0  8fa20000	lw	r2,0(r29)
 1466  000020a4  8fa30004	lw	r3,4(r29)
 1467  000020a8  8fdffff8	lw	r31,-8(r30)
 1468  000020ac  001ee820	add	r29,r0,r30
 1469  000020b0  8fdefffc	lw	r30,-4(r30)
 1470  000020b4  4be00000	jr	r31
 1471  000020b8  54000000	nop
 1472  000020bc          	.endproc _bcopy
 1473  000020bc          	.align 2
 1474  000020bc          	.proc _bzero
 1475  000020bc          	.global _bzero
 1476  000020bc          	_bzero:
 1477                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1478  000020bc  afbefffc	sw	-4(r29),r30; push fp
 1479  000020c0  001df020	add	r30,r0,r29; fp = sp
 1480  000020c4  afbffff8	sw	-8(r29),r31; push ret addr
 1481  000020c8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1482  000020cc  afa20000	sw	0(r29),r2
 1483  000020d0  54000000	nop
 1484  000020d4          	L105_LF2:
 1485  000020d4  8fc10004	lw	r1,4(r30)
 1486  000020d8  2022ffff	addi	r2,r1,#-1
 1487  000020dc  afc20004	sw	4(r30),r2
 1488  000020e0  6c210000	sgti	r1,r1,#0
 1489  000020e4  1420000c	bnez	r1,L107_LF2
 1490  000020e8  54000000	nop; delay slot nop
 1491  000020ec  08000020	j	L106_LF2
 1492  000020f0  54000000	nop; delay slot nop
 1493  000020f4          	L107_LF2:
 1494  000020f4  8fc10000	lw	r1,(r30)
 1495  000020f8  20220001	addi	r2,r1,#1
 1496  000020fc  afc20000	sw	(r30),r2
 1497  00002100  20020000	addi	r2,r0,(#0x0)&0xff
 1498  00002104  a0220000	sb	(r1),r2
 1499  00002108  0bffffc8	j	L105_LF2
 1500  0000210c  54000000	nop; delay slot nop
 1501  00002110          	L106_LF2:
 1502  00002110          	L104_LF2:
 1503  00002110  8fa20000	lw	r2,0(r29)
 1504  00002114  8fdffff8	lw	r31,-8(r30)
 1505  00002118  001ee820	add	r29,r0,r30
 1506  0000211c  8fdefffc	lw	r30,-4(r30)
 1507  00002120  4be00000	jr	r31
 1508  00002124  54000000	nop
 1509  00002128          	.endproc _bzero
 1510  00002128          	.align 2
 1511  00002128          	.proc _min
 1512  00002128          	.global _min
 1513  00002128          	_min:
 1514                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1515  00002128  afbefffc	sw	-4(r29),r30; push fp
 1516  0000212c  001df020	add	r30,r0,r29; fp = sp
 1517  00002130  afbffff8	sw	-8(r29),r31; push ret addr
 1518  00002134  2fbd0010	subui	r29,r29,#16; alloc local storage
 1519  00002138  afa20000	sw	0(r29),r2
 1520  0000213c  afa30004	sw	4(r29),r3
 1521  00002140  8fc10000	lw	r1,(r30)
 1522  00002144  8fc20004	lw	r2,4(r30)
 1523  00002148  0022182c	sle	r3,r1,r2
 1524  0000214c  14600008	bnez	r3,L109_LF2
 1525  00002150  54000000	nop; delay slot nop
 1526  00002154  8fc10004	lw	r1,4(r30)
 1527  00002158          	L109_LF2:
 1528  00002158  08000004	j	L108_LF2
 1529  0000215c  54000000	nop; delay slot nop
 1530  00002160          	L108_LF2:
 1531  00002160  8fa20000	lw	r2,0(r29)
 1532  00002164  8fa30004	lw	r3,4(r29)
 1533  00002168  8fdffff8	lw	r31,-8(r30)
 1534  0000216c  001ee820	add	r29,r0,r30
 1535  00002170  8fdefffc	lw	r30,-4(r30)
 1536  00002174  4be00000	jr	r31
 1537  00002178  54000000	nop
 1538  0000217c          	.endproc _min
 1539  0000217c          	.align 2
 1540  0000217c          	.proc _max
 1541  0000217c          	.global _max
 1542  0000217c          	_max:
 1543                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1544  0000217c  afbefffc	sw	-4(r29),r30; push fp
 1545  00002180  001df020	add	r30,r0,r29; fp = sp
 1546  00002184  afbffff8	sw	-8(r29),r31; push ret addr
 1547  00002188  2fbd0010	subui	r29,r29,#16; alloc local storage
 1548  0000218c  afa20000	sw	0(r29),r2
 1549  00002190  afa30004	sw	4(r29),r3
 1550  00002194  8fc10000	lw	r1,(r30)
 1551  00002198  8fc20004	lw	r2,4(r30)
 1552  0000219c  0022182d	sge	r3,r1,r2
 1553  000021a0  14600008	bnez	r3,L111_LF2
 1554  000021a4  54000000	nop; delay slot nop
 1555  000021a8  8fc10004	lw	r1,4(r30)
 1556  000021ac          	L111_LF2:
 1557  000021ac  08000004	j	L110_LF2
 1558  000021b0  54000000	nop; delay slot nop
 1559  000021b4          	L110_LF2:
 1560  000021b4  8fa20000	lw	r2,0(r29)
 1561  000021b8  8fa30004	lw	r3,4(r29)
 1562  000021bc  8fdffff8	lw	r31,-8(r30)
 1563  000021c0  001ee820	add	r29,r0,r30
 1564  000021c4  8fdefffc	lw	r30,-4(r30)
 1565  000021c8  4be00000	jr	r31
 1566  000021cc  54000000	nop
 1567  000021d0          	.endproc _max
 1568                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1569                      ;;;
 1570                      ;;; Most of the traps are called in files from libtraps.
 1573  000021d0          	.align 2
 1574  000021d0          	.proc _exit
 1575  000021d0          	.global _exit
 1576  000021d0          	_exit:
 1577  000021d0  44000300	trap	#0x300
 1578  000021d4  4be00000	jr	r31
 1579  000021d8  54000000	nop
 1580  000021dc          	.endproc _exit
 1582                      ; for the benefit of gcc.
 1583  000021dc          	.proc ___main
 1584  000021dc          	.global ___main
 1585  000021dc          	___main:
 1586  000021dc  4be00000	jr	r31
 1587  000021e0  54000000	nop
 1588  000021e4          	.endproc ___main
 1589  000021e4          	.text
 1590  000021e4          	.global _etext
 1591  000021e4          	_etext:
 1592  000021e4          	.align 3
 1593  000021e8          	.data
 1594  000030b3          	.global _edata
 1595  000030b3          	_edata:
