; Compiled by GCC
.text
	.align 2
.proc _isspace
.global _isspace
_isspace:
;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lb	r2,3(r30)
	addi	r1,r0,#0
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#32
	bnez	r4,L3
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#9
	bnez	r4,L3
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#10
	bnez	r4,L3
	nop	; delay slot nop
	j	L2
	nop	; delay slot nop
L3:
	addi	r1,r0,#1
L2:
	j	L1
	nop	; delay slot nop
L1:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isspace
	.align 2
.proc _isxdigit
.global _isxdigit
_isxdigit:
;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lb	r2,3(r30)
	addi	r1,r0,#0
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#47
	beqz	r4,L7
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#57
	bnez	r4,L6
	nop	; delay slot nop
	j	L7
	nop	; delay slot nop
L7:
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#96
	beqz	r4,L8
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#102
	bnez	r4,L6
	nop	; delay slot nop
	j	L8
	nop	; delay slot nop
L8:
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#64
	beqz	r4,L5
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#65
	bnez	r4,L6
	nop	; delay slot nop
	j	L5
	nop	; delay slot nop
L6:
	addi	r1,r0,#1
L5:
	j	L4
	nop	; delay slot nop
L4:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isxdigit
	.align 2
.proc _DisableIntrs
.global _DisableIntrs
_DisableIntrs:
;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r0,#15
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L9
	nop	; delay slot nop
L9:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _DisableIntrs
	.align 2
.proc _EnableIntrs
.global _EnableIntrs
_EnableIntrs:
;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r0,#0
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L10
	nop	; delay slot nop
L10:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _EnableIntrs
	.align 2
.proc _RestoreIntrs
.global _RestoreIntrs
_RestoreIntrs:
;  Function 'RestoreIntrs'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r2,(r30)
	addi	r29,r29,#-8
	add	r1,r0,r29
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r3,r0,r1
	add	r1,r0,r3
	j	L11
	nop	; delay slot nop
L11:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _RestoreIntrs
	.align 2
.proc _MboxModuleInit
.global _MboxModuleInit
_MboxModuleInit:
;  Function 'MboxModuleInit'; 8 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	nop
	addi	r1,r0,#0
	sw	-12(r30),r1
L13:
	lw	r1,-12(r30)
	slei	r2,r1,#15
	bnez	r2,L16
	nop	; delay slot nop
	j	L14
	nop	; delay slot nop
L16:
	lhi	r1,((_mboxes)>>16)&0xffff
	addui	r1,r1,(_mboxes)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r4,r3,#0x3
	sub	r4,r4,r2
	slli	r2,r4,#0x2
	add	r1,r1,r2
	addi	r2,r0,#0
	sw	152(r1),r2
	addi	r1,r0,#0
	sw	-16(r30),r1
L17:
	lw	r1,-16(r30)
	slei	r2,r1,#31
	bnez	r2,L20
	nop	; delay slot nop
	j	L15
	nop	; delay slot nop
L20:
	lw	r1,-12(r30)
	add	r3,r0,r1
	slli	r2,r3,#0x2
	add	r2,r2,r1
	slli	r3,r2,#0x3
	sub	r3,r3,r1
	slli	r2,r3,#0x2
	lhi	r31,((_mboxes)>>16)&0xffff
	addui	r31,r31,(_mboxes)&0xffff
	add	r1,r2,r31
	lw	r2,-16(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	add	r1,r2,r1
	addi	r2,r1,#24
	addi	r1,r0,#0
	sw	(r2),r1
L19:
	lw	r2,-16(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-16(r30),r2
	j	L17
	nop	; delay slot nop
L18:
L15:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L13
	nop	; delay slot nop
L14:
	nop
	addi	r1,r0,#0
	sw	-12(r30),r1
L21:
	lw	r1,-12(r30)
	slei	r2,r1,#49
	bnez	r2,L24
	nop	; delay slot nop
	j	L22
	nop	; delay slot nop
L24:
	lhi	r1,((_mbox_msgs)>>16)&0xffff
	addui	r1,r1,(_mbox_msgs)&0xffff
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x3
	sub	r3,r3,r2
	slli	r4,r3,#0x2
	sub	r4,r4,r2
	slli	r2,r4,#0x2
	add	r1,r1,r2
	addi	r2,r0,#0
	sw	104(r1),r2
L23:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L21
	nop	; delay slot nop
L22:
L12:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxModuleInit
	.align 2
.proc _MboxCreate
.global _MboxCreate
_MboxCreate:
;  Function 'MboxCreate'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#8	; alloc local storage
	addi	r1,r0,#-1
	j	L25
	nop	; delay slot nop
L25:
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxCreate
	.align 2
.proc _MboxOpen
.global _MboxOpen
_MboxOpen:
;  Function 'MboxOpen'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#8	; alloc local storage
	addi	r1,r0,#-1
	j	L26
	nop	; delay slot nop
L26:
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxOpen
	.align 2
.proc _MboxClose
.global _MboxClose
_MboxClose:
;  Function 'MboxClose'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#8	; alloc local storage
	addi	r1,r0,#-1
	j	L27
	nop	; delay slot nop
L27:
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxClose
	.align 2
.proc _MboxSend
.global _MboxSend
_MboxSend:
;  Function 'MboxSend'; 16 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#40	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	add	r2,r0,r29
	jal	_GetCurrentPid
	nop	; delay slot nop
	sw	-20(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x2
	add	r3,r3,r2
	slli	r4,r3,#0x3
	sub	r4,r4,r2
	slli	r2,r4,#0x2
	lhi	r5,((_mboxes)>>16)&0xffff
	addui	r5,r5,(_mboxes)&0xffff
	add	r3,r2,r5
	lw	r2,12(r3)
	sw	(r1),r2
	jal	_LockHandleAcquire
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#-1
	j	L28
	nop	; delay slot nop
L28:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxSend
	.align 2
.proc _MboxRecv
.global _MboxRecv
_MboxRecv:
;  Function 'MboxRecv'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#8	; alloc local storage
	addi	r1,r0,#-1
	j	L29
	nop	; delay slot nop
L29:
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxRecv
	.align 2
.proc _MboxCloseAllByPid
.global _MboxCloseAllByPid
_MboxCloseAllByPid:
;  Function 'MboxCloseAllByPid'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#8	; alloc local storage
	addi	r1,r0,#-1
	j	L30
	nop	; delay slot nop
L30:
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MboxCloseAllByPid
.data
	.align 2
.global	_mboxes
_mboxes:
	.space 2496
	.align 2
.global	_mbox_msgs
_mbox_msgs:
	.space 5400
