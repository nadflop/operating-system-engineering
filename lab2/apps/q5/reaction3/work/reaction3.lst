 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 183
    4                      ; Text size: 4460
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage\000"
   82  00003004  6500    	
   83  00003006          	.align 2
   84  00003008          	LC1_LF0:
   85  00003008  3c68616e	.ascii "<handle_to_shared_memory_page> <handle_to_page_mapped_semaphore<handle"
   85  0000300c  646c655f	
   85  00003010  746f5f73	
   85  00003014  68617265	
   85  00003018  645f6d65	
   85  0000301c  6d6f7279	
   85  00003020  5f706167	
   85  00003024  653e203c	
   85  00003028  68616e64	
   85  0000302c  6c655f74	
   85  00003030  6f5f7061	
   85  00003034  67655f6d	
   85  00003038  61707065	
   85  0000303c  645f7365	
   85  00003040  6d617068	
   85  00003044  6f72653c	
   85  00003048  68616e64	
   85  0000304c  6c65    	
   86  0000304e  20746f20	.ascii " to lock>\000"
   86  00003052  6c6f636b	
   86  00003056  3e00    	
   87  00003058          	.align 2
   88  00003058          	LC2_LF0:
   89  00003058  4832202b	.ascii "H2 + O2 + SO2 -> H2SO4 reacted, PID:%d\n\000"
   89  0000305c  204f3220	
   89  00003060  2b20534f	
   89  00003064  32202d3e	
   89  00003068  20483253	
   89  0000306c  4f342072	
   89  00003070  65616374	
   89  00003074  65642c20	
   89  00003078  5049443a	
   89  0000307c  25640a00	
   90  00003080          	.align 2
   91  00003080          	LC3_LF0:
   92  00003080  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
   92  00003084  73656d61	
   92  00003088  70686f72	
   92  0000308c  6520735f	
   92  00003090  70726f63	
   92  00003094  735f636f	
   92  00003098  6d706c65	
   92  0000309c  74656420	
   92  000030a0  28256429	
   92  000030a4  20696e20	
   92  000030a8  00      	
   93  000030a9          	.align 2
   94  000030ac          	LC4_LF0:
   95  000030ac  65786974	.ascii "exiting..\n\000"
   95  000030b0  696e672e	
   95  000030b4  2e0a00  	
   96  000030b7          	.text
   97  000010d4          	.align 2
   98  000010d4          	.proc _main
   99  000010d4          	.global _main
  100  000010d4          	_main:
  101                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  102  000010d4  afbefffc	sw	-4(r29),r30; push fp
  103  000010d8  001df020	add	r30,r0,r29; fp = sp
  104  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  105  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  106  000010e4  8fc20000	lw	r2,(r30)
  107  000010e8  8fc40004	lw	r4,4(r30)
  108  000010ec  0c001074	jal	___main
  109  000010f0  54000000	nop; not filled.
  110  000010f4  64410007	snei	r1,r2,#7
  111  000010f8  1020004c	beqz	r1,L14_LF0
  112  000010fc  54000000	nop; not filled.
  113  00001100  23bdfff8	addi	r29,r29,#-8
  114  00001104  3c0a0000	lhi	r10,((LC0_LF0)>>16)&0xffff
  115  00001108  254a3000	addui	r10,r10,(LC0_LF0)&0xffff
  116  0000110c  afaa0000	sw	(r29),r10
  117  00001110  0c000248	jal	_Printf
  118  00001114  54000000	nop; not filled.
  119  00001118  8c8a0000	lw	r10,(r4)
  120  0000111c  afaa0000	sw	(r29),r10
  121  00001120  0c000238	jal	_Printf
  122  00001124  54000000	nop; not filled.
  123  00001128  3c0a0000	lhi	r10,((LC1_LF0)>>16)&0xffff
  124  0000112c  254a3008	addui	r10,r10,(LC1_LF0)&0xffff
  125  00001130  afaa0000	sw	(r29),r10
  126  00001134  0c000224	jal	_Printf
  127  00001138  54000000	nop; not filled.
  128  0000113c  0c0002d0	jal	_Exit
  129  00001140  54000000	nop; not filled.
  130  00001144  23bd0008	addi	r29,r29,#8
  131  00001148          	L14_LF0:
  132  00001148  23bdfff0	addi	r29,r29,#-16
  133  0000114c  8c8a0004	lw	r10,4(r4)
  134  00001150  afaa0000	sw	(r29),r10
  135  00001154  200a0000	addi	r10,r0,#0
  136  00001158  afaa0004	sw	4(r29),r10
  137  0000115c  200a000a	addi	r10,r0,#10
  138  00001160  afaa0008	sw	8(r29),r10
  139  00001164  0c000b54	jal	_dstrtol
  140  00001168  54000000	nop; not filled.
  141  0000116c  00014820	add	r9,r0,r1
  142  00001170  8c8a0008	lw	r10,8(r4)
  143  00001174  afaa0000	sw	(r29),r10
  144  00001178  200a0000	addi	r10,r0,#0
  145  0000117c  afaa0004	sw	4(r29),r10
  146  00001180  200a000a	addi	r10,r0,#10
  147  00001184  afaa0008	sw	8(r29),r10
  148  00001188  0c000b30	jal	_dstrtol
  149  0000118c  54000000	nop; not filled.
  150  00001190  00014020	add	r8,r0,r1
  151  00001194  8c8a000c	lw	r10,12(r4)
  152  00001198  afaa0000	sw	(r29),r10
  153  0000119c  200a0000	addi	r10,r0,#0
  154  000011a0  afaa0004	sw	4(r29),r10
  155  000011a4  200a000a	addi	r10,r0,#10
  156  000011a8  afaa0008	sw	8(r29),r10
  157  000011ac  0c000b0c	jal	_dstrtol
  158  000011b0  54000000	nop; not filled.
  159  000011b4  00013820	add	r7,r0,r1
  160  000011b8  8c8a0010	lw	r10,16(r4)
  161  000011bc  afaa0000	sw	(r29),r10
  162  000011c0  200a0000	addi	r10,r0,#0
  163  000011c4  afaa0004	sw	4(r29),r10
  164  000011c8  200a000a	addi	r10,r0,#10
  165  000011cc  afaa0008	sw	8(r29),r10
  166  000011d0  0c000ae8	jal	_dstrtol
  167  000011d4  54000000	nop; not filled.
  168  000011d8  00013020	add	r6,r0,r1
  169  000011dc  8c8a0014	lw	r10,20(r4)
  170  000011e0  afaa0000	sw	(r29),r10
  171  000011e4  200a0000	addi	r10,r0,#0
  172  000011e8  afaa0004	sw	4(r29),r10
  173  000011ec  200a000a	addi	r10,r0,#10
  174  000011f0  afaa0008	sw	8(r29),r10
  175  000011f4  0c000ac4	jal	_dstrtol
  176  000011f8  54000000	nop; not filled.
  177  000011fc  00012820	add	r5,r0,r1
  178  00001200  8c8a0018	lw	r10,24(r4)
  179  00001204  afaa0000	sw	(r29),r10
  180  00001208  200a0000	addi	r10,r0,#0
  181  0000120c  afaa0004	sw	4(r29),r10
  182  00001210  200a000a	addi	r10,r0,#10
  183  00001214  afaa0008	sw	8(r29),r10
  184  00001218  0c000aa0	jal	_dstrtol
  185  0000121c  54000000	nop; not filled.
  186  00001220  00011820	add	r3,r0,r1
  187  00001224  20020000	addi	r2,r0,#0
  188  00001228  23bd0010	addi	r29,r29,#16
  189  0000122c  0043082a	slt	r1,r2,r3
  190  00001230  1020006c	beqz	r1,L16_LF0
  191  00001234  54000000	nop; not filled.
  192  00001238          	L18_LF0:
  193  00001238  23bdfff8	addi	r29,r29,#-8
  194  0000123c  afa80000	sw	(r29),r8
  195  00001240  0c000160	jal	_sem_wait
  196  00001244  54000000	nop; not filled.
  197  00001248  afa70000	sw	(r29),r7
  198  0000124c  0c000154	jal	_sem_wait
  199  00001250  54000000	nop; not filled.
  200  00001254  afa60000	sw	(r29),r6
  201  00001258  0c000148	jal	_sem_wait
  202  0000125c  54000000	nop; not filled.
  203  00001260  afa50000	sw	(r29),r5
  204  00001264  0c000148	jal	_sem_signal
  205  00001268  54000000	nop; not filled.
  206  0000126c  0c0000f8	jal	_getpid
  207  00001270  54000000	nop; not filled.
  208  00001274  3c0a0000	lhi	r10,((LC2_LF0)>>16)&0xffff
  209  00001278  254a3058	addui	r10,r10,(LC2_LF0)&0xffff
  210  0000127c  afaa0000	sw	(r29),r10
  211  00001280  afa10004	sw	4(r29),r1
  212  00001284  0c0000d4	jal	_Printf
  213  00001288  54000000	nop; not filled.
  214  0000128c  23bd0008	addi	r29,r29,#8
  215  00001290  20420001	addi	r2,r2,#1
  216  00001294  0043082a	slt	r1,r2,r3
  217  00001298  1420ff9c	bnez	r1,L18_LF0
  218  0000129c  54000000	nop; not filled.
  219  000012a0          	L16_LF0:
  220  000012a0  23bdfff8	addi	r29,r29,#-8
  221  000012a4  afa90000	sw	(r29),r9
  222  000012a8  0c000104	jal	_sem_signal
  223  000012ac  54000000	nop; not filled.
  224  000012b0  23bd0008	addi	r29,r29,#8
  225  000012b4  64210001	snei	r1,r1,#1
  226  000012b8  10200050	beqz	r1,L20_LF0
  227  000012bc  54000000	nop; not filled.
  228  000012c0  23bdfff8	addi	r29,r29,#-8
  229  000012c4  3c0a0000	lhi	r10,((LC3_LF0)>>16)&0xffff
  230  000012c8  254a3080	addui	r10,r10,(LC3_LF0)&0xffff
  231  000012cc  afaa0000	sw	(r29),r10
  232  000012d0  afa90004	sw	4(r29),r9
  233  000012d4  0c000084	jal	_Printf
  234  000012d8  54000000	nop; not filled.
  235  000012dc  8c840000	lw	r4,(r4)
  236  000012e0  afa40000	sw	(r29),r4
  237  000012e4  0c000074	jal	_Printf
  238  000012e8  54000000	nop; not filled.
  239  000012ec  3c0a0000	lhi	r10,((LC4_LF0)>>16)&0xffff
  240  000012f0  254a30ac	addui	r10,r10,(LC4_LF0)&0xffff
  241  000012f4  afaa0000	sw	(r29),r10
  242  000012f8  0c000060	jal	_Printf
  243  000012fc  54000000	nop; not filled.
  244  00001300  0c00010c	jal	_Exit
  245  00001304  54000000	nop; not filled.
  246  00001308  23bd0008	addi	r29,r29,#8
  247  0000130c          	L20_LF0:
  248  0000130c  0c000e48	jal	_exit
  249  00001310  54000000	nop
  250  00001314          	.endproc _main
  251                      ;;;
  252                      ;;; Stub functions for DLX traps.
  253                      ;;;
  254                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  255                      ;;;
  256                      ;;; The traps such as Open and Close
  257                      ;;; (note the capital letters) are for use by user programs.  The traps
  258                      ;;; with names such as open and close (lower case) are for use by the OS.
  259                      ;;;
  262  00001314          	.align 2
  264                      ;;; The following are the traps to be used by user-level programs
  265                      ;;;
  267  00001314          	.align 2
  268  00001314          	.proc _Open
  269  00001314          	.global _Open
  270  00001314          	_Open:
  271                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  272                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  273                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  274  00001314  44000213	trap	#0x213
  275  00001318  4be00000	jr	r31
  276  0000131c  54000000	nop
  277  00001320          	.endproc _Open
  279  00001320          	.proc _Close
  280  00001320          	.global _Close
  281  00001320          	_Close:
  282  00001320  44000214	trap	#0x214
  283  00001324  4be00000	jr	r31
  284  00001328  54000000	nop
  285  0000132c          	.endproc _Close
  287  0000132c          	.proc _Read
  288  0000132c          	.global _Read
  289  0000132c          	_Read:
  290  0000132c  44000210	trap	#0x210
  291  00001330  4be00000	jr	r31
  292  00001334  54000000	nop
  293  00001338          	.endproc _Read
  295  00001338          	.proc _Write
  296  00001338          	.global _Write
  297  00001338          	_Write:
  298  00001338  44000211	trap	#0x211
  299  0000133c  4be00000	jr	r31
  300  00001340  54000000	nop
  301  00001344          	.endproc _Write
  303  00001344          	.proc _Lseek
  304  00001344          	.global _Lseek
  305  00001344          	_Lseek:
  306  00001344  44000212	trap	#0x212
  307  00001348  4be00000	jr	r31
  308  0000134c  54000000	nop
  309  00001350          	.endproc _Lseek
  311  00001350          	.proc _Putchar
  312  00001350          	.global _Putchar
  313  00001350          	_Putchar:
  314  00001350  44000280	trap	#0x280
  315  00001354  4be00000	jr	r31
  316  00001358  54000000	nop
  317  0000135c          	.endproc _Putchar
  319  0000135c          	.proc _Printf
  320  0000135c          	.global _Printf
  321  0000135c          	_Printf:
  322  0000135c  44000201	trap	#0x201
  323  00001360  4be00000	jr	r31
  324  00001364  54000000	nop
  325  00001368          	.endproc _Printf
  327  00001368          	.proc _getpid
  328  00001368          	.global _getpid
  329  00001368          	_getpid:
  330  00001368  44000431	trap	#0x431
  331  0000136c  4be00000	jr	r31
  332  00001370  54000000	nop
  333  00001374          	.endproc _getpid
  335  00001374          	.proc _process_create
  336  00001374          	.global _process_create
  337  00001374          	_process_create:
  338  00001374  44000432	trap	#0x432
  339  00001378  4be00000	jr	r31
  340  0000137c  54000000	nop
  341  00001380          	.endproc _process_create
  343  00001380          	.proc _shmget
  344  00001380          	.global _shmget
  345  00001380          	_shmget:
  346  00001380  44000440	trap	#0x440
  347  00001384  4be00000	jr	r31
  348  00001388  54000000	nop
  349  0000138c          	.endproc _shmget
  351  0000138c          	.proc _shmat
  352  0000138c          	.global _shmat
  353  0000138c          	_shmat:
  354  0000138c  44000441	trap	#0x441
  355  00001390  4be00000	jr	r31
  356  00001394  54000000	nop
  357  00001398          	.endproc _shmat
  359  00001398          	.proc _sem_create
  360  00001398          	.global _sem_create
  361  00001398          	_sem_create:
  362  00001398  44000450	trap	#0x450
  363  0000139c  4be00000	jr	r31
  364  000013a0  54000000	nop
  365  000013a4          	.endproc _sem_create
  367  000013a4          	.proc _sem_wait
  368  000013a4          	.global _sem_wait
  369  000013a4          	_sem_wait:
  370  000013a4  44000451	trap	#0x451
  371  000013a8  4be00000	jr	r31
  372  000013ac  54000000	nop
  373  000013b0          	.endproc _sem_wait
  375  000013b0          	.proc _sem_signal
  376  000013b0          	.global _sem_signal
  377  000013b0          	_sem_signal:
  378  000013b0  44000452	trap	#0x452
  379  000013b4  4be00000	jr	r31
  380  000013b8  54000000	nop
  381  000013bc          	.endproc _sem_signal
  383  000013bc          	.proc _lock_create
  384  000013bc          	.global _lock_create
  385  000013bc          	_lock_create:
  386  000013bc  44000453	trap	#0x453
  387  000013c0  4be00000	jr	r31
  388  000013c4  54000000	nop
  389  000013c8          	.endproc _lock_create
  391  000013c8          	.proc _lock_acquire
  392  000013c8          	.global _lock_acquire
  393  000013c8          	_lock_acquire:
  394  000013c8  44000454	trap	#0x454
  395  000013cc  4be00000	jr	r31
  396  000013d0  54000000	nop
  397  000013d4          	.endproc _lock_acquire
  399  000013d4          	.proc _lock_release
  400  000013d4          	.global _lock_release
  401  000013d4          	_lock_release:
  402  000013d4  44000455	trap	#0x455
  403  000013d8  4be00000	jr	r31
  404  000013dc  54000000	nop
  405  000013e0          	.endproc _lock_release
  407  000013e0          	.proc _cond_create
  408  000013e0          	.global _cond_create
  409  000013e0          	_cond_create:
  410  000013e0  44000456	trap	#0x456
  411  000013e4  4be00000	jr	r31
  412  000013e8  54000000	nop
  413  000013ec          	.endproc _cond_create
  415  000013ec          	.proc _cond_wait
  416  000013ec          	.global _cond_wait
  417  000013ec          	_cond_wait:
  418  000013ec  44000457	trap	#0x457
  419  000013f0  4be00000	jr	r31
  420  000013f4  54000000	nop
  421  000013f8          	.endproc _cond_wait
  423  000013f8          	.proc _cond_signal
  424  000013f8          	.global _cond_signal
  425  000013f8          	_cond_signal:
  426  000013f8  44000458	trap	#0x458
  427  000013fc  4be00000	jr	r31
  428  00001400  54000000	nop
  429  00001404          	.endproc _cond_signal
  431  00001404          	.proc _cond_broadcast
  432  00001404          	.global _cond_broadcast
  433  00001404          	_cond_broadcast:
  434  00001404  44000455	trap	#0x455
  435  00001408  4be00000	jr	r31
  436  0000140c  54000000	nop
  437  00001410          	.endproc _cond_broadcast
  439  00001410          	.proc _Exit
  440  00001410          	.global _Exit
  441  00001410          	_Exit:
  442  00001410  44000500	trap	#0x500
  443  00001414  4be00000	jr	r31
  444  00001418  54000000	nop
  445  0000141c          	.endproc _Exit
  446                      ; Compiled by GCC
  448  0000141c          	.align 2
  449  0000141c          	.proc _isspace
  450  0000141c          	.global _isspace
  451  0000141c          	_isspace:
  452                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  453  0000141c  afbefffc	sw	-4(r29),r30; push fp
  454  00001420  001df020	add	r30,r0,r29; fp = sp
  455  00001424  afbffff8	sw	-8(r29),r31; push ret addr
  456  00001428  2fbd0018	subui	r29,r29,#24; alloc local storage
  457  0000142c  afa20000	sw	0(r29),r2
  458  00001430  afa30004	sw	4(r29),r3
  459  00001434  afa40008	sw	8(r29),r4
  460  00001438  83c20003	lb	r2,3(r30)
  461  0000143c  20010000	addi	r1,r0,#0
  462  00001440  304300ff	andi	r3,r2,#0x00ff
  463  00001444  60640020	seqi	r4,r3,#32
  464  00001448  1480002c	bnez	r4,L3_LF2
  465  0000144c  54000000	nop; delay slot nop
  466  00001450  304300ff	andi	r3,r2,#0x00ff
  467  00001454  60640009	seqi	r4,r3,#9
  468  00001458  1480001c	bnez	r4,L3_LF2
  469  0000145c  54000000	nop; delay slot nop
  470  00001460  304300ff	andi	r3,r2,#0x00ff
  471  00001464  6064000a	seqi	r4,r3,#10
  472  00001468  1480000c	bnez	r4,L3_LF2
  473  0000146c  54000000	nop; delay slot nop
  474  00001470  08000008	j	L2_LF2
  475  00001474  54000000	nop; delay slot nop
  476  00001478          	L3_LF2:
  477  00001478  20010001	addi	r1,r0,#1
  478  0000147c          	L2_LF2:
  479  0000147c  08000004	j	L1_LF2
  480  00001480  54000000	nop; delay slot nop
  481  00001484          	L1_LF2:
  482  00001484  8fa20000	lw	r2,0(r29)
  483  00001488  8fa30004	lw	r3,4(r29)
  484  0000148c  8fa40008	lw	r4,8(r29)
  485  00001490  8fdffff8	lw	r31,-8(r30)
  486  00001494  001ee820	add	r29,r0,r30
  487  00001498  8fdefffc	lw	r30,-4(r30)
  488  0000149c  4be00000	jr	r31
  489  000014a0  54000000	nop
  490  000014a4          	.endproc _isspace
  491  000014a4          	.align 2
  492  000014a4          	.proc _isxdigit
  493  000014a4          	.global _isxdigit
  494  000014a4          	_isxdigit:
  495                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  496  000014a4  afbefffc	sw	-4(r29),r30; push fp
  497  000014a8  001df020	add	r30,r0,r29; fp = sp
  498  000014ac  afbffff8	sw	-8(r29),r31; push ret addr
  499  000014b0  2fbd0018	subui	r29,r29,#24; alloc local storage
  500  000014b4  afa20000	sw	0(r29),r2
  501  000014b8  afa30004	sw	4(r29),r3
  502  000014bc  afa40008	sw	8(r29),r4
  503  000014c0  83c20003	lb	r2,3(r30)
  504  000014c4  20010000	addi	r1,r0,#0
  505  000014c8  304300ff	andi	r3,r2,#0x00ff
  506  000014cc  6c64002f	sgtui	r4,r3,#47
  507  000014d0  1080001c	beqz	r4,L7_LF2
  508  000014d4  54000000	nop; delay slot nop
  509  000014d8  304300ff	andi	r3,r2,#0x00ff
  510  000014dc  70640039	sleui	r4,r3,#57
  511  000014e0  1480005c	bnez	r4,L6_LF2
  512  000014e4  54000000	nop; delay slot nop
  513  000014e8  08000004	j	L7_LF2
  514  000014ec  54000000	nop; delay slot nop
  515  000014f0          	L7_LF2:
  516  000014f0  304300ff	andi	r3,r2,#0x00ff
  517  000014f4  6c640060	sgtui	r4,r3,#96
  518  000014f8  1080001c	beqz	r4,L8_LF2
  519  000014fc  54000000	nop; delay slot nop
  520  00001500  304300ff	andi	r3,r2,#0x00ff
  521  00001504  70640066	sleui	r4,r3,#102
  522  00001508  14800034	bnez	r4,L6_LF2
  523  0000150c  54000000	nop; delay slot nop
  524  00001510  08000004	j	L8_LF2
  525  00001514  54000000	nop; delay slot nop
  526  00001518          	L8_LF2:
  527  00001518  304300ff	andi	r3,r2,#0x00ff
  528  0000151c  6c640040	sgtui	r4,r3,#64
  529  00001520  10800020	beqz	r4,L5_LF2
  530  00001524  54000000	nop; delay slot nop
  531  00001528  304300ff	andi	r3,r2,#0x00ff
  532  0000152c  70640041	sleui	r4,r3,#65
  533  00001530  1480000c	bnez	r4,L6_LF2
  534  00001534  54000000	nop; delay slot nop
  535  00001538  08000008	j	L5_LF2
  536  0000153c  54000000	nop; delay slot nop
  537  00001540          	L6_LF2:
  538  00001540  20010001	addi	r1,r0,#1
  539  00001544          	L5_LF2:
  540  00001544  08000004	j	L4_LF2
  541  00001548  54000000	nop; delay slot nop
  542  0000154c          	L4_LF2:
  543  0000154c  8fa20000	lw	r2,0(r29)
  544  00001550  8fa30004	lw	r3,4(r29)
  545  00001554  8fa40008	lw	r4,8(r29)
  546  00001558  8fdffff8	lw	r31,-8(r30)
  547  0000155c  001ee820	add	r29,r0,r30
  548  00001560  8fdefffc	lw	r30,-4(r30)
  549  00001564  4be00000	jr	r31
  550  00001568  54000000	nop
  551  0000156c          	.endproc _isxdigit
  552  0000156c          	.align 2
  553  0000156c          	.proc _dstrcpy
  554  0000156c          	.global _dstrcpy
  555  0000156c          	_dstrcpy:
  556                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  557  0000156c  afbefffc	sw	-4(r29),r30; push fp
  558  00001570  001df020	add	r30,r0,r29; fp = sp
  559  00001574  afbffff8	sw	-8(r29),r31; push ret addr
  560  00001578  2fbd0018	subui	r29,r29,#24; alloc local storage
  561  0000157c  afa20000	sw	0(r29),r2
  562  00001580  afa30004	sw	4(r29),r3
  563  00001584  8fc10000	lw	r1,(r30)
  564  00001588  afc1fff4	sw	-12(r30),r1
  565  0000158c          	L10_LF2:
  566  0000158c  8fc10000	lw	r1,(r30)
  567  00001590  20220001	addi	r2,r1,#1
  568  00001594  afc20000	sw	(r30),r2
  569  00001598  8fc20004	lw	r2,4(r30)
  570  0000159c  20430001	addi	r3,r2,#1
  571  000015a0  afc30004	sw	4(r30),r3
  572  000015a4  80420000	lb	r2,(r2)
  573  000015a8  a0220000	sb	(r1),r2
  574  000015ac  a3c2fff3	sb	-13(r30),r2
  575  000015b0          	L12_LF2:
  576  000015b0  93c1fff3	lbu	r1,-13(r30)
  577  000015b4  64220000	snei	r2,r1,#0
  578  000015b8  1440000c	bnez	r2,L13_LF2
  579  000015bc  54000000	nop; delay slot nop
  580  000015c0  0800000c	j	L11_LF2
  581  000015c4  54000000	nop; delay slot nop
  582  000015c8          	L13_LF2:
  583  000015c8  0bffffc0	j	L10_LF2
  584  000015cc  54000000	nop; delay slot nop
  585  000015d0          	L11_LF2:
  586  000015d0  8fc1fff4	lw	r1,-12(r30)
  587  000015d4  08000004	j	L9_LF2
  588  000015d8  54000000	nop; delay slot nop
  589  000015dc          	L9_LF2:
  590  000015dc  8fa20000	lw	r2,0(r29)
  591  000015e0  8fa30004	lw	r3,4(r29)
  592  000015e4  8fdffff8	lw	r31,-8(r30)
  593  000015e8  001ee820	add	r29,r0,r30
  594  000015ec  8fdefffc	lw	r30,-4(r30)
  595  000015f0  4be00000	jr	r31
  596  000015f4  54000000	nop
  597  000015f8          	.endproc _dstrcpy
  598  000015f8          	.align 2
  599  000015f8          	.proc _dstrncpy
  600  000015f8          	.global _dstrncpy
  601  000015f8          	_dstrncpy:
  602                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  603  000015f8  afbefffc	sw	-4(r29),r30; push fp
  604  000015fc  001df020	add	r30,r0,r29; fp = sp
  605  00001600  afbffff8	sw	-8(r29),r31; push ret addr
  606  00001604  2fbd0018	subui	r29,r29,#24; alloc local storage
  607  00001608  afa20000	sw	0(r29),r2
  608  0000160c  afa30004	sw	4(r29),r3
  609  00001610  8fc10000	lw	r1,(r30)
  610  00001614  afc1fff4	sw	-12(r30),r1
  611  00001618          	L15_LF2:
  612  00001618  8fc10008	lw	r1,8(r30)
  613  0000161c  2022ffff	addi	r2,r1,#-1
  614  00001620  afc20008	sw	8(r30),r2
  615  00001624  70210000	slei	r1,r1,#0
  616  00001628  1020000c	beqz	r1,L18_LF2
  617  0000162c  54000000	nop; delay slot nop
  618  00001630  08000048	j	L16_LF2
  619  00001634  54000000	nop; delay slot nop
  620  00001638          	L18_LF2:
  621  00001638  8fc10000	lw	r1,(r30)
  622  0000163c  20220001	addi	r2,r1,#1
  623  00001640  afc20000	sw	(r30),r2
  624  00001644  8fc20004	lw	r2,4(r30)
  625  00001648  20430001	addi	r3,r2,#1
  626  0000164c  afc30004	sw	4(r30),r3
  627  00001650  80420000	lb	r2,(r2)
  628  00001654  a0220000	sb	(r1),r2
  629  00001658  a3c2fff3	sb	-13(r30),r2
  630  0000165c          	L17_LF2:
  631  0000165c  93c1fff3	lbu	r1,-13(r30)
  632  00001660  64220000	snei	r2,r1,#0
  633  00001664  1440000c	bnez	r2,L19_LF2
  634  00001668  54000000	nop; delay slot nop
  635  0000166c  0800000c	j	L16_LF2
  636  00001670  54000000	nop; delay slot nop
  637  00001674          	L19_LF2:
  638  00001674  0bffffa0	j	L15_LF2
  639  00001678  54000000	nop; delay slot nop
  640  0000167c          	L16_LF2:
  641  0000167c  8fc1fff4	lw	r1,-12(r30)
  642  00001680  08000004	j	L14_LF2
  643  00001684  54000000	nop; delay slot nop
  644  00001688          	L14_LF2:
  645  00001688  8fa20000	lw	r2,0(r29)
  646  0000168c  8fa30004	lw	r3,4(r29)
  647  00001690  8fdffff8	lw	r31,-8(r30)
  648  00001694  001ee820	add	r29,r0,r30
  649  00001698  8fdefffc	lw	r30,-4(r30)
  650  0000169c  4be00000	jr	r31
  651  000016a0  54000000	nop
  652  000016a4          	.endproc _dstrncpy
  653  000016a4          	.align 2
  654  000016a4          	.proc _dstrcat
  655  000016a4          	.global _dstrcat
  656  000016a4          	_dstrcat:
  657                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  658  000016a4  afbefffc	sw	-4(r29),r30; push fp
  659  000016a8  001df020	add	r30,r0,r29; fp = sp
  660  000016ac  afbffff8	sw	-8(r29),r31; push ret addr
  661  000016b0  2fbd0018	subui	r29,r29,#24; alloc local storage
  662  000016b4  afa20000	sw	0(r29),r2
  663  000016b8  8fc10000	lw	r1,(r30)
  664  000016bc  afc1fff4	sw	-12(r30),r1
  665  000016c0          	L21_LF2:
  666  000016c0  8fc10000	lw	r1,(r30)
  667  000016c4  90220000	lbu	r2,(r1)
  668  000016c8  64410000	snei	r1,r2,#0
  669  000016cc  1420000c	bnez	r1,L23_LF2
  670  000016d0  54000000	nop; delay slot nop
  671  000016d4  0800001c	j	L22_LF2
  672  000016d8  54000000	nop; delay slot nop
  673  000016dc          	L23_LF2:
  674  000016dc  8fc20000	lw	r2,(r30)
  675  000016e0  20410001	addi	r1,r2,#1
  676  000016e4  00011020	add	r2,r0,r1
  677  000016e8  afc20000	sw	(r30),r2
  678  000016ec  0bffffd0	j	L21_LF2
  679  000016f0  54000000	nop; delay slot nop
  680  000016f4          	L22_LF2:
  681  000016f4  23bdfff8	addi	r29,r29,#-8
  682  000016f8  001d0820	add	r1,r0,r29
  683  000016fc  8fc20000	lw	r2,(r30)
  684  00001700  ac220000	sw	(r1),r2
  685  00001704  8fc20004	lw	r2,4(r30)
  686  00001708  ac220004	sw	4(r1),r2
  687  0000170c  0ffffe5c	jal	_dstrcpy
  688  00001710  54000000	nop; delay slot nop
  689  00001714  23bd0008	addi	r29,r29,#8
  690  00001718  8fc1fff4	lw	r1,-12(r30)
  691  0000171c  08000004	j	L20_LF2
  692  00001720  54000000	nop; delay slot nop
  693  00001724          	L20_LF2:
  694  00001724  8fa20000	lw	r2,0(r29)
  695  00001728  8fdffff8	lw	r31,-8(r30)
  696  0000172c  001ee820	add	r29,r0,r30
  697  00001730  8fdefffc	lw	r30,-4(r30)
  698  00001734  4be00000	jr	r31
  699  00001738  54000000	nop
  700  0000173c          	.endproc _dstrcat
  701  0000173c          	.align 2
  702  0000173c          	.proc _dstrncmp
  703  0000173c          	.global _dstrncmp
  704  0000173c          	_dstrncmp:
  705                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  706  0000173c  afbefffc	sw	-4(r29),r30; push fp
  707  00001740  001df020	add	r30,r0,r29; fp = sp
  708  00001744  afbffff8	sw	-8(r29),r31; push ret addr
  709  00001748  2fbd0018	subui	r29,r29,#24; alloc local storage
  710  0000174c  afa20000	sw	0(r29),r2
  711  00001750  afa30004	sw	4(r29),r3
  712  00001754  54000000	nop
  713  00001758  20010000	addi	r1,r0,#0
  714  0000175c  afc1fff4	sw	-12(r30),r1
  715  00001760          	L25_LF2:
  716  00001760  8fc1fff4	lw	r1,-12(r30)
  717  00001764  8fc20008	lw	r2,8(r30)
  718  00001768  0022082a	slt	r1,r1,r2
  719  0000176c  1420000c	bnez	r1,L28_LF2
  720  00001770  54000000	nop; delay slot nop
  721  00001774  08000088	j	L26_LF2
  722  00001778  54000000	nop; delay slot nop
  723  0000177c          	L28_LF2:
  724  0000177c  8fc10004	lw	r1,4(r30)
  725  00001780  90220000	lbu	r2,(r1)
  726  00001784  64410000	snei	r1,r2,#0
  727  00001788  14200018	bnez	r1,L29_LF2
  728  0000178c  54000000	nop; delay slot nop
  729  00001790  20010000	addi	r1,r0,#0
  730  00001794  080000d8	j	L24_LF2
  731  00001798  54000000	nop; delay slot nop
  732  0000179c  08000028	j	L30_LF2
  733  000017a0  54000000	nop; delay slot nop
  734  000017a4          	L29_LF2:
  735  000017a4  8fc10000	lw	r1,(r30)
  736  000017a8  8fc20004	lw	r2,4(r30)
  737  000017ac  90210000	lbu	r1,(r1)
  738  000017b0  90420000	lbu	r2,(r2)
  739  000017b4  00220829	sne	r1,r1,r2
  740  000017b8  1020000c	beqz	r1,L30_LF2
  741  000017bc  54000000	nop; delay slot nop
  742  000017c0  0800003c	j	L26_LF2
  743  000017c4  54000000	nop; delay slot nop
  744  000017c8          	L31_LF2:
  745  000017c8          	L30_LF2:
  746  000017c8  8fc20000	lw	r2,(r30)
  747  000017cc  20410001	addi	r1,r2,#1
  748  000017d0  00011020	add	r2,r0,r1
  749  000017d4  afc20000	sw	(r30),r2
  750  000017d8  8fc20004	lw	r2,4(r30)
  751  000017dc  20410001	addi	r1,r2,#1
  752  000017e0  00011020	add	r2,r0,r1
  753  000017e4  afc20004	sw	4(r30),r2
  754  000017e8          	L27_LF2:
  755  000017e8  8fc2fff4	lw	r2,-12(r30)
  756  000017ec  20410001	addi	r1,r2,#1
  757  000017f0  00011020	add	r2,r0,r1
  758  000017f4  afc2fff4	sw	-12(r30),r2
  759  000017f8  0bffff64	j	L25_LF2
  760  000017fc  54000000	nop; delay slot nop
  761  00001800          	L26_LF2:
  762  00001800  8fc1fff4	lw	r1,-12(r30)
  763  00001804  8fc20008	lw	r2,8(r30)
  764  00001808  00220828	seq	r1,r1,r2
  765  0000180c  10200018	beqz	r1,L32_LF2
  766  00001810  54000000	nop; delay slot nop
  767  00001814  20010000	addi	r1,r0,#0
  768  00001818  08000054	j	L24_LF2
  769  0000181c  54000000	nop; delay slot nop
  770  00001820  0800004c	j	L33_LF2
  771  00001824  54000000	nop; delay slot nop
  772  00001828          	L32_LF2:
  773  00001828  8fc20000	lw	r2,(r30)
  774  0000182c  90410000	lbu	r1,(r2)
  775  00001830  8fc20004	lw	r2,4(r30)
  776  00001834  90430000	lbu	r3,(r2)
  777  00001838  00230822	sub	r1,r1,r3
  778  0000183c  74220000	sgei	r2,r1,#0
  779  00001840  10400020	beqz	r2,L34_LF2
  780  00001844  54000000	nop; delay slot nop
  781  00001848  8fc10000	lw	r1,(r30)
  782  0000184c  8fc20004	lw	r2,4(r30)
  783  00001850  90210000	lbu	r1,(r1)
  784  00001854  90420000	lbu	r2,(r2)
  785  00001858  00220829	sne	r1,r1,r2
  786  0000185c  08000008	j	L35_LF2
  787  00001860  54000000	nop; delay slot nop
  788  00001864          	L34_LF2:
  789  00001864  2001ffff	addi	r1,r0,#-1
  790  00001868          	L35_LF2:
  791  00001868  08000004	j	L24_LF2
  792  0000186c  54000000	nop; delay slot nop
  793  00001870          	L33_LF2:
  794  00001870          	L24_LF2:
  795  00001870  8fa20000	lw	r2,0(r29)
  796  00001874  8fa30004	lw	r3,4(r29)
  797  00001878  8fdffff8	lw	r31,-8(r30)
  798  0000187c  001ee820	add	r29,r0,r30
  799  00001880  8fdefffc	lw	r30,-4(r30)
  800  00001884  4be00000	jr	r31
  801  00001888  54000000	nop
  802  0000188c          	.endproc _dstrncmp
  803  0000188c          	.align 2
  804  0000188c          	.proc _dstrlen
  805  0000188c          	.global _dstrlen
  806  0000188c          	_dstrlen:
  807                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  808  0000188c  afbefffc	sw	-4(r29),r30; push fp
  809  00001890  001df020	add	r30,r0,r29; fp = sp
  810  00001894  afbffff8	sw	-8(r29),r31; push ret addr
  811  00001898  2fbd0018	subui	r29,r29,#24; alloc local storage
  812  0000189c  afa20000	sw	0(r29),r2
  813  000018a0  20010000	addi	r1,r0,#0
  814  000018a4  afc1fff4	sw	-12(r30),r1
  815  000018a8          	L37_LF2:
  816  000018a8  8fc10000	lw	r1,(r30)
  817  000018ac  20220001	addi	r2,r1,#1
  818  000018b0  afc20000	sw	(r30),r2
  819  000018b4  90210000	lbu	r1,(r1)
  820  000018b8  64220000	snei	r2,r1,#0
  821  000018bc  1440000c	bnez	r2,L39_LF2
  822  000018c0  54000000	nop; delay slot nop
  823  000018c4  0800001c	j	L38_LF2
  824  000018c8  54000000	nop; delay slot nop
  825  000018cc          	L39_LF2:
  826  000018cc  8fc2fff4	lw	r2,-12(r30)
  827  000018d0  20410001	addi	r1,r2,#1
  828  000018d4  00011020	add	r2,r0,r1
  829  000018d8  afc2fff4	sw	-12(r30),r2
  830  000018dc  0bffffc8	j	L37_LF2
  831  000018e0  54000000	nop; delay slot nop
  832  000018e4          	L38_LF2:
  833  000018e4  8fc1fff4	lw	r1,-12(r30)
  834  000018e8  08000004	j	L36_LF2
  835  000018ec  54000000	nop; delay slot nop
  836  000018f0          	L36_LF2:
  837  000018f0  8fa20000	lw	r2,0(r29)
  838  000018f4  8fdffff8	lw	r31,-8(r30)
  839  000018f8  001ee820	add	r29,r0,r30
  840  000018fc  8fdefffc	lw	r30,-4(r30)
  841  00001900  4be00000	jr	r31
  842  00001904  54000000	nop
  843  00001908          	.endproc _dstrlen
  844  00001908          	.align 2
  845  00001908          	.proc _dstrstr
  846  00001908          	.global _dstrstr
  847  00001908          	_dstrstr:
  848                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  849  00001908  afbefffc	sw	-4(r29),r30; push fp
  850  0000190c  001df020	add	r30,r0,r29; fp = sp
  851  00001910  afbffff8	sw	-8(r29),r31; push ret addr
  852  00001914  2fbd0018	subui	r29,r29,#24; alloc local storage
  853  00001918  afa20000	sw	0(r29),r2
  854  0000191c  23bdfff8	addi	r29,r29,#-8
  855  00001920  001d0820	add	r1,r0,r29
  856  00001924  8fc20004	lw	r2,4(r30)
  857  00001928  ac220000	sw	(r1),r2
  858  0000192c  0fffff5c	jal	_dstrlen
  859  00001930  54000000	nop; delay slot nop
  860  00001934  23bd0008	addi	r29,r29,#8
  861  00001938  afc1fff4	sw	-12(r30),r1
  862  0000193c          	L41_LF2:
  863  0000193c  8fc10000	lw	r1,(r30)
  864  00001940  90220000	lbu	r2,(r1)
  865  00001944  64410000	snei	r1,r2,#0
  866  00001948  1420000c	bnez	r1,L43_LF2
  867  0000194c  54000000	nop; delay slot nop
  868  00001950  08000060	j	L42_LF2
  869  00001954  54000000	nop; delay slot nop
  870  00001958          	L43_LF2:
  871  00001958  23bdfff0	addi	r29,r29,#-16
  872  0000195c  001d0820	add	r1,r0,r29
  873  00001960  8fc20000	lw	r2,(r30)
  874  00001964  ac220000	sw	(r1),r2
  875  00001968  8fc20004	lw	r2,4(r30)
  876  0000196c  ac220004	sw	4(r1),r2
  877  00001970  8fc2fff4	lw	r2,-12(r30)
  878  00001974  ac220008	sw	8(r1),r2
  879  00001978  0ffffdc0	jal	_dstrncmp
  880  0000197c  54000000	nop; delay slot nop
  881  00001980  23bd0010	addi	r29,r29,#16
  882  00001984  64220000	snei	r2,r1,#0
  883  00001988  14400010	bnez	r2,L44_LF2
  884  0000198c  54000000	nop; delay slot nop
  885  00001990  8fc10000	lw	r1,(r30)
  886  00001994  08000028	j	L40_LF2
  887  00001998  54000000	nop; delay slot nop
  888  0000199c          	L44_LF2:
  889  0000199c  8fc20000	lw	r2,(r30)
  890  000019a0  20410001	addi	r1,r2,#1
  891  000019a4  00011020	add	r2,r0,r1
  892  000019a8  afc20000	sw	(r30),r2
  893  000019ac  0bffff8c	j	L41_LF2
  894  000019b0  54000000	nop; delay slot nop
  895  000019b4          	L42_LF2:
  896  000019b4  20010000	addi	r1,r0,#0
  897  000019b8  08000004	j	L40_LF2
  898  000019bc  54000000	nop; delay slot nop
  899  000019c0          	L40_LF2:
  900  000019c0  8fa20000	lw	r2,0(r29)
  901  000019c4  8fdffff8	lw	r31,-8(r30)
  902  000019c8  001ee820	add	r29,r0,r30
  903  000019cc  8fdefffc	lw	r30,-4(r30)
  904  000019d0  4be00000	jr	r31
  905  000019d4  54000000	nop
  906  000019d8          	.endproc _dstrstr
  907  000019d8          	.align 2
  908  000019d8          	.proc _dmindex
  909  000019d8          	.global _dmindex
  910  000019d8          	_dmindex:
  911                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  912  000019d8  afbefffc	sw	-4(r29),r30; push fp
  913  000019dc  001df020	add	r30,r0,r29; fp = sp
  914  000019e0  afbffff8	sw	-8(r29),r31; push ret addr
  915  000019e4  2fbd0018	subui	r29,r29,#24; alloc local storage
  916  000019e8  afa20000	sw	0(r29),r2
  917  000019ec  54000000	nop
  918  000019f0          	L46_LF2:
  919  000019f0  8fc10000	lw	r1,(r30)
  920  000019f4  90220000	lbu	r2,(r1)
  921  000019f8  64410000	snei	r1,r2,#0
  922  000019fc  1420000c	bnez	r1,L48_LF2
  923  00001a00  54000000	nop; delay slot nop
  924  00001a04  08000070	j	L47_LF2
  925  00001a08  54000000	nop; delay slot nop
  926  00001a0c          	L48_LF2:
  927  00001a0c  8fc10004	lw	r1,4(r30)
  928  00001a10  afc1fff4	sw	-12(r30),r1
  929  00001a14          	L49_LF2:
  930  00001a14  8fc1fff4	lw	r1,-12(r30)
  931  00001a18  90220000	lbu	r2,(r1)
  932  00001a1c  64410000	snei	r1,r2,#0
  933  00001a20  1420000c	bnez	r1,L52_LF2
  934  00001a24  54000000	nop; delay slot nop
  935  00001a28  08000044	j	L50_LF2
  936  00001a2c  54000000	nop; delay slot nop
  937  00001a30          	L52_LF2:
  938  00001a30  8fc10000	lw	r1,(r30)
  939  00001a34  8fc2fff4	lw	r2,-12(r30)
  940  00001a38  90210000	lbu	r1,(r1)
  941  00001a3c  90420000	lbu	r2,(r2)
  942  00001a40  00220828	seq	r1,r1,r2
  943  00001a44  10200010	beqz	r1,L51_LF2
  944  00001a48  54000000	nop; delay slot nop
  945  00001a4c  8fc10000	lw	r1,(r30)
  946  00001a50  08000030	j	L45_LF2
  947  00001a54  54000000	nop; delay slot nop
  948  00001a58          	L53_LF2:
  949  00001a58          	L51_LF2:
  950  00001a58  8fc2fff4	lw	r2,-12(r30)
  951  00001a5c  20410001	addi	r1,r2,#1
  952  00001a60  00011020	add	r2,r0,r1
  953  00001a64  afc2fff4	sw	-12(r30),r2
  954  00001a68  0bffffa8	j	L49_LF2
  955  00001a6c  54000000	nop; delay slot nop
  956  00001a70          	L50_LF2:
  957  00001a70  0bffff7c	j	L46_LF2
  958  00001a74  54000000	nop; delay slot nop
  959  00001a78          	L47_LF2:
  960  00001a78  20010000	addi	r1,r0,#0
  961  00001a7c  08000004	j	L45_LF2
  962  00001a80  54000000	nop; delay slot nop
  963  00001a84          	L45_LF2:
  964  00001a84  8fa20000	lw	r2,0(r29)
  965  00001a88  8fdffff8	lw	r31,-8(r30)
  966  00001a8c  001ee820	add	r29,r0,r30
  967  00001a90  8fdefffc	lw	r30,-4(r30)
  968  00001a94  4be00000	jr	r31
  969  00001a98  54000000	nop
  970  00001a9c          	.endproc _dmindex
  971  00001a9c          	.align 2
  972  00001a9c          	.proc _dindex
  973  00001a9c          	.global _dindex
  974  00001a9c          	_dindex:
  975                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  976  00001a9c  afbefffc	sw	-4(r29),r30; push fp
  977  00001aa0  001df020	add	r30,r0,r29; fp = sp
  978  00001aa4  afbffff8	sw	-8(r29),r31; push ret addr
  979  00001aa8  2fbd0010	subui	r29,r29,#16; alloc local storage
  980  00001aac  afa20000	sw	0(r29),r2
  981  00001ab0  54000000	nop
  982  00001ab4          	L55_LF2:
  983  00001ab4  8fc10000	lw	r1,(r30)
  984  00001ab8  90220000	lbu	r2,(r1)
  985  00001abc  64410000	snei	r1,r2,#0
  986  00001ac0  1420000c	bnez	r1,L57_LF2
  987  00001ac4  54000000	nop; delay slot nop
  988  00001ac8  08000040	j	L56_LF2
  989  00001acc  54000000	nop; delay slot nop
  990  00001ad0          	L57_LF2:
  991  00001ad0  8fc10000	lw	r1,(r30)
  992  00001ad4  90220000	lbu	r2,(r1)
  993  00001ad8  8fc10004	lw	r1,4(r30)
  994  00001adc  00411028	seq	r2,r2,r1
  995  00001ae0  10400010	beqz	r2,L58_LF2
  996  00001ae4  54000000	nop; delay slot nop
  997  00001ae8  8fc10000	lw	r1,(r30)
  998  00001aec  08000028	j	L54_LF2
  999  00001af0  54000000	nop; delay slot nop
 1000  00001af4          	L58_LF2:
 1001  00001af4  8fc20000	lw	r2,(r30)
 1002  00001af8  20410001	addi	r1,r2,#1
 1003  00001afc  00011020	add	r2,r0,r1
 1004  00001b00  afc20000	sw	(r30),r2
 1005  00001b04  0bffffac	j	L55_LF2
 1006  00001b08  54000000	nop; delay slot nop
 1007  00001b0c          	L56_LF2:
 1008  00001b0c  20010000	addi	r1,r0,#0
 1009  00001b10  08000004	j	L54_LF2
 1010  00001b14  54000000	nop; delay slot nop
 1011  00001b18          	L54_LF2:
 1012  00001b18  8fa20000	lw	r2,0(r29)
 1013  00001b1c  8fdffff8	lw	r31,-8(r30)
 1014  00001b20  001ee820	add	r29,r0,r30
 1015  00001b24  8fdefffc	lw	r30,-4(r30)
 1016  00001b28  4be00000	jr	r31
 1017  00001b2c  54000000	nop
 1018  00001b30          	.endproc _dindex
 1019  00001b30          	.align 2
 1020  00001b30          	.proc _ditoa
 1021  00001b30          	.global _ditoa
 1022  00001b30          	_ditoa:
 1023                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1024  00001b30  afbefffc	sw	-4(r29),r30; push fp
 1025  00001b34  001df020	add	r30,r0,r29; fp = sp
 1026  00001b38  afbffff8	sw	-8(r29),r31; push ret addr
 1027  00001b3c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1028  00001b40  afa20000	sw	0(r29),r2
 1029  00001b44  afa30004	sw	4(r29),r3
 1030  00001b48  8fc10000	lw	r1,(r30)
 1031  00001b4c  68220000	slti	r2,r1,#0
 1032  00001b50  1040002c	beqz	r2,L60_LF2
 1033  00001b54  54000000	nop; delay slot nop
 1034  00001b58  8fc10004	lw	r1,4(r30)
 1035  00001b5c  20220001	addi	r2,r1,#1
 1036  00001b60  afc20004	sw	4(r30),r2
 1037  00001b64  2002002d	addi	r2,r0,(#0x2d)&0xff
 1038  00001b68  a0220000	sb	(r1),r2
 1039  00001b6c  8fc10000	lw	r1,(r30)
 1040  00001b70  00011022	sub	r2,r0,r1
 1041  00001b74  afc20000	sw	(r30),r2
 1042  00001b78  08000118	j	L61_LF2
 1043  00001b7c  54000000	nop; delay slot nop
 1044  00001b80          	L60_LF2:
 1045  00001b80  8fc10000	lw	r1,(r30)
 1046  00001b84  64220000	snei	r2,r1,#0
 1047  00001b88  14400020	bnez	r2,L62_LF2
 1048  00001b8c  54000000	nop; delay slot nop
 1049  00001b90  8fc10004	lw	r1,4(r30)
 1050  00001b94  20220001	addi	r2,r1,#1
 1051  00001b98  afc20004	sw	4(r30),r2
 1052  00001b9c  20020030	addi	r2,r0,(#0x30)&0xff
 1053  00001ba0  a0220000	sb	(r1),r2
 1054  00001ba4  080000ec	j	L61_LF2
 1055  00001ba8  54000000	nop; delay slot nop
 1056  00001bac          	L62_LF2:
 1057  00001bac  20010001	addi	r1,r0,#1
 1058  00001bb0  afc1fff4	sw	-12(r30),r1
 1059  00001bb4          	L64_LF2:
 1060  00001bb4  8fc1fff4	lw	r1,-12(r30)
 1061  00001bb8  8fc20000	lw	r2,(r30)
 1062  00001bbc  0022082c	sle	r1,r1,r2
 1063  00001bc0  1420000c	bnez	r1,L66_LF2
 1064  00001bc4  54000000	nop; delay slot nop
 1065  00001bc8  08000024	j	L65_LF2
 1066  00001bcc  54000000	nop; delay slot nop
 1067  00001bd0          	L67_LF2:
 1068  00001bd0          	L66_LF2:
 1069  00001bd0  8fc1fff4	lw	r1,-12(r30)
 1070  00001bd4  00011820	add	r3,r0,r1
 1071  00001bd8  50620002	slli	r2,r3,#0x2
 1072  00001bdc  00411020	add	r2,r2,r1
 1073  00001be0  50410001	slli	r1,r2,#0x1
 1074  00001be4  afc1fff4	sw	-12(r30),r1
 1075  00001be8  0bffffc8	j	L64_LF2
 1076  00001bec  54000000	nop; delay slot nop
 1077  00001bf0          	L65_LF2:
 1078  00001bf0  54000000	nop
 1079  00001bf4          	L68_LF2:
 1080  00001bf4  8fc1fff4	lw	r1,-12(r30)
 1081  00001bf8  2002000a	addi	r2,r0,#10
 1082  00001bfc  00200035	movi2fp	f0,r1
 1083  00001c00  00400835	movi2fp	f1,r2
 1084  00001c04  0401000f	div	f0,f0,f1
 1085  00001c08  00000834	movfp2i	r1,f0
 1086  00001c0c  afc1fff4	sw	-12(r30),r1
 1087  00001c10  8fc10004	lw	r1,4(r30)
 1088  00001c14  20220001	addi	r2,r1,#1
 1089  00001c18  afc20004	sw	4(r30),r2
 1090  00001c1c  8fc20000	lw	r2,(r30)
 1091  00001c20  8fc3fff4	lw	r3,-12(r30)
 1092  00001c24  00400035	movi2fp	f0,r2
 1093  00001c28  00600835	movi2fp	f1,r3
 1094  00001c2c  0401000f	div	f0,f0,f1
 1095  00001c30  00001034	movfp2i	r2,f0
 1096  00001c34  00021820	add	r3,r0,r2
 1097  00001c38  20620030	addi	r2,r3,#48
 1098  00001c3c  a0220000	sb	(r1),r2
 1099  00001c40  8fc10000	lw	r1,(r30)
 1100  00001c44  8fc3fff4	lw	r3,-12(r30)
 1101  00001c48  00200035	movi2fp	f0,r1
 1102  00001c4c  00600835	movi2fp	f1,r3
 1103  00001c50  0401000f	div	f0,f0,f1
 1104  00001c54  00001034	movfp2i	r2,f0
 1105  00001c58  8fc3fff4	lw	r3,-12(r30)
 1106  00001c5c  00400035	movi2fp	f0,r2
 1107  00001c60  00600835	movi2fp	f1,r3
 1108  00001c64  0401000e	mult	f0,f0,f1
 1109  00001c68  00001034	movfp2i	r2,f0
 1110  00001c6c  00220822	sub	r1,r1,r2
 1111  00001c70  afc10000	sw	(r30),r1
 1112  00001c74          	L70_LF2:
 1113  00001c74  8fc1fff4	lw	r1,-12(r30)
 1114  00001c78  6c220001	sgti	r2,r1,#1
 1115  00001c7c  1440000c	bnez	r2,L71_LF2
 1116  00001c80  54000000	nop; delay slot nop
 1117  00001c84  0800000c	j	L61_LF2
 1118  00001c88  54000000	nop; delay slot nop
 1119  00001c8c          	L71_LF2:
 1120  00001c8c  0bffff64	j	L68_LF2
 1121  00001c90  54000000	nop; delay slot nop
 1122  00001c94          	L69_LF2:
 1123  00001c94          	L63_LF2:
 1124  00001c94          	L61_LF2:
 1125  00001c94  8fc10004	lw	r1,4(r30)
 1126  00001c98  20020000	addi	r2,r0,(#0x0)&0xff
 1127  00001c9c  a0220000	sb	(r1),r2
 1128  00001ca0          	L59_LF2:
 1129  00001ca0  8fa20000	lw	r2,0(r29)
 1130  00001ca4  8fa30004	lw	r3,4(r29)
 1131  00001ca8  8fdffff8	lw	r31,-8(r30)
 1132  00001cac  001ee820	add	r29,r0,r30
 1133  00001cb0  8fdefffc	lw	r30,-4(r30)
 1134  00001cb4  4be00000	jr	r31
 1135  00001cb8  54000000	nop
 1136  00001cbc          	.endproc _ditoa
 1137  00001cbc          	.align 2
 1138  00001cbc          	.proc _dstrtol
 1139  00001cbc          	.global _dstrtol
 1140  00001cbc          	_dstrtol:
 1141                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1142  00001cbc  afbefffc	sw	-4(r29),r30; push fp
 1143  00001cc0  001df020	add	r30,r0,r29; fp = sp
 1144  00001cc4  afbffff8	sw	-8(r29),r31; push ret addr
 1145  00001cc8  2fbd0020	subui	r29,r29,#32; alloc local storage
 1146  00001ccc  afa20000	sw	0(r29),r2
 1147  00001cd0  20010000	addi	r1,r0,#0
 1148  00001cd4  afc1fff4	sw	-12(r30),r1
 1149  00001cd8          	L73_LF2:
 1150  00001cd8  8fc10000	lw	r1,(r30)
 1151  00001cdc  90220000	lbu	r2,(r1)
 1152  00001ce0  60410020	seqi	r1,r2,#32
 1153  00001ce4  14200034	bnez	r1,L75_LF2
 1154  00001ce8  54000000	nop; delay slot nop
 1155  00001cec  8fc10000	lw	r1,(r30)
 1156  00001cf0  90220000	lbu	r2,(r1)
 1157  00001cf4  60410009	seqi	r1,r2,#9
 1158  00001cf8  14200020	bnez	r1,L75_LF2
 1159  00001cfc  54000000	nop; delay slot nop
 1160  00001d00  8fc10000	lw	r1,(r30)
 1161  00001d04  90220000	lbu	r2,(r1)
 1162  00001d08  6041000a	seqi	r1,r2,#10
 1163  00001d0c  1420000c	bnez	r1,L75_LF2
 1164  00001d10  54000000	nop; delay slot nop
 1165  00001d14  0800001c	j	L74_LF2
 1166  00001d18  54000000	nop; delay slot nop
 1167  00001d1c          	L75_LF2:
 1168  00001d1c  8fc20000	lw	r2,(r30)
 1169  00001d20  20410001	addi	r1,r2,#1
 1170  00001d24  00011020	add	r2,r0,r1
 1171  00001d28  afc20000	sw	(r30),r2
 1172  00001d2c  0bffffa8	j	L73_LF2
 1173  00001d30  54000000	nop; delay slot nop
 1174  00001d34          	L74_LF2:
 1175  00001d34  8fc10004	lw	r1,4(r30)
 1176  00001d38  64220000	snei	r2,r1,#0
 1177  00001d3c  10400010	beqz	r2,L76_LF2
 1178  00001d40  54000000	nop; delay slot nop
 1179  00001d44  8fc10004	lw	r1,4(r30)
 1180  00001d48  8fc20000	lw	r2,(r30)
 1181  00001d4c  ac220000	sw	(r1),r2
 1182  00001d50          	L76_LF2:
 1183  00001d50  8fc10000	lw	r1,(r30)
 1184  00001d54  90220000	lbu	r2,(r1)
 1185  00001d58  64410000	snei	r1,r2,#0
 1186  00001d5c  14200010	bnez	r1,L77_LF2
 1187  00001d60  54000000	nop; delay slot nop
 1188  00001d64  8fc1fff4	lw	r1,-12(r30)
 1189  00001d68  08000294	j	L72_LF2
 1190  00001d6c  54000000	nop; delay slot nop
 1191  00001d70          	L77_LF2:
 1192  00001d70  8fc10000	lw	r1,(r30)
 1193  00001d74  90220000	lbu	r2,(r1)
 1194  00001d78  6041002d	seqi	r1,r2,#45
 1195  00001d7c  10200024	beqz	r1,L78_LF2
 1196  00001d80  54000000	nop; delay slot nop
 1197  00001d84  2001ffff	addi	r1,r0,#-1
 1198  00001d88  afc1ffec	sw	-20(r30),r1
 1199  00001d8c  8fc20000	lw	r2,(r30)
 1200  00001d90  20410001	addi	r1,r2,#1
 1201  00001d94  00011020	add	r2,r0,r1
 1202  00001d98  afc20000	sw	(r30),r2
 1203  00001d9c  0800000c	j	L79_LF2
 1204  00001da0  54000000	nop; delay slot nop
 1205  00001da4          	L78_LF2:
 1206  00001da4  20010001	addi	r1,r0,#1
 1207  00001da8  afc1ffec	sw	-20(r30),r1
 1208  00001dac          	L79_LF2:
 1209  00001dac  8fc10008	lw	r1,8(r30)
 1210  00001db0  64220000	snei	r2,r1,#0
 1211  00001db4  14400090	bnez	r2,L80_LF2
 1212  00001db8  54000000	nop; delay slot nop
 1213  00001dbc  8fc10000	lw	r1,(r30)
 1214  00001dc0  90220000	lbu	r2,(r1)
 1215  00001dc4  60410030	seqi	r1,r2,#48
 1216  00001dc8  10200074	beqz	r1,L81_LF2
 1217  00001dcc  54000000	nop; delay slot nop
 1218  00001dd0  8fc20000	lw	r2,(r30)
 1219  00001dd4  20410001	addi	r1,r2,#1
 1220  00001dd8  00011020	add	r2,r0,r1
 1221  00001ddc  afc20000	sw	(r30),r2
 1222  00001de0  8fc10000	lw	r1,(r30)
 1223  00001de4  90220000	lbu	r2,(r1)
 1224  00001de8  60410078	seqi	r1,r2,#120
 1225  00001dec  14200020	bnez	r1,L83_LF2
 1226  00001df0  54000000	nop; delay slot nop
 1227  00001df4  8fc10000	lw	r1,(r30)
 1228  00001df8  90220000	lbu	r2,(r1)
 1229  00001dfc  60410058	seqi	r1,r2,#88
 1230  00001e00  1420000c	bnez	r1,L83_LF2
 1231  00001e04  54000000	nop; delay slot nop
 1232  00001e08  08000024	j	L82_LF2
 1233  00001e0c  54000000	nop; delay slot nop
 1234  00001e10          	L83_LF2:
 1235  00001e10  20010010	addi	r1,r0,#16
 1236  00001e14  afc10008	sw	8(r30),r1
 1237  00001e18  8fc20000	lw	r2,(r30)
 1238  00001e1c  20410001	addi	r1,r2,#1
 1239  00001e20  00011020	add	r2,r0,r1
 1240  00001e24  afc20000	sw	(r30),r2
 1241  00001e28  0800000c	j	L84_LF2
 1242  00001e2c  54000000	nop; delay slot nop
 1243  00001e30          	L82_LF2:
 1244  00001e30  20010008	addi	r1,r0,#8
 1245  00001e34  afc10008	sw	8(r30),r1
 1246  00001e38          	L84_LF2:
 1247  00001e38  0800000c	j	L80_LF2
 1248  00001e3c  54000000	nop; delay slot nop
 1249  00001e40          	L81_LF2:
 1250  00001e40  2001000a	addi	r1,r0,#10
 1251  00001e44  afc10008	sw	8(r30),r1
 1252  00001e48          	L85_LF2:
 1253  00001e48          	L80_LF2:
 1254  00001e48  8fc10008	lw	r1,8(r30)
 1255  00001e4c  70220000	slei	r2,r1,#0
 1256  00001e50  1440001c	bnez	r2,L87_LF2
 1257  00001e54  54000000	nop; delay slot nop
 1258  00001e58  8fc10008	lw	r1,8(r30)
 1259  00001e5c  6c220010	sgti	r2,r1,#16
 1260  00001e60  1440000c	bnez	r2,L87_LF2
 1261  00001e64  54000000	nop; delay slot nop
 1262  00001e68  08000010	j	L86_LF2
 1263  00001e6c  54000000	nop; delay slot nop
 1264  00001e70          	L87_LF2:
 1265  00001e70  8fc1fff4	lw	r1,-12(r30)
 1266  00001e74  08000188	j	L72_LF2
 1267  00001e78  54000000	nop; delay slot nop
 1268  00001e7c          	L86_LF2:
 1269  00001e7c  54000000	nop
 1270  00001e80          	L88_LF2:
 1271  00001e80  8fc10000	lw	r1,(r30)
 1272  00001e84  90220000	lbu	r2,(r1)
 1273  00001e88  6c41002f	sgtui	r1,r2,#47
 1274  00001e8c  10200030	beqz	r1,L91_LF2
 1275  00001e90  54000000	nop; delay slot nop
 1276  00001e94  8fc10000	lw	r1,(r30)
 1277  00001e98  90220000	lbu	r2,(r1)
 1278  00001e9c  70410039	sleui	r1,r2,#57
 1279  00001ea0  1020001c	beqz	r1,L91_LF2
 1280  00001ea4  54000000	nop; delay slot nop
 1281  00001ea8  8fc10000	lw	r1,(r30)
 1282  00001eac  90220000	lbu	r2,(r1)
 1283  00001eb0  2041ffd0	addi	r1,r2,#-48
 1284  00001eb4  afc1fff0	sw	-16(r30),r1
 1285  00001eb8  0800008c	j	L92_LF2
 1286  00001ebc  54000000	nop; delay slot nop
 1287  00001ec0          	L91_LF2:
 1288  00001ec0  8fc10000	lw	r1,(r30)
 1289  00001ec4  90220000	lbu	r2,(r1)
 1290  00001ec8  6c410060	sgtui	r1,r2,#96
 1291  00001ecc  10200030	beqz	r1,L93_LF2
 1292  00001ed0  54000000	nop; delay slot nop
 1293  00001ed4  8fc10000	lw	r1,(r30)
 1294  00001ed8  90220000	lbu	r2,(r1)
 1295  00001edc  7041007a	sleui	r1,r2,#122
 1296  00001ee0  1020001c	beqz	r1,L93_LF2
 1297  00001ee4  54000000	nop; delay slot nop
 1298  00001ee8  8fc10000	lw	r1,(r30)
 1299  00001eec  90220000	lbu	r2,(r1)
 1300  00001ef0  2041ffa9	addi	r1,r2,#-87
 1301  00001ef4  afc1fff0	sw	-16(r30),r1
 1302  00001ef8  0800004c	j	L92_LF2
 1303  00001efc  54000000	nop; delay slot nop
 1304  00001f00          	L93_LF2:
 1305  00001f00  8fc10000	lw	r1,(r30)
 1306  00001f04  90220000	lbu	r2,(r1)
 1307  00001f08  6c410040	sgtui	r1,r2,#64
 1308  00001f0c  10200030	beqz	r1,L95_LF2
 1309  00001f10  54000000	nop; delay slot nop
 1310  00001f14  8fc10000	lw	r1,(r30)
 1311  00001f18  90220000	lbu	r2,(r1)
 1312  00001f1c  7041005a	sleui	r1,r2,#90
 1313  00001f20  1020001c	beqz	r1,L95_LF2
 1314  00001f24  54000000	nop; delay slot nop
 1315  00001f28  8fc10000	lw	r1,(r30)
 1316  00001f2c  90220000	lbu	r2,(r1)
 1317  00001f30  2041ffc9	addi	r1,r2,#-55
 1318  00001f34  afc1fff0	sw	-16(r30),r1
 1319  00001f38  0800000c	j	L92_LF2
 1320  00001f3c  54000000	nop; delay slot nop
 1321  00001f40          	L95_LF2:
 1322  00001f40  200103e8	addi	r1,r0,#1000
 1323  00001f44  afc1fff0	sw	-16(r30),r1
 1324  00001f48          	L96_LF2:
 1325  00001f48          	L94_LF2:
 1326  00001f48          	L92_LF2:
 1327  00001f48  8fc1fff0	lw	r1,-16(r30)
 1328  00001f4c  8fc20008	lw	r2,8(r30)
 1329  00001f50  0022082a	slt	r1,r1,r2
 1330  00001f54  10200040	beqz	r1,L90_LF2
 1331  00001f58  54000000	nop; delay slot nop
 1332  00001f5c  8fc1fff4	lw	r1,-12(r30)
 1333  00001f60  8fc20008	lw	r2,8(r30)
 1334  00001f64  00200035	movi2fp	f0,r1
 1335  00001f68  00400835	movi2fp	f1,r2
 1336  00001f6c  0401000e	mult	f0,f0,f1
 1337  00001f70  00000834	movfp2i	r1,f0
 1338  00001f74  afc1fff4	sw	-12(r30),r1
 1339  00001f78  8fc1fff4	lw	r1,-12(r30)
 1340  00001f7c  8fc2fff0	lw	r2,-16(r30)
 1341  00001f80  00220820	add	r1,r1,r2
 1342  00001f84  afc1fff4	sw	-12(r30),r1
 1343  00001f88  8fc20000	lw	r2,(r30)
 1344  00001f8c  20410001	addi	r1,r2,#1
 1345  00001f90  00011020	add	r2,r0,r1
 1346  00001f94  afc20000	sw	(r30),r2
 1347  00001f98          	L97_LF2:
 1348  00001f98          	L90_LF2:
 1349  00001f98  8fc1fff0	lw	r1,-16(r30)
 1350  00001f9c  8fc20008	lw	r2,8(r30)
 1351  00001fa0  0022082a	slt	r1,r1,r2
 1352  00001fa4  1420000c	bnez	r1,L98_LF2
 1353  00001fa8  54000000	nop; delay slot nop
 1354  00001fac  0800000c	j	L89_LF2
 1355  00001fb0  54000000	nop; delay slot nop
 1356  00001fb4          	L98_LF2:
 1357  00001fb4  0bfffec8	j	L88_LF2
 1358  00001fb8  54000000	nop; delay slot nop
 1359  00001fbc          	L89_LF2:
 1360  00001fbc  8fc10004	lw	r1,4(r30)
 1361  00001fc0  64220000	snei	r2,r1,#0
 1362  00001fc4  10400010	beqz	r2,L99_LF2
 1363  00001fc8  54000000	nop; delay slot nop
 1364  00001fcc  8fc10004	lw	r1,4(r30)
 1365  00001fd0  8fc20000	lw	r2,(r30)
 1366  00001fd4  ac220000	sw	(r1),r2
 1367  00001fd8          	L99_LF2:
 1368  00001fd8  8fc1fff4	lw	r1,-12(r30)
 1369  00001fdc  8fc2ffec	lw	r2,-20(r30)
 1370  00001fe0  00200035	movi2fp	f0,r1
 1371  00001fe4  00400835	movi2fp	f1,r2
 1372  00001fe8  0401000e	mult	f0,f0,f1
 1373  00001fec  00000834	movfp2i	r1,f0
 1374  00001ff0  afc1fff4	sw	-12(r30),r1
 1375  00001ff4  8fc1fff4	lw	r1,-12(r30)
 1376  00001ff8  08000004	j	L72_LF2
 1377  00001ffc  54000000	nop; delay slot nop
 1378  00002000          	L72_LF2:
 1379  00002000  8fa20000	lw	r2,0(r29)
 1380  00002004  8fdffff8	lw	r31,-8(r30)
 1381  00002008  001ee820	add	r29,r0,r30
 1382  0000200c  8fdefffc	lw	r30,-4(r30)
 1383  00002010  4be00000	jr	r31
 1384  00002014  54000000	nop
 1385  00002018          	.endproc _dstrtol
 1386  00002018          	.align 2
 1387  00002018          	.proc _bcopy
 1388  00002018          	.global _bcopy
 1389  00002018          	_bcopy:
 1390                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1391  00002018  afbefffc	sw	-4(r29),r30; push fp
 1392  0000201c  001df020	add	r30,r0,r29; fp = sp
 1393  00002020  afbffff8	sw	-8(r29),r31; push ret addr
 1394  00002024  2fbd0010	subui	r29,r29,#16; alloc local storage
 1395  00002028  afa20000	sw	0(r29),r2
 1396  0000202c  afa30004	sw	4(r29),r3
 1397  00002030  54000000	nop
 1398  00002034          	L101_LF2:
 1399  00002034  8fc10008	lw	r1,8(r30)
 1400  00002038  2022ffff	addi	r2,r1,#-1
 1401  0000203c  afc20008	sw	8(r30),r2
 1402  00002040  6c210000	sgti	r1,r1,#0
 1403  00002044  1420000c	bnez	r1,L103_LF2
 1404  00002048  54000000	nop; delay slot nop
 1405  0000204c  0800002c	j	L102_LF2
 1406  00002050  54000000	nop; delay slot nop
 1407  00002054          	L103_LF2:
 1408  00002054  8fc10004	lw	r1,4(r30)
 1409  00002058  20220001	addi	r2,r1,#1
 1410  0000205c  afc20004	sw	4(r30),r2
 1411  00002060  8fc20000	lw	r2,(r30)
 1412  00002064  20430001	addi	r3,r2,#1
 1413  00002068  afc30000	sw	(r30),r3
 1414  0000206c  80420000	lb	r2,(r2)
 1415  00002070  a0220000	sb	(r1),r2
 1416  00002074  0bffffbc	j	L101_LF2
 1417  00002078  54000000	nop; delay slot nop
 1418  0000207c          	L102_LF2:
 1419  0000207c          	L100_LF2:
 1420  0000207c  8fa20000	lw	r2,0(r29)
 1421  00002080  8fa30004	lw	r3,4(r29)
 1422  00002084  8fdffff8	lw	r31,-8(r30)
 1423  00002088  001ee820	add	r29,r0,r30
 1424  0000208c  8fdefffc	lw	r30,-4(r30)
 1425  00002090  4be00000	jr	r31
 1426  00002094  54000000	nop
 1427  00002098          	.endproc _bcopy
 1428  00002098          	.align 2
 1429  00002098          	.proc _bzero
 1430  00002098          	.global _bzero
 1431  00002098          	_bzero:
 1432                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1433  00002098  afbefffc	sw	-4(r29),r30; push fp
 1434  0000209c  001df020	add	r30,r0,r29; fp = sp
 1435  000020a0  afbffff8	sw	-8(r29),r31; push ret addr
 1436  000020a4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1437  000020a8  afa20000	sw	0(r29),r2
 1438  000020ac  54000000	nop
 1439  000020b0          	L105_LF2:
 1440  000020b0  8fc10004	lw	r1,4(r30)
 1441  000020b4  2022ffff	addi	r2,r1,#-1
 1442  000020b8  afc20004	sw	4(r30),r2
 1443  000020bc  6c210000	sgti	r1,r1,#0
 1444  000020c0  1420000c	bnez	r1,L107_LF2
 1445  000020c4  54000000	nop; delay slot nop
 1446  000020c8  08000020	j	L106_LF2
 1447  000020cc  54000000	nop; delay slot nop
 1448  000020d0          	L107_LF2:
 1449  000020d0  8fc10000	lw	r1,(r30)
 1450  000020d4  20220001	addi	r2,r1,#1
 1451  000020d8  afc20000	sw	(r30),r2
 1452  000020dc  20020000	addi	r2,r0,(#0x0)&0xff
 1453  000020e0  a0220000	sb	(r1),r2
 1454  000020e4  0bffffc8	j	L105_LF2
 1455  000020e8  54000000	nop; delay slot nop
 1456  000020ec          	L106_LF2:
 1457  000020ec          	L104_LF2:
 1458  000020ec  8fa20000	lw	r2,0(r29)
 1459  000020f0  8fdffff8	lw	r31,-8(r30)
 1460  000020f4  001ee820	add	r29,r0,r30
 1461  000020f8  8fdefffc	lw	r30,-4(r30)
 1462  000020fc  4be00000	jr	r31
 1463  00002100  54000000	nop
 1464  00002104          	.endproc _bzero
 1465  00002104          	.align 2
 1466  00002104          	.proc _min
 1467  00002104          	.global _min
 1468  00002104          	_min:
 1469                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1470  00002104  afbefffc	sw	-4(r29),r30; push fp
 1471  00002108  001df020	add	r30,r0,r29; fp = sp
 1472  0000210c  afbffff8	sw	-8(r29),r31; push ret addr
 1473  00002110  2fbd0010	subui	r29,r29,#16; alloc local storage
 1474  00002114  afa20000	sw	0(r29),r2
 1475  00002118  afa30004	sw	4(r29),r3
 1476  0000211c  8fc10000	lw	r1,(r30)
 1477  00002120  8fc20004	lw	r2,4(r30)
 1478  00002124  0022182c	sle	r3,r1,r2
 1479  00002128  14600008	bnez	r3,L109_LF2
 1480  0000212c  54000000	nop; delay slot nop
 1481  00002130  8fc10004	lw	r1,4(r30)
 1482  00002134          	L109_LF2:
 1483  00002134  08000004	j	L108_LF2
 1484  00002138  54000000	nop; delay slot nop
 1485  0000213c          	L108_LF2:
 1486  0000213c  8fa20000	lw	r2,0(r29)
 1487  00002140  8fa30004	lw	r3,4(r29)
 1488  00002144  8fdffff8	lw	r31,-8(r30)
 1489  00002148  001ee820	add	r29,r0,r30
 1490  0000214c  8fdefffc	lw	r30,-4(r30)
 1491  00002150  4be00000	jr	r31
 1492  00002154  54000000	nop
 1493  00002158          	.endproc _min
 1494                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1495                      ;;;
 1496                      ;;; Most of the traps are called in files from libtraps.
 1499  00002158          	.align 2
 1500  00002158          	.proc _exit
 1501  00002158          	.global _exit
 1502  00002158          	_exit:
 1503  00002158  44000300	trap	#0x300
 1504  0000215c  4be00000	jr	r31
 1505  00002160  54000000	nop
 1506  00002164          	.endproc _exit
 1508                      ; for the benefit of gcc.
 1509  00002164          	.proc ___main
 1510  00002164          	.global ___main
 1511  00002164          	___main:
 1512  00002164  4be00000	jr	r31
 1513  00002168  54000000	nop
 1514  0000216c          	.endproc ___main
 1515  0000216c          	.text
 1516  0000216c          	.global _etext
 1517  0000216c          	_etext:
 1518  0000216c          	.align 3
 1519  00002170          	.data
 1520  000030b7          	.global _edata
 1521  000030b7          	_edata:
